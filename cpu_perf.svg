<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2118.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2101" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2101" > </text>
<g id="frames">
<g >
<title>__softirqentry_text_start (217,655,000 samples, 0.02%)</title><rect x="1179.1" y="1845" width="0.2" height="15.0" fill="rgb(216,5,43)" rx="2" ry="2" />
<text  x="1182.09" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::_Deque_impl (3,079,838,792 samples, 0.23%)</title><rect x="271.4" y="1605" width="2.7" height="15.0" fill="rgb(250,83,48)" rx="2" ry="2" />
<text  x="274.39" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,541,888,667 samples, 0.19%)</title><rect x="738.2" y="1781" width="2.3" height="15.0" fill="rgb(210,210,39)" rx="2" ry="2" />
<text  x="741.25" y="1791.5" ></text>
</g>
<g >
<title>[snap] (516,759,013 samples, 0.04%)</title><rect x="1163.2" y="1973" width="0.4" height="15.0" fill="rgb(217,78,52)" rx="2" ry="2" />
<text  x="1166.19" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (464,233,251 samples, 0.03%)</title><rect x="831.6" y="1829" width="0.4" height="15.0" fill="rgb(237,168,32)" rx="2" ry="2" />
<text  x="834.58" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,375,740,588 samples, 0.10%)</title><rect x="796.1" y="1877" width="1.2" height="15.0" fill="rgb(207,97,48)" rx="2" ry="2" />
<text  x="799.06" y="1887.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (124,743,491 samples, 0.01%)</title><rect x="226.0" y="1461" width="0.1" height="15.0" fill="rgb(218,96,34)" rx="2" ry="2" />
<text  x="229.03" y="1471.5" ></text>
</g>
<g >
<title>select_idle_sibling (348,536,031 samples, 0.03%)</title><rect x="1035.8" y="1877" width="0.3" height="15.0" fill="rgb(253,78,19)" rx="2" ry="2" />
<text  x="1038.78" y="1887.5" ></text>
</g>
<g >
<title>do_anonymous_page (782,681,317 samples, 0.06%)</title><rect x="947.4" y="1909" width="0.7" height="15.0" fill="rgb(213,22,5)" rx="2" ry="2" />
<text  x="950.45" y="1919.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (135,398,363 samples, 0.01%)</title><rect x="490.5" y="1877" width="0.1" height="15.0" fill="rgb(210,110,2)" rx="2" ry="2" />
<text  x="493.53" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (176,844,372 samples, 0.01%)</title><rect x="619.1" y="1829" width="0.1" height="15.0" fill="rgb(239,209,31)" rx="2" ry="2" />
<text  x="622.06" y="1839.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (279,347,092 samples, 0.02%)</title><rect x="1188.4" y="1973" width="0.2" height="15.0" fill="rgb(247,224,18)" rx="2" ry="2" />
<text  x="1191.36" y="1983.5" ></text>
</g>
<g >
<title>pkgCache::GrpIterator::FindPreferredPkg (1,272,875,943 samples, 0.09%)</title><rect x="1052.8" y="1989" width="1.1" height="15.0" fill="rgb(231,140,43)" rx="2" ry="2" />
<text  x="1055.81" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="437" width="0.2" height="15.0" fill="rgb(213,27,41)" rx="2" ry="2" />
<text  x="1048.93" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (427,306,909 samples, 0.03%)</title><rect x="408.6" y="1781" width="0.4" height="15.0" fill="rgb(253,31,29)" rx="2" ry="2" />
<text  x="411.60" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::release (122,839,366 samples, 0.01%)</title><rect x="420.4" y="1829" width="0.1" height="15.0" fill="rgb(212,183,54)" rx="2" ry="2" />
<text  x="423.44" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (994,517,134 samples, 0.07%)</title><rect x="1161.1" y="2037" width="0.9" height="15.0" fill="rgb(245,100,6)" rx="2" ry="2" />
<text  x="1164.09" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1,544,421,025 samples, 0.11%)</title><rect x="1089.1" y="2037" width="1.4" height="15.0" fill="rgb(205,163,8)" rx="2" ry="2" />
<text  x="1092.14" y="2047.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (727,444,050 samples, 0.05%)</title><rect x="326.6" y="1589" width="0.6" height="15.0" fill="rgb(242,136,22)" rx="2" ry="2" />
<text  x="329.61" y="1599.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (352,298,760 samples, 0.03%)</title><rect x="1031.7" y="1893" width="0.3" height="15.0" fill="rgb(223,142,45)" rx="2" ry="2" />
<text  x="1034.71" y="1903.5" ></text>
</g>
<g >
<title>__x64_sys_read (502,852,770 samples, 0.04%)</title><rect x="1072.6" y="1973" width="0.4" height="15.0" fill="rgb(241,220,8)" rx="2" ry="2" />
<text  x="1075.60" y="1983.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_nodes (2,335,469,122 samples, 0.17%)</title><rect x="328.4" y="1605" width="2.1" height="15.0" fill="rgb(209,169,24)" rx="2" ry="2" />
<text  x="331.44" y="1615.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (467,529,224 samples, 0.03%)</title><rect x="426.5" y="1813" width="0.4" height="15.0" fill="rgb(250,179,15)" rx="2" ry="2" />
<text  x="429.48" y="1823.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (128,426,712 samples, 0.01%)</title><rect x="414.1" y="1685" width="0.1" height="15.0" fill="rgb(238,79,43)" rx="2" ry="2" />
<text  x="417.07" y="1695.5" ></text>
</g>
<g >
<title>pkgDebianIndexTargetFile::IndexFileName[abi:cxx11] (188,345,414 samples, 0.01%)</title><rect x="1084.3" y="2037" width="0.2" height="15.0" fill="rgb(237,102,43)" rx="2" ry="2" />
<text  x="1087.35" y="2047.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::load_hazptr_vals (547,016,016 samples, 0.04%)</title><rect x="1097.2" y="1925" width="0.5" height="15.0" fill="rgb(250,92,18)" rx="2" ry="2" />
<text  x="1100.25" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::exchange (4,944,309,778 samples, 0.36%)</title><rect x="339.7" y="1717" width="4.3" height="15.0" fill="rgb(214,53,53)" rx="2" ry="2" />
<text  x="342.72" y="1727.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (360,005,402 samples, 0.03%)</title><rect x="501.4" y="1861" width="0.3" height="15.0" fill="rgb(220,111,10)" rx="2" ry="2" />
<text  x="504.39" y="1871.5" ></text>
</g>
<g >
<title>unmap_single_vma (706,223,322 samples, 0.05%)</title><rect x="1088.0" y="1893" width="0.6" height="15.0" fill="rgb(209,70,24)" rx="2" ry="2" />
<text  x="1090.95" y="1903.5" ></text>
</g>
<g >
<title>folio_add_lru (568,556,791 samples, 0.04%)</title><rect x="968.2" y="1877" width="0.5" height="15.0" fill="rgb(251,50,32)" rx="2" ry="2" />
<text  x="971.19" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (12,703,307,110 samples, 0.93%)</title><rect x="871.3" y="1861" width="11.0" height="15.0" fill="rgb(242,181,43)" rx="2" ry="2" />
<text  x="874.31" y="1871.5" ></text>
</g>
<g >
<title>select_idle_core (175,571,892 samples, 0.01%)</title><rect x="1035.9" y="1845" width="0.2" height="15.0" fill="rgb(253,59,39)" rx="2" ry="2" />
<text  x="1038.93" y="1855.5" ></text>
</g>
<g >
<title>__x64_sys_membarrier (121,682,523 samples, 0.01%)</title><rect x="1097.1" y="1861" width="0.1" height="15.0" fill="rgb(226,185,32)" rx="2" ry="2" />
<text  x="1100.07" y="1871.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (292,523,447 samples, 0.02%)</title><rect x="268.0" y="1621" width="0.2" height="15.0" fill="rgb(217,76,29)" rx="2" ry="2" />
<text  x="270.99" y="1631.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (116,946,721 samples, 0.01%)</title><rect x="224.3" y="437" width="0.1" height="15.0" fill="rgb(254,48,53)" rx="2" ry="2" />
<text  x="227.33" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (10,492,980,560 samples, 0.77%)</title><rect x="882.5" y="1861" width="9.1" height="15.0" fill="rgb(230,83,8)" rx="2" ry="2" />
<text  x="885.54" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (184,415,229 samples, 0.01%)</title><rect x="224.3" y="741" width="0.2" height="15.0" fill="rgb(222,176,5)" rx="2" ry="2" />
<text  x="227.31" y="751.5" ></text>
</g>
<g >
<title>pick_next_task_fair (652,993,136 samples, 0.05%)</title><rect x="413.0" y="1605" width="0.6" height="15.0" fill="rgb(213,75,3)" rx="2" ry="2" />
<text  x="416.02" y="1615.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::getItem (1,035,187,210 samples, 0.08%)</title><rect x="487.3" y="1845" width="0.9" height="15.0" fill="rgb(228,82,39)" rx="2" ry="2" />
<text  x="490.31" y="1855.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (126,749,611 samples, 0.01%)</title><rect x="297.5" y="1557" width="0.1" height="15.0" fill="rgb(253,154,43)" rx="2" ry="2" />
<text  x="300.48" y="1567.5" ></text>
</g>
<g >
<title>pick_next_task (726,487,804 samples, 0.05%)</title><rect x="413.0" y="1621" width="0.6" height="15.0" fill="rgb(214,187,12)" rx="2" ry="2" />
<text  x="416.00" y="1631.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (191,799,730 samples, 0.01%)</title><rect x="1188.6" y="1973" width="0.2" height="15.0" fill="rgb(213,129,51)" rx="2" ry="2" />
<text  x="1191.61" y="1983.5" ></text>
</g>
<g >
<title>vmacache_find (184,282,035 samples, 0.01%)</title><rect x="1029.8" y="1941" width="0.1" height="15.0" fill="rgb(232,82,29)" rx="2" ry="2" />
<text  x="1032.78" y="1951.5" ></text>
</g>
<g >
<title>folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (564,521,843,887 samples, 41.50%)</title><rect x="26.3" y="1893" width="489.7" height="15.0" fill="rgb(216,160,17)" rx="2" ry="2" />
<text  x="29.31" y="1903.5" >folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char..</text>
</g>
<g >
<title>folly::to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (454,993,047 samples, 0.03%)</title><rect x="907.0" y="1909" width="0.4" height="15.0" fill="rgb(250,99,17)" rx="2" ry="2" />
<text  x="909.99" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2,948,764,664 samples, 0.22%)</title><rect x="838.1" y="1845" width="2.6" height="15.0" fill="rgb(236,36,32)" rx="2" ry="2" />
<text  x="841.12" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="501" width="0.2" height="15.0" fill="rgb(226,209,10)" rx="2" ry="2" />
<text  x="1048.93" y="511.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (181,283,308 samples, 0.01%)</title><rect x="290.1" y="1557" width="0.2" height="15.0" fill="rgb(221,214,11)" rx="2" ry="2" />
<text  x="293.13" y="1567.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_retire_mutable_children (442,403,464 samples, 0.03%)</title><rect x="225.8" y="1477" width="0.3" height="15.0" fill="rgb(209,85,42)" rx="2" ry="2" />
<text  x="228.76" y="1487.5" ></text>
</g>
<g >
<title>_fini (193,797,491 samples, 0.01%)</title><rect x="1051.0" y="2021" width="0.1" height="15.0" fill="rgb(213,185,18)" rx="2" ry="2" />
<text  x="1053.97" y="2031.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, false&gt;::_Head_base (325,914,991 samples, 0.02%)</title><rect x="429.0" y="1781" width="0.2" height="15.0" fill="rgb(223,6,1)" rx="2" ry="2" />
<text  x="431.96" y="1791.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (10,255,926,621 samples, 0.75%)</title><rect x="392.3" y="1781" width="8.9" height="15.0" fill="rgb(245,165,22)" rx="2" ry="2" />
<text  x="395.25" y="1791.5" ></text>
</g>
<g >
<title>new_sync_write (158,162,543 samples, 0.01%)</title><rect x="1092.4" y="1925" width="0.2" height="15.0" fill="rgb(232,23,0)" rx="2" ry="2" />
<text  x="1095.43" y="1935.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2,133,273,726 samples, 0.16%)</title><rect x="946.5" y="1973" width="1.8" height="15.0" fill="rgb(230,50,41)" rx="2" ry="2" />
<text  x="949.48" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1605" width="0.2" height="15.0" fill="rgb(247,44,50)" rx="2" ry="2" />
<text  x="1048.93" y="1615.5" ></text>
</g>
<g >
<title>GetIndexTargetsFor (122,512,323 samples, 0.01%)</title><rect x="1063.7" y="2021" width="0.1" height="15.0" fill="rgb(234,190,1)" rx="2" ry="2" />
<text  x="1066.73" y="2031.5" ></text>
</g>
<g >
<title>dequeue_task (198,253,477 samples, 0.01%)</title><rect x="946.7" y="1893" width="0.2" height="15.0" fill="rgb(212,68,53)" rx="2" ry="2" />
<text  x="949.74" y="1903.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_non_empty_list (56,657,849,818 samples, 4.16%)</title><rect x="100.3" y="1717" width="49.1" height="15.0" fill="rgb(217,11,31)" rx="2" ry="2" />
<text  x="103.27" y="1727.5" >foll..</text>
</g>
<g >
<title>folly::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (446,033,325,969 samples, 32.79%)</title><rect x="34.9" y="1861" width="386.8" height="15.0" fill="rgb(217,39,7)" rx="2" ry="2" />
<text  x="37.88" y="1871.5" >folly::detail::ConcurrentHashMapSegment&lt;std::__cxx11..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,740,191,603 samples, 0.13%)</title><rect x="449.5" y="1749" width="1.5" height="15.0" fill="rgb(230,19,43)" rx="2" ry="2" />
<text  x="452.53" y="1759.5" ></text>
</g>
<g >
<title>load_balance (557,917,887 samples, 0.04%)</title><rect x="965.6" y="1861" width="0.5" height="15.0" fill="rgb(206,182,5)" rx="2" ry="2" />
<text  x="968.64" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (10,687,122,770 samples, 0.79%)</title><rect x="609.3" y="1813" width="9.3" height="15.0" fill="rgb(242,159,43)" rx="2" ry="2" />
<text  x="612.29" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;void const*, false&gt;::_M_next (147,832,898 samples, 0.01%)</title><rect x="1106.2" y="1797" width="0.2" height="15.0" fill="rgb(244,168,11)" rx="2" ry="2" />
<text  x="1109.24" y="1807.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (3,393,777,657 samples, 0.25%)</title><rect x="828.2" y="1781" width="3.0" height="15.0" fill="rgb(211,156,23)" rx="2" ry="2" />
<text  x="831.24" y="1791.5" ></text>
</g>
<g >
<title>detach_tasks (355,816,691 samples, 0.03%)</title><rect x="1024.2" y="1829" width="0.3" height="15.0" fill="rgb(251,95,1)" rx="2" ry="2" />
<text  x="1027.18" y="1839.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (194,770,683 samples, 0.01%)</title><rect x="1073.9" y="1813" width="0.2" height="15.0" fill="rgb(243,62,31)" rx="2" ry="2" />
<text  x="1076.95" y="1823.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (411,578,122 samples, 0.03%)</title><rect x="749.1" y="1813" width="0.4" height="15.0" fill="rgb(252,223,32)" rx="2" ry="2" />
<text  x="752.13" y="1823.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (145,684,442 samples, 0.01%)</title><rect x="288.3" y="1573" width="0.1" height="15.0" fill="rgb(249,171,38)" rx="2" ry="2" />
<text  x="291.27" y="1583.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::exchange_head (294,495,852 samples, 0.02%)</title><rect x="182.9" y="1701" width="0.3" height="15.0" fill="rgb(238,3,9)" rx="2" ry="2" />
<text  x="185.91" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (153,139,887 samples, 0.01%)</title><rect x="432.4" y="1781" width="0.2" height="15.0" fill="rgb(237,79,10)" rx="2" ry="2" />
<text  x="435.43" y="1791.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,045,618,245 samples, 0.08%)</title><rect x="1006.6" y="2021" width="0.9" height="15.0" fill="rgb(239,57,0)" rx="2" ry="2" />
<text  x="1009.59" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1189" width="0.2" height="15.0" fill="rgb(229,181,20)" rx="2" ry="2" />
<text  x="1048.93" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash (486,566,171 samples, 0.04%)</title><rect x="1108.8" y="1813" width="0.4" height="15.0" fill="rgb(245,189,11)" rx="2" ry="2" />
<text  x="1111.83" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::call_push_links (845,653,515 samples, 0.06%)</title><rect x="62.0" y="1765" width="0.8" height="15.0" fill="rgb(226,176,14)" rx="2" ry="2" />
<text  x="65.04" y="1775.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (196,006,715 samples, 0.01%)</title><rect x="1071.1" y="2021" width="0.1" height="15.0" fill="rgb(226,131,46)" rx="2" ry="2" />
<text  x="1074.07" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (120,726,796 samples, 0.01%)</title><rect x="1189.5" y="1781" width="0.1" height="15.0" fill="rgb(215,144,7)" rx="2" ry="2" />
<text  x="1192.45" y="1791.5" ></text>
</g>
<g >
<title>available_idle_cpu (175,654,059 samples, 0.01%)</title><rect x="1036.1" y="1861" width="0.2" height="15.0" fill="rgb(234,138,30)" rx="2" ry="2" />
<text  x="1039.13" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (558,817,631 samples, 0.04%)</title><rect x="635.5" y="1829" width="0.5" height="15.0" fill="rgb(247,73,53)" rx="2" ry="2" />
<text  x="638.50" y="1839.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (1,036,937,641,690 samples, 76.22%)</title><rect x="10.0" y="2037" width="899.4" height="15.0" fill="rgb(243,168,30)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>cpuidle_enter (20,742,081,340 samples, 1.52%)</title><rect x="1165.2" y="1941" width="18.0" height="15.0" fill="rgb(252,129,37)" rx="2" ry="2" />
<text  x="1168.21" y="1951.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (4,927,026,690 samples, 0.36%)</title><rect x="222.5" y="1701" width="4.2" height="15.0" fill="rgb(250,24,4)" rx="2" ry="2" />
<text  x="225.47" y="1711.5" ></text>
</g>
<g >
<title>may_expand_vm (239,142,583 samples, 0.02%)</title><rect x="1030.8" y="1941" width="0.2" height="15.0" fill="rgb(241,213,12)" rx="2" ry="2" />
<text  x="1033.80" y="1951.5" ></text>
</g>
<g >
<title>folly::to_ascii_with&lt;10ul, folly::to_ascii_alphabet&lt;false&gt;, 20ul&gt; (144,864,028 samples, 0.01%)</title><rect x="709.4" y="1829" width="0.1" height="15.0" fill="rgb(207,149,51)" rx="2" ry="2" />
<text  x="712.40" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1237" width="0.2" height="15.0" fill="rgb(248,157,8)" rx="2" ry="2" />
<text  x="1048.93" y="1247.5" ></text>
</g>
<g >
<title>MMap::Map (162,743,757 samples, 0.01%)</title><rect x="1039.9" y="2037" width="0.2" height="15.0" fill="rgb(219,160,23)" rx="2" ry="2" />
<text  x="1042.94" y="2047.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (401,721,667 samples, 0.03%)</title><rect x="224.7" y="1301" width="0.3" height="15.0" fill="rgb(217,44,20)" rx="2" ry="2" />
<text  x="227.69" y="1311.5" ></text>
</g>
<g >
<title>folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (167,631,532 samples, 0.01%)</title><rect x="906.8" y="1909" width="0.2" height="15.0" fill="rgb(211,169,2)" rx="2" ry="2" />
<text  x="909.84" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (488,894,157 samples, 0.04%)</title><rect x="298.3" y="1541" width="0.5" height="15.0" fill="rgb(237,164,8)" rx="2" ry="2" />
<text  x="301.33" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (195,063,926 samples, 0.01%)</title><rect x="225.3" y="1317" width="0.2" height="15.0" fill="rgb(241,134,29)" rx="2" ry="2" />
<text  x="228.30" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (7,326,039,027 samples, 0.54%)</title><rect x="728.8" y="1813" width="6.4" height="15.0" fill="rgb(236,56,25)" rx="2" ry="2" />
<text  x="731.80" y="1823.5" ></text>
</g>
<g >
<title>__fgetws_chk (190,392,259 samples, 0.01%)</title><rect x="1162.8" y="1909" width="0.1" height="15.0" fill="rgb(223,109,6)" rx="2" ry="2" />
<text  x="1165.77" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11,138,953,389 samples, 0.82%)</title><rect x="768.9" y="1861" width="9.6" height="15.0" fill="rgb(254,126,9)" rx="2" ry="2" />
<text  x="771.87" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::downgrade_retire_immutable_descendants (176,460,625 samples, 0.01%)</title><rect x="60.4" y="1797" width="0.1" height="15.0" fill="rgb(215,214,0)" rx="2" ry="2" />
<text  x="63.36" y="1807.5" ></text>
</g>
<g >
<title>pkgPolicy::pkgPolicy (2,675,171,315 samples, 0.20%)</title><rect x="1052.3" y="2021" width="2.3" height="15.0" fill="rgb(244,122,11)" rx="2" ry="2" />
<text  x="1055.30" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (269,908,043 samples, 0.02%)</title><rect x="224.3" y="933" width="0.2" height="15.0" fill="rgb(223,79,49)" rx="2" ry="2" />
<text  x="227.30" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (776,632,069 samples, 0.06%)</title><rect x="908.4" y="1909" width="0.7" height="15.0" fill="rgb(219,129,16)" rx="2" ry="2" />
<text  x="911.39" y="1919.5" ></text>
</g>
<g >
<title>psi_group_change (127,933,908 samples, 0.01%)</title><rect x="966.4" y="1893" width="0.1" height="15.0" fill="rgb(237,113,6)" rx="2" ry="2" />
<text  x="969.36" y="1903.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (135,747,562 samples, 0.01%)</title><rect x="632.1" y="1781" width="0.1" height="15.0" fill="rgb(249,167,48)" rx="2" ry="2" />
<text  x="635.12" y="1791.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (269,908,043 samples, 0.02%)</title><rect x="224.3" y="837" width="0.2" height="15.0" fill="rgb(248,64,15)" rx="2" ry="2" />
<text  x="227.30" y="847.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_S_buffer_size (508,787,983 samples, 0.04%)</title><rect x="282.6" y="1573" width="0.4" height="15.0" fill="rgb(237,130,31)" rx="2" ry="2" />
<text  x="285.61" y="1583.5" ></text>
</g>
<g >
<title>std::pair&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (14,673,521,430 samples, 1.08%)</title><rect x="503.2" y="1861" width="12.7" height="15.0" fill="rgb(251,1,7)" rx="2" ry="2" />
<text  x="506.15" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,892,744,280 samples, 0.51%)</title><rect x="259.5" y="1525" width="6.0" height="15.0" fill="rgb(239,135,23)" rx="2" ry="2" />
<text  x="262.53" y="1535.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (638,247,119 samples, 0.05%)</title><rect x="892.0" y="1861" width="0.6" height="15.0" fill="rgb(213,53,41)" rx="2" ry="2" />
<text  x="895.05" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (254,207,719 samples, 0.02%)</title><rect x="287.3" y="1573" width="0.2" height="15.0" fill="rgb(216,45,5)" rx="2" ry="2" />
<text  x="290.27" y="1583.5" ></text>
</g>
<g >
<title>native_sched_clock (121,335,510 samples, 0.01%)</title><rect x="1183.0" y="1877" width="0.1" height="15.0" fill="rgb(228,179,23)" rx="2" ry="2" />
<text  x="1186.02" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt; &gt; (477,834,320 samples, 0.04%)</title><rect x="1055.8" y="2021" width="0.5" height="15.0" fill="rgb(205,31,17)" rx="2" ry="2" />
<text  x="1058.84" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (43,652,146,408 samples, 3.21%)</title><rect x="711.8" y="1829" width="37.9" height="15.0" fill="rgb(227,119,17)" rx="2" ry="2" />
<text  x="714.81" y="1839.5" >std..</text>
</g>
<g >
<title>__sysvec_call_function_single (393,989,503 samples, 0.03%)</title><rect x="1186.4" y="1893" width="0.4" height="15.0" fill="rgb(212,71,24)" rx="2" ry="2" />
<text  x="1189.42" y="1903.5" ></text>
</g>
<g >
<title>dequeue_entity (329,548,929 samples, 0.02%)</title><rect x="412.6" y="1589" width="0.3" height="15.0" fill="rgb(232,158,54)" rx="2" ry="2" />
<text  x="415.64" y="1599.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (331,455,101 samples, 0.02%)</title><rect x="831.3" y="1813" width="0.3" height="15.0" fill="rgb(227,191,16)" rx="2" ry="2" />
<text  x="834.29" y="1823.5" ></text>
</g>
<g >
<title>vfs_read (127,738,428 samples, 0.01%)</title><rect x="1050.3" y="1941" width="0.1" height="15.0" fill="rgb(243,205,30)" rx="2" ry="2" />
<text  x="1053.32" y="1951.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (1,490,499,491 samples, 0.11%)</title><rect x="272.3" y="1573" width="1.3" height="15.0" fill="rgb(252,113,11)" rx="2" ry="2" />
<text  x="275.33" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,365,143,704 samples, 0.17%)</title><rect x="1104.1" y="1781" width="2.0" height="15.0" fill="rgb(208,84,46)" rx="2" ry="2" />
<text  x="1107.06" y="1791.5" ></text>
</g>
<g >
<title>newidle_balance (218,990,769 samples, 0.02%)</title><rect x="947.0" y="1861" width="0.2" height="15.0" fill="rgb(236,218,14)" rx="2" ry="2" />
<text  x="949.99" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="469" width="0.2" height="15.0" fill="rgb(252,194,3)" rx="2" ry="2" />
<text  x="1048.93" y="479.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,871,218,493 samples, 0.14%)</title><rect x="1086.3" y="1973" width="1.6" height="15.0" fill="rgb(213,23,7)" rx="2" ry="2" />
<text  x="1089.29" y="1983.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (379,981,461 samples, 0.03%)</title><rect x="785.5" y="1845" width="0.3" height="15.0" fill="rgb(216,220,13)" rx="2" ry="2" />
<text  x="788.50" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (433,843,665 samples, 0.03%)</title><rect x="1086.7" y="1781" width="0.4" height="15.0" fill="rgb(234,103,23)" rx="2" ry="2" />
<text  x="1089.68" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::~_Deque_impl (313,513,461 samples, 0.02%)</title><rect x="325.9" y="1605" width="0.3" height="15.0" fill="rgb(233,41,28)" rx="2" ry="2" />
<text  x="328.89" y="1615.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (129,902,427 samples, 0.01%)</title><rect x="71.9" y="1685" width="0.1" height="15.0" fill="rgb(210,120,15)" rx="2" ry="2" />
<text  x="74.87" y="1695.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (225,717,852 samples, 0.02%)</title><rect x="1153.5" y="1877" width="0.2" height="15.0" fill="rgb(228,17,9)" rx="2" ry="2" />
<text  x="1156.53" y="1887.5" ></text>
</g>
<g >
<title>perf_iterate_sb (595,287,300 samples, 0.04%)</title><rect x="1031.5" y="1909" width="0.5" height="15.0" fill="rgb(239,91,8)" rx="2" ry="2" />
<text  x="1034.50" y="1919.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (171,512,200 samples, 0.01%)</title><rect x="967.5" y="1909" width="0.2" height="15.0" fill="rgb(206,50,21)" rx="2" ry="2" />
<text  x="970.54" y="1919.5" ></text>
</g>
<g >
<title>rwsem_optimistic_spin (12,529,697,452 samples, 0.92%)</title><rect x="1009.1" y="1925" width="10.9" height="15.0" fill="rgb(238,200,46)" rx="2" ry="2" />
<text  x="1012.13" y="1935.5" ></text>
</g>
<g >
<title>__addtf3 (193,074,340 samples, 0.01%)</title><rect x="1071.5" y="2021" width="0.2" height="15.0" fill="rgb(244,60,13)" rx="2" ry="2" />
<text  x="1074.55" y="2031.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (162,373,389 samples, 0.01%)</title><rect x="835.6" y="1845" width="0.1" height="15.0" fill="rgb(210,107,1)" rx="2" ry="2" />
<text  x="838.60" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (332,837,811 samples, 0.02%)</title><rect x="710.0" y="1845" width="0.3" height="15.0" fill="rgb(208,188,30)" rx="2" ry="2" />
<text  x="713.00" y="1855.5" ></text>
</g>
<g >
<title>RunJsonHook (385,153,016 samples, 0.03%)</title><rect x="1064.7" y="2021" width="0.3" height="15.0" fill="rgb(233,174,14)" rx="2" ry="2" />
<text  x="1067.67" y="2031.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (191,507,425 samples, 0.01%)</title><rect x="1185.5" y="1973" width="0.2" height="15.0" fill="rgb(211,208,17)" rx="2" ry="2" />
<text  x="1188.53" y="1983.5" ></text>
</g>
<g >
<title>ksys_write (217,559,854 samples, 0.02%)</title><rect x="1078.9" y="1973" width="0.2" height="15.0" fill="rgb(212,162,51)" rx="2" ry="2" />
<text  x="1081.88" y="1983.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (2,261,388,148 samples, 0.17%)</title><rect x="271.7" y="1589" width="1.9" height="15.0" fill="rgb(250,183,22)" rx="2" ry="2" />
<text  x="274.66" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (314,377,524 samples, 0.02%)</title><rect x="570.5" y="1845" width="0.3" height="15.0" fill="rgb(209,207,53)" rx="2" ry="2" />
<text  x="573.51" y="1855.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (713,675,246 samples, 0.05%)</title><rect x="358.5" y="1765" width="0.7" height="15.0" fill="rgb(211,207,4)" rx="2" ry="2" />
<text  x="361.53" y="1775.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (396,647,977 samples, 0.03%)</title><rect x="229.4" y="1621" width="0.4" height="15.0" fill="rgb(208,114,11)" rx="2" ry="2" />
<text  x="232.43" y="1631.5" ></text>
</g>
<g >
<title>vfs_write (217,559,854 samples, 0.02%)</title><rect x="1078.9" y="1957" width="0.2" height="15.0" fill="rgb(210,113,19)" rx="2" ry="2" />
<text  x="1081.88" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (17,659,230,969 samples, 1.30%)</title><rect x="166.4" y="1717" width="15.3" height="15.0" fill="rgb(226,145,4)" rx="2" ry="2" />
<text  x="169.42" y="1727.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (163,017,616 samples, 0.01%)</title><rect x="1078.9" y="1925" width="0.2" height="15.0" fill="rgb(239,50,51)" rx="2" ry="2" />
<text  x="1081.93" y="1935.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (175,242,267 samples, 0.01%)</title><rect x="289.5" y="1573" width="0.2" height="15.0" fill="rgb(211,34,47)" rx="2" ry="2" />
<text  x="292.52" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (157,378,998 samples, 0.01%)</title><rect x="321.5" y="1573" width="0.1" height="15.0" fill="rgb(243,165,13)" rx="2" ry="2" />
<text  x="324.49" y="1583.5" ></text>
</g>
<g >
<title>down_read (902,758,989 samples, 0.07%)</title><rect x="946.5" y="1957" width="0.8" height="15.0" fill="rgb(241,116,39)" rx="2" ry="2" />
<text  x="949.51" y="1967.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_head (39,515,608,558 samples, 2.90%)</title><rect x="101.3" y="1701" width="34.3" height="15.0" fill="rgb(249,67,24)" rx="2" ry="2" />
<text  x="104.31" y="1711.5" >fo..</text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1173" width="0.4" height="15.0" fill="rgb(214,224,40)" rx="2" ry="2" />
<text  x="227.27" y="1183.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (156,727,209 samples, 0.01%)</title><rect x="88.8" y="1733" width="0.2" height="15.0" fill="rgb(222,161,48)" rx="2" ry="2" />
<text  x="91.84" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_create_nodes (3,373,403,533 samples, 0.25%)</title><rect x="73.7" y="1701" width="2.9" height="15.0" fill="rgb(226,174,45)" rx="2" ry="2" />
<text  x="76.72" y="1711.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (175,800,946 samples, 0.01%)</title><rect x="1008.9" y="1909" width="0.2" height="15.0" fill="rgb(242,60,37)" rx="2" ry="2" />
<text  x="1011.92" y="1919.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,293,130,819 samples, 0.17%)</title><rect x="819.1" y="1829" width="1.9" height="15.0" fill="rgb(248,127,37)" rx="2" ry="2" />
<text  x="822.06" y="1839.5" ></text>
</g>
<g >
<title>up_read (384,622,317 samples, 0.03%)</title><rect x="972.8" y="1989" width="0.3" height="15.0" fill="rgb(245,40,31)" rx="2" ry="2" />
<text  x="975.81" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1701" width="0.2" height="15.0" fill="rgb(233,114,40)" rx="2" ry="2" />
<text  x="1048.93" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::begin (1,259,447,780 samples, 0.09%)</title><rect x="291.3" y="1621" width="1.1" height="15.0" fill="rgb(235,103,52)" rx="2" ry="2" />
<text  x="294.29" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (557,765,492 samples, 0.04%)</title><rect x="760.6" y="1877" width="0.4" height="15.0" fill="rgb(205,63,8)" rx="2" ry="2" />
<text  x="763.56" y="1887.5" ></text>
</g>
<g >
<title>psi_task_switch (140,643,558 samples, 0.01%)</title><rect x="413.7" y="1621" width="0.1" height="15.0" fill="rgb(214,78,9)" rx="2" ry="2" />
<text  x="416.65" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (158,383,330 samples, 0.01%)</title><rect x="241.4" y="1557" width="0.1" height="15.0" fill="rgb(228,166,52)" rx="2" ry="2" />
<text  x="244.41" y="1567.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1,235,373,694 samples, 0.09%)</title><rect x="463.8" y="1749" width="1.1" height="15.0" fill="rgb(238,171,14)" rx="2" ry="2" />
<text  x="466.83" y="1759.5" ></text>
</g>
<g >
<title>generic_file_read_iter (330,349,615 samples, 0.02%)</title><rect x="1091.9" y="1893" width="0.3" height="15.0" fill="rgb(211,147,39)" rx="2" ry="2" />
<text  x="1094.89" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (347,824,818 samples, 0.03%)</title><rect x="239.4" y="1573" width="0.3" height="15.0" fill="rgb(244,109,6)" rx="2" ry="2" />
<text  x="242.43" y="1583.5" ></text>
</g>
<g >
<title>handle_mm_fault (5,384,683,240 samples, 0.40%)</title><rect x="966.8" y="1973" width="4.7" height="15.0" fill="rgb(224,151,14)" rx="2" ry="2" />
<text  x="969.80" y="1983.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::set_head (623,228,291 samples, 0.05%)</title><rect x="99.7" y="1701" width="0.5" height="15.0" fill="rgb(209,7,21)" rx="2" ry="2" />
<text  x="102.66" y="1711.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (353,750,311 samples, 0.03%)</title><rect x="818.8" y="1829" width="0.3" height="15.0" fill="rgb(227,11,44)" rx="2" ry="2" />
<text  x="821.75" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (344,866,648,739 samples, 25.35%)</title><rect x="60.6" y="1797" width="299.1" height="15.0" fill="rgb(216,138,15)" rx="2" ry="2" />
<text  x="63.58" y="1807.5" >folly::hazptr_obj_base_linked&lt;folly::det..</text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (171,153,993 samples, 0.01%)</title><rect x="322.3" y="1589" width="0.1" height="15.0" fill="rgb(238,228,3)" rx="2" ry="2" />
<text  x="325.25" y="1599.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (342,311,914 samples, 0.03%)</title><rect x="1036.9" y="1845" width="0.3" height="15.0" fill="rgb(227,139,47)" rx="2" ry="2" />
<text  x="1039.91" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::exchange_tail (433,367,007 samples, 0.03%)</title><rect x="183.2" y="1701" width="0.3" height="15.0" fill="rgb(219,157,31)" rx="2" ry="2" />
<text  x="186.16" y="1711.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (3,262,368,007 samples, 0.24%)</title><rect x="742.3" y="1749" width="2.9" height="15.0" fill="rgb(220,2,39)" rx="2" ry="2" />
<text  x="745.33" y="1759.5" ></text>
</g>
<g >
<title>newidle_balance (623,643,370 samples, 0.05%)</title><rect x="413.0" y="1589" width="0.6" height="15.0" fill="rgb(250,169,36)" rx="2" ry="2" />
<text  x="416.04" y="1599.5" ></text>
</g>
<g >
<title>[libc.so.6] (232,622,597 samples, 0.02%)</title><rect x="1162.7" y="2037" width="0.2" height="15.0" fill="rgb(248,78,49)" rx="2" ry="2" />
<text  x="1165.74" y="2047.5" ></text>
</g>
<g >
<title>select_idle_cpu (251,346,505 samples, 0.02%)</title><rect x="1035.9" y="1861" width="0.2" height="15.0" fill="rgb(250,229,46)" rx="2" ry="2" />
<text  x="1038.86" y="1871.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::deallocate (210,140,199 samples, 0.02%)</title><rect x="267.8" y="1621" width="0.2" height="15.0" fill="rgb(237,78,54)" rx="2" ry="2" />
<text  x="270.81" y="1631.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1,352,240,211 samples, 0.10%)</title><rect x="1180.1" y="1781" width="1.2" height="15.0" fill="rgb(215,159,4)" rx="2" ry="2" />
<text  x="1183.09" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_S_buffer_size (656,082,000 samples, 0.05%)</title><rect x="78.5" y="1685" width="0.6" height="15.0" fill="rgb(228,164,23)" rx="2" ry="2" />
<text  x="81.48" y="1695.5" ></text>
</g>
<g >
<title>do_exit (129,859,064 samples, 0.01%)</title><rect x="1096.0" y="1973" width="0.2" height="15.0" fill="rgb(217,211,42)" rx="2" ry="2" />
<text  x="1099.04" y="1983.5" ></text>
</g>
<g >
<title>ksys_read (342,674,394 samples, 0.03%)</title><rect x="1091.9" y="1957" width="0.3" height="15.0" fill="rgb(250,98,7)" rx="2" ry="2" />
<text  x="1094.89" y="1967.5" ></text>
</g>
<g >
<title>pkgPackageManager::CreateOrderList (239,947,960 samples, 0.02%)</title><rect x="1069.4" y="2005" width="0.2" height="15.0" fill="rgb(231,144,22)" rx="2" ry="2" />
<text  x="1072.41" y="2015.5" ></text>
</g>
<g >
<title>_fini (1,021,925,230 samples, 0.08%)</title><rect x="1046.4" y="2005" width="0.9" height="15.0" fill="rgb(238,73,33)" rx="2" ry="2" />
<text  x="1049.39" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;void const*&gt;::store (343,148,063 samples, 0.03%)</title><rect x="421.1" y="1829" width="0.3" height="15.0" fill="rgb(220,67,24)" rx="2" ry="2" />
<text  x="424.08" y="1839.5" ></text>
</g>
<g >
<title>release_pages (383,129,188 samples, 0.03%)</title><rect x="1088.2" y="1781" width="0.3" height="15.0" fill="rgb(245,174,27)" rx="2" ry="2" />
<text  x="1091.21" y="1791.5" ></text>
</g>
<g >
<title>folly::estimateSpaceNeeded&lt;unsigned long&gt; (37,975,746,349 samples, 2.79%)</title><rect x="531.3" y="1829" width="33.0" height="15.0" fill="rgb(232,52,2)" rx="2" ry="2" />
<text  x="534.35" y="1839.5" >fo..</text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~deque (11,988,641,384 samples, 0.88%)</title><rect x="81.3" y="1749" width="10.3" height="15.0" fill="rgb(233,41,41)" rx="2" ry="2" />
<text  x="84.25" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (191,342,085 samples, 0.01%)</title><rect x="468.9" y="1765" width="0.2" height="15.0" fill="rgb(213,117,46)" rx="2" ry="2" />
<text  x="471.89" y="1775.5" ></text>
</g>
<g >
<title>cpuidle_enter (809,838,948 samples, 0.06%)</title><rect x="1188.9" y="1877" width="0.7" height="15.0" fill="rgb(213,52,18)" rx="2" ry="2" />
<text  x="1191.87" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (222,449,167 samples, 0.02%)</title><rect x="285.3" y="1621" width="0.2" height="15.0" fill="rgb(216,108,38)" rx="2" ry="2" />
<text  x="288.27" y="1631.5" ></text>
</g>
<g >
<title>_fini (473,521,194 samples, 0.03%)</title><rect x="1092.9" y="2021" width="0.4" height="15.0" fill="rgb(250,171,13)" rx="2" ry="2" />
<text  x="1095.92" y="2031.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (130,009,075 samples, 0.01%)</title><rect x="967.6" y="1893" width="0.1" height="15.0" fill="rgb(211,225,17)" rx="2" ry="2" />
<text  x="970.55" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (274,649,595 samples, 0.02%)</title><rect x="1067.1" y="2005" width="0.2" height="15.0" fill="rgb(221,169,3)" rx="2" ry="2" />
<text  x="1070.06" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (371,350,012 samples, 0.03%)</title><rect x="907.4" y="1909" width="0.3" height="15.0" fill="rgb(227,208,49)" rx="2" ry="2" />
<text  x="910.38" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (151,833,964 samples, 0.01%)</title><rect x="351.4" y="1701" width="0.1" height="15.0" fill="rgb(239,205,3)" rx="2" ry="2" />
<text  x="354.39" y="1711.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (157,388,959 samples, 0.01%)</title><rect x="34.7" y="1861" width="0.2" height="15.0" fill="rgb(225,226,7)" rx="2" ry="2" />
<text  x="37.74" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (126,135,090 samples, 0.01%)</title><rect x="1097.1" y="1877" width="0.1" height="15.0" fill="rgb(251,125,26)" rx="2" ry="2" />
<text  x="1100.07" y="1887.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (537,912,997 samples, 0.04%)</title><rect x="1178.8" y="1893" width="0.5" height="15.0" fill="rgb(210,9,9)" rx="2" ry="2" />
<text  x="1181.82" y="1903.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,247,610,989 samples, 0.17%)</title><rect x="813.3" y="1829" width="1.9" height="15.0" fill="rgb(218,43,33)" rx="2" ry="2" />
<text  x="816.27" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (184,415,229 samples, 0.01%)</title><rect x="224.3" y="661" width="0.2" height="15.0" fill="rgb(214,202,25)" rx="2" ry="2" />
<text  x="227.31" y="671.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (10,377,582,829 samples, 0.76%)</title><rect x="284.4" y="1653" width="9.0" height="15.0" fill="rgb(208,157,9)" rx="2" ry="2" />
<text  x="287.42" y="1663.5" ></text>
</g>
<g >
<title>enqueue_task_fair (503,845,752 samples, 0.04%)</title><rect x="1184.9" y="1893" width="0.4" height="15.0" fill="rgb(233,60,13)" rx="2" ry="2" />
<text  x="1187.85" y="1903.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (3,717,886,662 samples, 0.27%)</title><rect x="1179.3" y="1909" width="3.2" height="15.0" fill="rgb(206,104,52)" rx="2" ry="2" />
<text  x="1182.29" y="1919.5" ></text>
</g>
<g >
<title>pkgPolicy::pkgPolicy (1,725,340,416 samples, 0.13%)</title><rect x="1075.1" y="2021" width="1.5" height="15.0" fill="rgb(243,112,39)" rx="2" ry="2" />
<text  x="1078.11" y="2031.5" ></text>
</g>
<g >
<title>enqueue_entity (338,767,444 samples, 0.02%)</title><rect x="1185.0" y="1877" width="0.2" height="15.0" fill="rgb(252,136,52)" rx="2" ry="2" />
<text  x="1187.96" y="1887.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (182,660,938 samples, 0.01%)</title><rect x="1162.8" y="1781" width="0.1" height="15.0" fill="rgb(230,158,35)" rx="2" ry="2" />
<text  x="1165.78" y="1791.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (297,333,557 samples, 0.02%)</title><rect x="1036.9" y="1813" width="0.3" height="15.0" fill="rgb(205,179,32)" rx="2" ry="2" />
<text  x="1039.94" y="1823.5" ></text>
</g>
<g >
<title>__schedule (678,919,610 samples, 0.05%)</title><rect x="946.7" y="1909" width="0.6" height="15.0" fill="rgb(220,180,23)" rx="2" ry="2" />
<text  x="949.67" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (538,670,495 samples, 0.04%)</title><rect x="63.3" y="1733" width="0.5" height="15.0" fill="rgb(207,69,27)" rx="2" ry="2" />
<text  x="66.32" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (185,250,340 samples, 0.01%)</title><rect x="1045.9" y="85" width="0.2" height="15.0" fill="rgb(250,215,21)" rx="2" ry="2" />
<text  x="1048.93" y="95.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="485" width="0.2" height="15.0" fill="rgb(217,198,12)" rx="2" ry="2" />
<text  x="1048.93" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (301,512,699 samples, 0.02%)</title><rect x="1178.8" y="1861" width="0.3" height="15.0" fill="rgb(241,153,15)" rx="2" ry="2" />
<text  x="1181.83" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (908,740,402 samples, 0.07%)</title><rect x="291.6" y="1605" width="0.8" height="15.0" fill="rgb(232,184,7)" rx="2" ry="2" />
<text  x="294.59" y="1615.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (276,037,875 samples, 0.02%)</title><rect x="1059.0" y="2037" width="0.2" height="15.0" fill="rgb(221,104,15)" rx="2" ry="2" />
<text  x="1062.01" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1045" width="0.2" height="15.0" fill="rgb(215,124,8)" rx="2" ry="2" />
<text  x="1048.93" y="1055.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (127,349,668 samples, 0.01%)</title><rect x="316.9" y="1557" width="0.1" height="15.0" fill="rgb(216,46,48)" rx="2" ry="2" />
<text  x="319.90" y="1567.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (125,934,052 samples, 0.01%)</title><rect x="224.3" y="453" width="0.1" height="15.0" fill="rgb(245,26,34)" rx="2" ry="2" />
<text  x="227.32" y="463.5" ></text>
</g>
<g >
<title>[unknown] (185,250,340 samples, 0.01%)</title><rect x="1045.9" y="69" width="0.2" height="15.0" fill="rgb(219,28,26)" rx="2" ry="2" />
<text  x="1048.93" y="79.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="405" width="0.2" height="15.0" fill="rgb(251,95,33)" rx="2" ry="2" />
<text  x="1048.93" y="415.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (60,625,948,619 samples, 4.46%)</title><rect x="422.8" y="1845" width="52.6" height="15.0" fill="rgb(237,128,9)" rx="2" ry="2" />
<text  x="425.81" y="1855.5" >folly..</text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (499,808,836 samples, 0.04%)</title><rect x="876.0" y="1845" width="0.4" height="15.0" fill="rgb(205,71,8)" rx="2" ry="2" />
<text  x="878.99" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (160,492,233 samples, 0.01%)</title><rect x="318.3" y="1557" width="0.2" height="15.0" fill="rgb(232,95,20)" rx="2" ry="2" />
<text  x="321.32" y="1567.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (156,290,326 samples, 0.01%)</title><rect x="421.8" y="1861" width="0.1" height="15.0" fill="rgb(236,51,32)" rx="2" ry="2" />
<text  x="424.80" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::hazptr_domain&lt;std::atomic&gt;*, folly::hazptr_domain&lt;std::atomic&gt;*&gt; (582,210,957 samples, 0.04%)</title><rect x="351.8" y="1749" width="0.5" height="15.0" fill="rgb(233,58,21)" rx="2" ry="2" />
<text  x="354.77" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count (974,443,609 samples, 0.07%)</title><rect x="354.4" y="1765" width="0.9" height="15.0" fill="rgb(238,0,13)" rx="2" ry="2" />
<text  x="357.44" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (5,758,230,518 samples, 0.42%)</title><rect x="613.3" y="1797" width="5.0" height="15.0" fill="rgb(215,61,54)" rx="2" ry="2" />
<text  x="616.27" y="1807.5" ></text>
</g>
<g >
<title>update_load_avg (119,014,441 samples, 0.01%)</title><rect x="1187.2" y="1893" width="0.1" height="15.0" fill="rgb(254,205,47)" rx="2" ry="2" />
<text  x="1190.25" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (499,933,023 samples, 0.04%)</title><rect x="225.1" y="1429" width="0.4" height="15.0" fill="rgb(252,104,40)" rx="2" ry="2" />
<text  x="228.10" y="1439.5" ></text>
</g>
<g >
<title>irqentry_exit (125,344,425 samples, 0.01%)</title><rect x="948.4" y="1973" width="0.1" height="15.0" fill="rgb(225,212,11)" rx="2" ry="2" />
<text  x="951.37" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (377,742,233 samples, 0.03%)</title><rect x="1161.5" y="2005" width="0.3" height="15.0" fill="rgb(228,118,42)" rx="2" ry="2" />
<text  x="1164.50" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (704,159,722 samples, 0.05%)</title><rect x="298.1" y="1557" width="0.7" height="15.0" fill="rgb(221,101,18)" rx="2" ry="2" />
<text  x="301.14" y="1567.5" ></text>
</g>
<g >
<title>CreateDumpFile (279,810,493 samples, 0.02%)</title><rect x="1062.7" y="2021" width="0.2" height="15.0" fill="rgb(216,1,0)" rx="2" ry="2" />
<text  x="1065.67" y="2031.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (339,124,836 samples, 0.02%)</title><rect x="319.2" y="1541" width="0.3" height="15.0" fill="rgb(237,111,6)" rx="2" ry="2" />
<text  x="322.18" y="1551.5" ></text>
</g>
<g >
<title>update_rq_clock (137,692,773 samples, 0.01%)</title><rect x="1160.7" y="1861" width="0.1" height="15.0" fill="rgb(230,189,6)" rx="2" ry="2" />
<text  x="1163.73" y="1871.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (152,763,261 samples, 0.01%)</title><rect x="789.6" y="1861" width="0.1" height="15.0" fill="rgb(233,125,3)" rx="2" ry="2" />
<text  x="792.61" y="1871.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (182,660,938 samples, 0.01%)</title><rect x="1162.8" y="1797" width="0.1" height="15.0" fill="rgb(205,129,12)" rx="2" ry="2" />
<text  x="1165.78" y="1807.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (599,534,725 samples, 0.04%)</title><rect x="1086.6" y="1845" width="0.5" height="15.0" fill="rgb(251,73,52)" rx="2" ry="2" />
<text  x="1089.62" y="1855.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (497,904,720 samples, 0.04%)</title><rect x="1072.6" y="1909" width="0.4" height="15.0" fill="rgb(245,25,39)" rx="2" ry="2" />
<text  x="1075.61" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1253" width="0.2" height="15.0" fill="rgb(229,153,30)" rx="2" ry="2" />
<text  x="1048.93" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Identity::operator (242,251,171 samples, 0.02%)</title><rect x="1105.4" y="1765" width="0.3" height="15.0" fill="rgb(236,28,26)" rx="2" ry="2" />
<text  x="1108.44" y="1775.5" ></text>
</g>
<g >
<title>CreateDumpFile (277,891,322 samples, 0.02%)</title><rect x="1041.4" y="2021" width="0.3" height="15.0" fill="rgb(232,168,46)" rx="2" ry="2" />
<text  x="1044.42" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (5,259,417,983 samples, 0.39%)</title><rect x="458.5" y="1749" width="4.6" height="15.0" fill="rgb(220,23,34)" rx="2" ry="2" />
<text  x="461.54" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (368,571,492 samples, 0.03%)</title><rect x="792.1" y="1893" width="0.3" height="15.0" fill="rgb(254,150,54)" rx="2" ry="2" />
<text  x="795.11" y="1903.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (131,459,678 samples, 0.01%)</title><rect x="330.5" y="1605" width="0.1" height="15.0" fill="rgb(250,217,23)" rx="2" ry="2" />
<text  x="333.50" y="1615.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_tail (2,185,884,925 samples, 0.16%)</title><rect x="97.8" y="1701" width="1.9" height="15.0" fill="rgb(226,121,54)" rx="2" ry="2" />
<text  x="100.76" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (117,593,205 samples, 0.01%)</title><rect x="624.4" y="1813" width="0.1" height="15.0" fill="rgb(214,118,23)" rx="2" ry="2" />
<text  x="627.44" y="1823.5" ></text>
</g>
<g >
<title>folly::to_ascii_size&lt;10ul&gt; (34,190,516,033 samples, 2.51%)</title><rect x="534.6" y="1797" width="29.7" height="15.0" fill="rgb(238,227,16)" rx="2" ry="2" />
<text  x="537.63" y="1807.5" >fo..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (961,623,487 samples, 0.07%)</title><rect x="292.6" y="1605" width="0.8" height="15.0" fill="rgb(212,133,53)" rx="2" ry="2" />
<text  x="295.59" y="1615.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::check_threshold_and_reclaim (944,411,196 samples, 0.07%)</title><rect x="184.5" y="1685" width="0.9" height="15.0" fill="rgb(205,178,39)" rx="2" ry="2" />
<text  x="187.54" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (1,136,499,406 samples, 0.08%)</title><rect x="332.1" y="1621" width="1.0" height="15.0" fill="rgb(254,208,3)" rx="2" ry="2" />
<text  x="335.10" y="1631.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (4,064,196,837 samples, 0.30%)</title><rect x="426.9" y="1813" width="3.5" height="15.0" fill="rgb(230,17,20)" rx="2" ry="2" />
<text  x="429.88" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (195,700,739 samples, 0.01%)</title><rect x="334.3" y="1637" width="0.2" height="15.0" fill="rgb(252,98,53)" rx="2" ry="2" />
<text  x="337.31" y="1647.5" ></text>
</g>
<g >
<title>__folio_alloc (2,237,236,862 samples, 0.16%)</title><rect x="969.2" y="1893" width="1.9" height="15.0" fill="rgb(216,109,5)" rx="2" ry="2" />
<text  x="972.16" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_disable (156,956,082 samples, 0.01%)</title><rect x="1178.9" y="1733" width="0.2" height="15.0" fill="rgb(215,80,25)" rx="2" ry="2" />
<text  x="1181.93" y="1743.5" ></text>
</g>
<g >
<title>pick_next_task_fair (568,444,334 samples, 0.04%)</title><rect x="1186.9" y="1925" width="0.5" height="15.0" fill="rgb(210,136,33)" rx="2" ry="2" />
<text  x="1189.86" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (48,296,866,571 samples, 3.55%)</title><rect x="909.4" y="2037" width="41.9" height="15.0" fill="rgb(251,192,29)" rx="2" ry="2" />
<text  x="912.40" y="2047.5" >[un..</text>
</g>
<g >
<title>std::operator&amp; (260,554,041 samples, 0.02%)</title><rect x="49.5" y="1797" width="0.3" height="15.0" fill="rgb(235,132,15)" rx="2" ry="2" />
<text  x="52.54" y="1807.5" ></text>
</g>
<g >
<title>new_sync_write (182,660,938 samples, 0.01%)</title><rect x="1162.8" y="1813" width="0.1" height="15.0" fill="rgb(249,193,40)" rx="2" ry="2" />
<text  x="1165.78" y="1823.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (406,237,097 samples, 0.03%)</title><rect x="1088.2" y="1829" width="0.3" height="15.0" fill="rgb(215,10,29)" rx="2" ry="2" />
<text  x="1091.19" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_initialize_map (11,564,386,487 samples, 0.85%)</title><rect x="274.2" y="1605" width="10.0" height="15.0" fill="rgb(213,178,31)" rx="2" ry="2" />
<text  x="277.17" y="1615.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (2,819,308,101 samples, 0.21%)</title><rect x="453.9" y="1733" width="2.5" height="15.0" fill="rgb(225,103,30)" rx="2" ry="2" />
<text  x="456.92" y="1743.5" ></text>
</g>
<g >
<title>DeEscapeString (1,120,796,026 samples, 0.08%)</title><rect x="1038.9" y="2037" width="1.0" height="15.0" fill="rgb(245,65,32)" rx="2" ry="2" />
<text  x="1041.89" y="2047.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~deque (10,041,836,531 samples, 0.74%)</title><rect x="284.7" y="1637" width="8.7" height="15.0" fill="rgb(247,189,53)" rx="2" ry="2" />
<text  x="287.71" y="1647.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, 0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, 0ul&gt; (48,686,073,449 samples, 3.58%)</title><rect x="431.1" y="1797" width="42.2" height="15.0" fill="rgb(226,10,32)" rx="2" ry="2" />
<text  x="434.10" y="1807.5" >std..</text>
</g>
<g >
<title>glob_in_dir (257,235,000 samples, 0.02%)</title><rect x="185.1" y="1669" width="0.2" height="15.0" fill="rgb(248,213,17)" rx="2" ry="2" />
<text  x="188.07" y="1679.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (4,801,302,114 samples, 0.35%)</title><rect x="827.0" y="1797" width="4.2" height="15.0" fill="rgb(241,95,7)" rx="2" ry="2" />
<text  x="830.02" y="1807.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (131,469,653 samples, 0.01%)</title><rect x="1091.5" y="2021" width="0.1" height="15.0" fill="rgb(249,121,53)" rx="2" ry="2" />
<text  x="1094.47" y="2031.5" ></text>
</g>
<g >
<title>operator new (143,282,600 samples, 0.01%)</title><rect x="75.8" y="1653" width="0.1" height="15.0" fill="rgb(245,24,39)" rx="2" ry="2" />
<text  x="78.80" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1061" width="0.2" height="15.0" fill="rgb(246,15,40)" rx="2" ry="2" />
<text  x="1048.93" y="1071.5" ></text>
</g>
<g >
<title>update_load_avg (153,283,758 samples, 0.01%)</title><rect x="412.8" y="1573" width="0.1" height="15.0" fill="rgb(209,4,25)" rx="2" ry="2" />
<text  x="415.78" y="1583.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (298,455,411,429 samples, 21.94%)</title><rect x="93.7" y="1765" width="258.9" height="15.0" fill="rgb(252,32,15)" rx="2" ry="2" />
<text  x="96.72" y="1775.5" >folly::hazptr_obj&lt;std::atomic&gt;::pu..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (9,208,543,440 samples, 0.68%)</title><rect x="624.5" y="1813" width="8.0" height="15.0" fill="rgb(232,175,45)" rx="2" ry="2" />
<text  x="627.54" y="1823.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (115,389,314 samples, 0.01%)</title><rect x="948.4" y="1941" width="0.1" height="15.0" fill="rgb(252,107,42)" rx="2" ry="2" />
<text  x="951.38" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (150,043,329 samples, 0.01%)</title><rect x="432.2" y="1781" width="0.2" height="15.0" fill="rgb(250,178,45)" rx="2" ry="2" />
<text  x="435.25" y="1791.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (302,086,035 samples, 0.02%)</title><rect x="1064.7" y="1989" width="0.3" height="15.0" fill="rgb(205,163,18)" rx="2" ry="2" />
<text  x="1067.74" y="1999.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (160,040,048 samples, 0.01%)</title><rect x="475.1" y="1829" width="0.1" height="15.0" fill="rgb(230,22,8)" rx="2" ry="2" />
<text  x="478.08" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,885,106,064 samples, 0.14%)</title><rect x="1086.3" y="2005" width="1.6" height="15.0" fill="rgb(232,88,22)" rx="2" ry="2" />
<text  x="1089.29" y="2015.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::deallocate (284,683,179 samples, 0.02%)</title><rect x="266.2" y="1589" width="0.3" height="15.0" fill="rgb(245,170,38)" rx="2" ry="2" />
<text  x="269.23" y="1599.5" ></text>
</g>
<g >
<title>pkgPackageManager::SmartUnPack (135,151,072 samples, 0.01%)</title><rect x="1054.3" y="1989" width="0.2" height="15.0" fill="rgb(251,145,1)" rx="2" ry="2" />
<text  x="1057.33" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1653" width="0.2" height="15.0" fill="rgb(244,179,0)" rx="2" ry="2" />
<text  x="1048.93" y="1663.5" ></text>
</g>
<g >
<title>apt-check (23,876,646,290 samples, 1.76%)</title><rect x="1038.9" y="2053" width="20.7" height="15.0" fill="rgb(231,44,52)" rx="2" ry="2" />
<text  x="1041.87" y="2063.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::allocate (537,087,658 samples, 0.04%)</title><rect x="474.0" y="1829" width="0.4" height="15.0" fill="rgb(240,29,26)" rx="2" ry="2" />
<text  x="476.96" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (328,397,089 samples, 0.02%)</title><rect x="224.3" y="1045" width="0.3" height="15.0" fill="rgb(215,156,1)" rx="2" ry="2" />
<text  x="227.29" y="1055.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_inc (9,870,412,355 samples, 0.73%)</title><rect x="360.0" y="1797" width="8.6" height="15.0" fill="rgb(230,105,50)" rx="2" ry="2" />
<text  x="363.05" y="1807.5" ></text>
</g>
<g >
<title>osq_lock (8,627,271,305 samples, 0.63%)</title><rect x="1011.4" y="1909" width="7.4" height="15.0" fill="rgb(233,90,33)" rx="2" ry="2" />
<text  x="1014.37" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,888,434,490 samples, 0.14%)</title><rect x="616.5" y="1749" width="1.7" height="15.0" fill="rgb(214,76,4)" rx="2" ry="2" />
<text  x="619.53" y="1759.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (301,512,699 samples, 0.02%)</title><rect x="1178.8" y="1877" width="0.3" height="15.0" fill="rgb(244,129,24)" rx="2" ry="2" />
<text  x="1181.83" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, false&gt;::_M_head (1,075,891,748 samples, 0.08%)</title><rect x="472.4" y="1733" width="0.9" height="15.0" fill="rgb(224,229,16)" rx="2" ry="2" />
<text  x="475.39" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_node (1,391,103,763 samples, 0.10%)</title><rect x="318.3" y="1573" width="1.2" height="15.0" fill="rgb(219,38,22)" rx="2" ry="2" />
<text  x="321.27" y="1583.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (125,934,052 samples, 0.01%)</title><rect x="224.3" y="469" width="0.1" height="15.0" fill="rgb(207,16,38)" rx="2" ry="2" />
<text  x="227.32" y="479.5" ></text>
</g>
<g >
<title>lzma_decode (871,534,962 samples, 0.06%)</title><rect x="1068.3" y="2005" width="0.7" height="15.0" fill="rgb(230,16,42)" rx="2" ry="2" />
<text  x="1071.27" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="821" width="0.2" height="15.0" fill="rgb(251,1,4)" rx="2" ry="2" />
<text  x="1048.93" y="831.5" ></text>
</g>
<g >
<title>try_to_wake_up (460,289,966 samples, 0.03%)</title><rect x="971.8" y="1925" width="0.4" height="15.0" fill="rgb(217,37,24)" rx="2" ry="2" />
<text  x="974.80" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~_Deque_base (6,497,836,880 samples, 0.48%)</title><rect x="325.1" y="1621" width="5.6" height="15.0" fill="rgb(221,130,18)" rx="2" ry="2" />
<text  x="328.09" y="1631.5" ></text>
</g>
<g >
<title>llist_reverse_order (234,733,643 samples, 0.02%)</title><rect x="1182.1" y="1845" width="0.2" height="15.0" fill="rgb(212,81,4)" rx="2" ry="2" />
<text  x="1185.09" y="1855.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (277,848,658 samples, 0.02%)</title><rect x="1057.4" y="2037" width="0.2" height="15.0" fill="rgb(222,112,28)" rx="2" ry="2" />
<text  x="1060.39" y="2047.5" ></text>
</g>
<g >
<title>vma_alloc_folio (128,346,983 samples, 0.01%)</title><rect x="1072.9" y="1733" width="0.1" height="15.0" fill="rgb(215,28,6)" rx="2" ry="2" />
<text  x="1075.89" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1221" width="0.2" height="15.0" fill="rgb(233,15,19)" rx="2" ry="2" />
<text  x="1048.93" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (172,688,529 samples, 0.01%)</title><rect x="847.2" y="1893" width="0.1" height="15.0" fill="rgb(254,91,3)" rx="2" ry="2" />
<text  x="850.17" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,552,323,309 samples, 0.11%)</title><rect x="243.7" y="1509" width="1.4" height="15.0" fill="rgb(243,138,31)" rx="2" ry="2" />
<text  x="246.72" y="1519.5" ></text>
</g>
<g >
<title>__entry_text_start (232,887,666 samples, 0.02%)</title><rect x="962.7" y="2021" width="0.2" height="15.0" fill="rgb(206,92,47)" rx="2" ry="2" />
<text  x="965.69" y="2031.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (706,223,322 samples, 0.05%)</title><rect x="1088.0" y="1861" width="0.6" height="15.0" fill="rgb(220,85,8)" rx="2" ry="2" />
<text  x="1090.95" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (604,288,092 samples, 0.04%)</title><rect x="358.0" y="1765" width="0.5" height="15.0" fill="rgb(225,133,53)" rx="2" ry="2" />
<text  x="361.01" y="1775.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::match_tagged (12,799,713,753 samples, 0.94%)</title><rect x="1099.0" y="1893" width="11.1" height="15.0" fill="rgb(243,84,11)" rx="2" ry="2" />
<text  x="1101.97" y="1903.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (470,785,688 samples, 0.03%)</title><rect x="1035.2" y="1877" width="0.4" height="15.0" fill="rgb(208,221,51)" rx="2" ry="2" />
<text  x="1038.23" y="1887.5" ></text>
</g>
<g >
<title>rmqueue_bulk (140,739,614 samples, 0.01%)</title><rect x="970.8" y="1813" width="0.2" height="15.0" fill="rgb(206,38,16)" rx="2" ry="2" />
<text  x="973.84" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_data (240,464,932 samples, 0.02%)</title><rect x="291.1" y="1621" width="0.2" height="15.0" fill="rgb(247,203,10)" rx="2" ry="2" />
<text  x="294.08" y="1631.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (3,228,597,217 samples, 0.24%)</title><rect x="494.7" y="1861" width="2.8" height="15.0" fill="rgb(227,111,35)" rx="2" ry="2" />
<text  x="497.74" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::linked_list&lt;folly::hazptr_obj&lt;std::atomic&gt; &gt;::push (116,553,855 samples, 0.01%)</title><rect x="1098.9" y="1893" width="0.1" height="15.0" fill="rgb(232,59,20)" rx="2" ry="2" />
<text  x="1101.87" y="1903.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::push_list (2,139,050,891 samples, 0.16%)</title><rect x="183.6" y="1701" width="1.9" height="15.0" fill="rgb(246,186,49)" rx="2" ry="2" />
<text  x="186.63" y="1711.5" ></text>
</g>
<g >
<title>task_work_run (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1893" width="0.1" height="15.0" fill="rgb(246,194,37)" rx="2" ry="2" />
<text  x="1080.14" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1109" width="0.2" height="15.0" fill="rgb(220,132,28)" rx="2" ry="2" />
<text  x="1048.93" y="1119.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (186,494,143 samples, 0.01%)</title><rect x="972.0" y="1909" width="0.2" height="15.0" fill="rgb(241,12,43)" rx="2" ry="2" />
<text  x="975.03" y="1919.5" ></text>
</g>
<g >
<title>deactivate_task (117,468,617 samples, 0.01%)</title><rect x="1024.3" y="1813" width="0.1" height="15.0" fill="rgb(228,153,22)" rx="2" ry="2" />
<text  x="1027.31" y="1823.5" ></text>
</g>
<g >
<title>vfs_read (262,770,885 samples, 0.02%)</title><rect x="1161.2" y="1941" width="0.3" height="15.0" fill="rgb(216,6,5)" rx="2" ry="2" />
<text  x="1164.23" y="1951.5" ></text>
</g>
<g >
<title>google::Check_GTImpl&lt;unsigned int, unsigned int&gt; (496,683,900 samples, 0.04%)</title><rect x="357.6" y="1765" width="0.4" height="15.0" fill="rgb(220,96,30)" rx="2" ry="2" />
<text  x="360.58" y="1775.5" ></text>
</g>
<g >
<title>__vfwprintf_chk (221,998,608 samples, 0.02%)</title><rect x="1078.9" y="2037" width="0.2" height="15.0" fill="rgb(215,119,40)" rx="2" ry="2" />
<text  x="1081.88" y="2047.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (260,918,776 samples, 0.02%)</title><rect x="224.3" y="805" width="0.2" height="15.0" fill="rgb(245,226,20)" rx="2" ry="2" />
<text  x="227.30" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (274,380,028 samples, 0.02%)</title><rect x="431.9" y="1781" width="0.3" height="15.0" fill="rgb(217,42,51)" rx="2" ry="2" />
<text  x="434.93" y="1791.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, unsigned long&amp;, false&gt;::_Head_base (330,271,017 samples, 0.02%)</title><rect x="496.4" y="1813" width="0.3" height="15.0" fill="rgb(243,80,50)" rx="2" ry="2" />
<text  x="499.40" y="1823.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::getItem (571,546,617 samples, 0.04%)</title><rect x="47.9" y="1781" width="0.5" height="15.0" fill="rgb(206,109,6)" rx="2" ry="2" />
<text  x="50.92" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (334,213,403 samples, 0.02%)</title><rect x="768.6" y="1861" width="0.3" height="15.0" fill="rgb(241,23,46)" rx="2" ry="2" />
<text  x="771.58" y="1871.5" ></text>
</g>
<g >
<title>google::Check_LTImpl&lt;unsigned int, unsigned int&gt; (909,166,391 samples, 0.07%)</title><rect x="480.4" y="1797" width="0.8" height="15.0" fill="rgb(248,159,47)" rx="2" ry="2" />
<text  x="483.38" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (1,086,152,959 samples, 0.08%)</title><rect x="224.1" y="1429" width="1.0" height="15.0" fill="rgb(248,166,49)" rx="2" ry="2" />
<text  x="227.14" y="1439.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (125,290,585 samples, 0.01%)</title><rect x="449.4" y="1733" width="0.1" height="15.0" fill="rgb(253,86,8)" rx="2" ry="2" />
<text  x="452.43" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (481,929,820 samples, 0.04%)</title><rect x="1035.2" y="1893" width="0.4" height="15.0" fill="rgb(248,85,6)" rx="2" ry="2" />
<text  x="1038.23" y="1903.5" ></text>
</g>
<g >
<title>futex_wait (1,924,352,196 samples, 0.14%)</title><rect x="412.3" y="1685" width="1.7" height="15.0" fill="rgb(219,50,39)" rx="2" ry="2" />
<text  x="415.34" y="1695.5" ></text>
</g>
<g >
<title>llist_add_batch (170,980,925 samples, 0.01%)</title><rect x="1037.2" y="1877" width="0.2" height="15.0" fill="rgb(226,155,32)" rx="2" ry="2" />
<text  x="1040.20" y="1887.5" ></text>
</g>
<g >
<title>__filemap_get_folio (177,342,868 samples, 0.01%)</title><rect x="1074.0" y="1781" width="0.1" height="15.0" fill="rgb(238,51,31)" rx="2" ry="2" />
<text  x="1076.96" y="1791.5" ></text>
</g>
<g >
<title>get_page_from_freelist (358,803,303 samples, 0.03%)</title><rect x="947.8" y="1845" width="0.3" height="15.0" fill="rgb(222,31,12)" rx="2" ry="2" />
<text  x="950.78" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (203,142,859 samples, 0.01%)</title><rect x="1045.9" y="1957" width="0.2" height="15.0" fill="rgb(241,65,19)" rx="2" ry="2" />
<text  x="1048.93" y="1967.5" ></text>
</g>
<g >
<title>dequeue_task (1,597,318,452 samples, 0.12%)</title><rect x="1021.3" y="1893" width="1.4" height="15.0" fill="rgb(243,52,43)" rx="2" ry="2" />
<text  x="1024.30" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (424,810,264 samples, 0.03%)</title><rect x="436.8" y="1749" width="0.3" height="15.0" fill="rgb(241,58,1)" rx="2" ry="2" />
<text  x="439.76" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_non_empty_list (171,016,272 samples, 0.01%)</title><rect x="165.7" y="1733" width="0.2" height="15.0" fill="rgb(224,48,50)" rx="2" ry="2" />
<text  x="168.73" y="1743.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (273,983,173 samples, 0.02%)</title><rect x="322.4" y="1589" width="0.2" height="15.0" fill="rgb(246,137,30)" rx="2" ry="2" />
<text  x="325.40" y="1599.5" ></text>
</g>
<g >
<title>operator new (160,588,150 samples, 0.01%)</title><rect x="512.0" y="1845" width="0.1" height="15.0" fill="rgb(235,13,6)" rx="2" ry="2" />
<text  x="514.95" y="1855.5" ></text>
</g>
<g >
<title>psi_group_change (403,466,410 samples, 0.03%)</title><rect x="1187.7" y="1925" width="0.3" height="15.0" fill="rgb(211,111,18)" rx="2" ry="2" />
<text  x="1190.68" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (185,250,340 samples, 0.01%)</title><rect x="1045.9" y="117" width="0.2" height="15.0" fill="rgb(254,85,51)" rx="2" ry="2" />
<text  x="1048.93" y="127.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="245" width="0.2" height="15.0" fill="rgb(245,159,15)" rx="2" ry="2" />
<text  x="1048.93" y="255.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (289,002,228 samples, 0.02%)</title><rect x="862.2" y="1765" width="0.3" height="15.0" fill="rgb(215,223,11)" rx="2" ry="2" />
<text  x="865.23" y="1775.5" ></text>
</g>
<g >
<title>std::operator&amp; (513,623,875 samples, 0.04%)</title><rect x="905.8" y="1845" width="0.5" height="15.0" fill="rgb(229,36,28)" rx="2" ry="2" />
<text  x="908.84" y="1855.5" ></text>
</g>
<g >
<title>__strpbrk_sse42 (161,930,043 samples, 0.01%)</title><rect x="1050.8" y="2021" width="0.1" height="15.0" fill="rgb(236,165,1)" rx="2" ry="2" />
<text  x="1053.77" y="2031.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (741,880,969 samples, 0.05%)</title><rect x="1020.0" y="1925" width="0.6" height="15.0" fill="rgb(242,44,17)" rx="2" ry="2" />
<text  x="1023.00" y="1935.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (234,619,656 samples, 0.02%)</title><rect x="72.6" y="1669" width="0.2" height="15.0" fill="rgb(215,135,0)" rx="2" ry="2" />
<text  x="75.65" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (132,740,311 samples, 0.01%)</title><rect x="971.5" y="1941" width="0.1" height="15.0" fill="rgb(210,5,48)" rx="2" ry="2" />
<text  x="974.52" y="1951.5" ></text>
</g>
<g >
<title>load_balance (159,381,309 samples, 0.01%)</title><rect x="947.0" y="1845" width="0.2" height="15.0" fill="rgb(211,199,46)" rx="2" ry="2" />
<text  x="950.02" y="1855.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (142,620,206 samples, 0.01%)</title><rect x="1189.3" y="1797" width="0.1" height="15.0" fill="rgb(226,180,20)" rx="2" ry="2" />
<text  x="1192.32" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (269,908,043 samples, 0.02%)</title><rect x="224.3" y="869" width="0.2" height="15.0" fill="rgb(236,198,21)" rx="2" ry="2" />
<text  x="227.30" y="879.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::pre_retire_check (1,608,287,925 samples, 0.12%)</title><rect x="92.3" y="1765" width="1.4" height="15.0" fill="rgb(252,33,5)" rx="2" ry="2" />
<text  x="95.32" y="1775.5" ></text>
</g>
<g >
<title>for_if_clauses_rule.lto_priv.0 (201,894,174 samples, 0.01%)</title><rect x="1051.7" y="2021" width="0.2" height="15.0" fill="rgb(237,141,14)" rx="2" ry="2" />
<text  x="1054.68" y="2031.5" ></text>
</g>
<g >
<title>PyUnicode_Format (121,454,854 samples, 0.01%)</title><rect x="1043.2" y="2021" width="0.1" height="15.0" fill="rgb(207,88,48)" rx="2" ry="2" />
<text  x="1046.21" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="357" width="0.2" height="15.0" fill="rgb(210,105,37)" rx="2" ry="2" />
<text  x="1048.93" y="367.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,885,106,064 samples, 0.14%)</title><rect x="1086.3" y="1989" width="1.6" height="15.0" fill="rgb(236,159,37)" rx="2" ry="2" />
<text  x="1089.29" y="1999.5" ></text>
</g>
<g >
<title>set_next_entity (231,484,214 samples, 0.02%)</title><rect x="1187.1" y="1909" width="0.2" height="15.0" fill="rgb(214,92,31)" rx="2" ry="2" />
<text  x="1190.15" y="1919.5" ></text>
</g>
<g >
<title>newidle_balance (6,586,314,435 samples, 0.48%)</title><rect x="1023.0" y="1861" width="5.7" height="15.0" fill="rgb(246,189,7)" rx="2" ry="2" />
<text  x="1026.01" y="1871.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (132,740,311 samples, 0.01%)</title><rect x="971.5" y="1925" width="0.1" height="15.0" fill="rgb(221,42,48)" rx="2" ry="2" />
<text  x="974.52" y="1935.5" ></text>
</g>
<g >
<title>operator new (227,948,979 samples, 0.02%)</title><rect x="448.1" y="1717" width="0.2" height="15.0" fill="rgb(214,106,54)" rx="2" ry="2" />
<text  x="451.05" y="1727.5" ></text>
</g>
<g >
<title>__fwprintf_chk (141,080,042 samples, 0.01%)</title><rect x="1050.3" y="2021" width="0.1" height="15.0" fill="rgb(253,56,49)" rx="2" ry="2" />
<text  x="1053.31" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (323,897,569 samples, 0.02%)</title><rect x="224.3" y="981" width="0.3" height="15.0" fill="rgb(220,6,10)" rx="2" ry="2" />
<text  x="227.29" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (665,115,777 samples, 0.05%)</title><rect x="1101.2" y="1797" width="0.6" height="15.0" fill="rgb(217,226,15)" rx="2" ry="2" />
<text  x="1104.19" y="1807.5" ></text>
</g>
<g >
<title>DeEscapeString (578,174,262 samples, 0.04%)</title><rect x="1061.5" y="2037" width="0.5" height="15.0" fill="rgb(223,206,14)" rx="2" ry="2" />
<text  x="1064.52" y="2047.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (73,722,484,206 samples, 5.42%)</title><rect x="1097.1" y="2037" width="63.9" height="15.0" fill="rgb(238,218,21)" rx="2" ry="2" />
<text  x="1100.06" y="2047.5" >[libstd..</text>
</g>
<g >
<title>__pagevec_lru_add_fn (282,092,830 samples, 0.02%)</title><rect x="968.3" y="1845" width="0.3" height="15.0" fill="rgb(212,167,37)" rx="2" ry="2" />
<text  x="971.32" y="1855.5" ></text>
</g>
<g >
<title>__fwprintf_chk (516,223,263 samples, 0.04%)</title><rect x="1072.6" y="2021" width="0.4" height="15.0" fill="rgb(227,138,8)" rx="2" ry="2" />
<text  x="1075.60" y="2031.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (253,269,435 samples, 0.02%)</title><rect x="339.0" y="1669" width="0.2" height="15.0" fill="rgb(250,39,40)" rx="2" ry="2" />
<text  x="342.02" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,474,535,443 samples, 0.92%)</title><rect x="852.7" y="1893" width="10.8" height="15.0" fill="rgb(214,31,0)" rx="2" ry="2" />
<text  x="855.67" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (267,156,434 samples, 0.02%)</title><rect x="1161.2" y="1989" width="0.3" height="15.0" fill="rgb(241,228,29)" rx="2" ry="2" />
<text  x="1164.23" y="1999.5" ></text>
</g>
<g >
<title>operator new (140,816,319 samples, 0.01%)</title><rect x="278.4" y="1557" width="0.1" height="15.0" fill="rgb(205,112,19)" rx="2" ry="2" />
<text  x="281.40" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_nodes (2,816,844,257 samples, 0.21%)</title><rect x="86.0" y="1717" width="2.4" height="15.0" fill="rgb(232,182,16)" rx="2" ry="2" />
<text  x="89.00" y="1727.5" ></text>
</g>
<g >
<title>std::operator&amp; (246,160,320 samples, 0.02%)</title><rect x="30.7" y="1845" width="0.2" height="15.0" fill="rgb(206,158,13)" rx="2" ry="2" />
<text  x="33.69" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (490,129,603 samples, 0.04%)</title><rect x="842.1" y="1845" width="0.4" height="15.0" fill="rgb(241,36,2)" rx="2" ry="2" />
<text  x="845.11" y="1855.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (634,738,326 samples, 0.05%)</title><rect x="73.1" y="1669" width="0.6" height="15.0" fill="rgb(224,39,31)" rx="2" ry="2" />
<text  x="76.13" y="1679.5" ></text>
</g>
<g >
<title>__multf3 (164,612,347 samples, 0.01%)</title><rect x="1073.0" y="2021" width="0.2" height="15.0" fill="rgb(232,148,29)" rx="2" ry="2" />
<text  x="1076.05" y="2031.5" ></text>
</g>
<g >
<title>wake_affine (264,918,968 samples, 0.02%)</title><rect x="1036.1" y="1877" width="0.2" height="15.0" fill="rgb(246,23,34)" rx="2" ry="2" />
<text  x="1039.12" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::call_push_links (683,945,097 samples, 0.05%)</title><rect x="269.1" y="1653" width="0.6" height="15.0" fill="rgb(231,5,16)" rx="2" ry="2" />
<text  x="272.09" y="1663.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::next (15,134,372,450 samples, 1.11%)</title><rect x="1130.9" y="1909" width="13.1" height="15.0" fill="rgb(223,134,25)" rx="2" ry="2" />
<text  x="1133.90" y="1919.5" ></text>
</g>
<g >
<title>schedule (681,380,932 samples, 0.05%)</title><rect x="946.7" y="1925" width="0.6" height="15.0" fill="rgb(234,203,7)" rx="2" ry="2" />
<text  x="949.67" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,744,946,525 samples, 0.35%)</title><rect x="259.9" y="1509" width="4.1" height="15.0" fill="rgb(225,23,10)" rx="2" ry="2" />
<text  x="262.89" y="1519.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (133,641,945 samples, 0.01%)</title><rect x="891.3" y="1829" width="0.1" height="15.0" fill="rgb(207,73,50)" rx="2" ry="2" />
<text  x="894.26" y="1839.5" ></text>
</g>
<g >
<title>zap_pte_range (706,223,322 samples, 0.05%)</title><rect x="1088.0" y="1845" width="0.6" height="15.0" fill="rgb(226,160,53)" rx="2" ry="2" />
<text  x="1090.95" y="1855.5" ></text>
</g>
<g >
<title>ExecGPGV (275,080,518 samples, 0.02%)</title><rect x="1064.4" y="1973" width="0.2" height="15.0" fill="rgb(208,166,1)" rx="2" ry="2" />
<text  x="1067.36" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2,326,009,101 samples, 0.17%)</title><rect x="860.6" y="1845" width="2.1" height="15.0" fill="rgb(241,95,48)" rx="2" ry="2" />
<text  x="863.64" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (185,250,340 samples, 0.01%)</title><rect x="1045.9" y="101" width="0.2" height="15.0" fill="rgb(210,41,54)" rx="2" ry="2" />
<text  x="1048.93" y="111.5" ></text>
</g>
<g >
<title>path_openat (317,014,559 samples, 0.02%)</title><rect x="1092.6" y="1925" width="0.2" height="15.0" fill="rgb(232,177,30)" rx="2" ry="2" />
<text  x="1095.57" y="1935.5" ></text>
</g>
<g >
<title>pkgCacheGenerator::~pkgCacheGenerator (252,035,066 samples, 0.02%)</title><rect x="1076.2" y="1989" width="0.2" height="15.0" fill="rgb(241,64,1)" rx="2" ry="2" />
<text  x="1079.22" y="1999.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::next (11,003,236,537 samples, 0.81%)</title><rect x="212.9" y="1701" width="9.6" height="15.0" fill="rgb(220,39,37)" rx="2" ry="2" />
<text  x="215.91" y="1711.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (18,734,762,227 samples, 1.38%)</title><rect x="932.4" y="2021" width="16.2" height="15.0" fill="rgb(206,206,50)" rx="2" ry="2" />
<text  x="935.36" y="2031.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (19,159,206,218 samples, 1.41%)</title><rect x="64.3" y="1749" width="16.6" height="15.0" fill="rgb(247,1,11)" rx="2" ry="2" />
<text  x="67.27" y="1759.5" ></text>
</g>
<g >
<title>handle_pte_fault (143,014,943 samples, 0.01%)</title><rect x="1091.6" y="1925" width="0.2" height="15.0" fill="rgb(236,193,33)" rx="2" ry="2" />
<text  x="1094.63" y="1935.5" ></text>
</g>
<g >
<title>psi_task_switch (221,843,809 samples, 0.02%)</title><rect x="966.3" y="1909" width="0.2" height="15.0" fill="rgb(223,114,18)" rx="2" ry="2" />
<text  x="969.31" y="1919.5" ></text>
</g>
<g >
<title>XoshiroCpp::SplitMix64::operator (12,699,474,629 samples, 0.93%)</title><rect x="15.3" y="1893" width="11.0" height="15.0" fill="rgb(226,134,50)" rx="2" ry="2" />
<text  x="18.29" y="1903.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1733" width="0.1" height="15.0" fill="rgb(230,161,19)" rx="2" ry="2" />
<text  x="1080.14" y="1743.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (284,004,921 samples, 0.02%)</title><rect x="1064.8" y="1973" width="0.2" height="15.0" fill="rgb(216,221,44)" rx="2" ry="2" />
<text  x="1067.76" y="1983.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (129,280,483,323 samples, 9.50%)</title><rect x="227.1" y="1685" width="112.1" height="15.0" fill="rgb(222,146,48)" rx="2" ry="2" />
<text  x="230.11" y="1695.5" >folly::hazptr..</text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (118,518,295 samples, 0.01%)</title><rect x="1189.5" y="1749" width="0.1" height="15.0" fill="rgb(210,219,35)" rx="2" ry="2" />
<text  x="1192.46" y="1759.5" ></text>
</g>
<g >
<title>vfs_write (265,559,230 samples, 0.02%)</title><rect x="1057.6" y="1957" width="0.3" height="15.0" fill="rgb(244,112,8)" rx="2" ry="2" />
<text  x="1060.64" y="1967.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (472,136,142 samples, 0.03%)</title><rect x="224.3" y="1141" width="0.4" height="15.0" fill="rgb(213,148,13)" rx="2" ry="2" />
<text  x="227.28" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (382,907,827 samples, 0.03%)</title><rect x="1045.9" y="2005" width="0.3" height="15.0" fill="rgb(214,142,14)" rx="2" ry="2" />
<text  x="1048.91" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (209,500,564 samples, 0.02%)</title><rect x="149.2" y="1701" width="0.2" height="15.0" fill="rgb(237,21,24)" rx="2" ry="2" />
<text  x="152.19" y="1711.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (3,189,212,008 samples, 0.23%)</title><rect x="1179.5" y="1861" width="2.8" height="15.0" fill="rgb(239,3,52)" rx="2" ry="2" />
<text  x="1182.53" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::_M_head (1,673,240,365 samples, 0.12%)</title><rect x="471.9" y="1749" width="1.4" height="15.0" fill="rgb(209,200,31)" rx="2" ry="2" />
<text  x="474.87" y="1759.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (372,194,978 samples, 0.03%)</title><rect x="474.8" y="1829" width="0.3" height="15.0" fill="rgb(225,109,43)" rx="2" ry="2" />
<text  x="477.76" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (2,533,831,091 samples, 0.19%)</title><rect x="224.0" y="1541" width="2.2" height="15.0" fill="rgb(218,113,44)" rx="2" ry="2" />
<text  x="227.05" y="1551.5" ></text>
</g>
<g >
<title>iput (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1797" width="0.1" height="15.0" fill="rgb(254,207,27)" rx="2" ry="2" />
<text  x="1080.14" y="1807.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (28,823,819,491 samples, 2.12%)</title><rect x="1164.8" y="2037" width="25.0" height="15.0" fill="rgb(223,51,46)" rx="2" ry="2" />
<text  x="1167.75" y="2047.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (705,436,771 samples, 0.05%)</title><rect x="569.9" y="1845" width="0.6" height="15.0" fill="rgb(216,167,8)" rx="2" ry="2" />
<text  x="572.90" y="1855.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (374,184,537 samples, 0.03%)</title><rect x="789.7" y="1877" width="0.4" height="15.0" fill="rgb(240,75,41)" rx="2" ry="2" />
<text  x="792.75" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::estimateSpaceToReserve&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2,001,898,356 samples, 0.15%)</title><rect x="529.6" y="1829" width="1.7" height="15.0" fill="rgb(220,69,47)" rx="2" ry="2" />
<text  x="532.61" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (7,828,215,546 samples, 0.58%)</title><rect x="835.7" y="1861" width="6.8" height="15.0" fill="rgb(230,119,11)" rx="2" ry="2" />
<text  x="838.74" y="1871.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,858,263,207 samples, 0.14%)</title><rect x="969.4" y="1861" width="1.6" height="15.0" fill="rgb(220,54,28)" rx="2" ry="2" />
<text  x="972.37" y="1871.5" ></text>
</g>
<g >
<title>new_sync_write (148,992,040 samples, 0.01%)</title><rect x="1057.7" y="1941" width="0.2" height="15.0" fill="rgb(235,63,23)" rx="2" ry="2" />
<text  x="1060.74" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1141" width="0.2" height="15.0" fill="rgb(237,74,30)" rx="2" ry="2" />
<text  x="1048.93" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (605,065,344 samples, 0.04%)</title><rect x="452.6" y="1733" width="0.5" height="15.0" fill="rgb(241,18,20)" rx="2" ry="2" />
<text  x="455.58" y="1743.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::count (4,675,909,280 samples, 0.34%)</title><rect x="196.7" y="1717" width="4.1" height="15.0" fill="rgb(227,66,5)" rx="2" ry="2" />
<text  x="199.70" y="1727.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (204,353,920 samples, 0.02%)</title><rect x="749.5" y="1813" width="0.2" height="15.0" fill="rgb(253,5,53)" rx="2" ry="2" />
<text  x="752.49" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::safe_list_top (7,638,724,693 samples, 0.56%)</title><rect x="1153.3" y="1893" width="6.6" height="15.0" fill="rgb(251,89,3)" rx="2" ry="2" />
<text  x="1156.29" y="1903.5" ></text>
</g>
<g >
<title>pick_next_task (655,706,975 samples, 0.05%)</title><rect x="1186.8" y="1941" width="0.6" height="15.0" fill="rgb(217,111,25)" rx="2" ry="2" />
<text  x="1189.82" y="1951.5" ></text>
</g>
<g >
<title>do_filp_open (317,445,448 samples, 0.02%)</title><rect x="1161.5" y="1941" width="0.3" height="15.0" fill="rgb(247,229,6)" rx="2" ry="2" />
<text  x="1164.50" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1381" width="0.2" height="15.0" fill="rgb(217,181,10)" rx="2" ry="2" />
<text  x="1048.93" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,747,226,834 samples, 0.20%)</title><rect x="715.5" y="1813" width="2.4" height="15.0" fill="rgb(229,189,46)" rx="2" ry="2" />
<text  x="718.49" y="1823.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (555,423,157 samples, 0.04%)</title><rect x="76.1" y="1653" width="0.5" height="15.0" fill="rgb(205,149,21)" rx="2" ry="2" />
<text  x="79.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1781" width="0.2" height="15.0" fill="rgb(239,93,36)" rx="2" ry="2" />
<text  x="1048.93" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1,201,010,455 samples, 0.09%)</title><rect x="436.1" y="1765" width="1.0" height="15.0" fill="rgb(228,173,41)" rx="2" ry="2" />
<text  x="439.08" y="1775.5" ></text>
</g>
<g >
<title>__fsnotify_parent (116,567,190 samples, 0.01%)</title><rect x="1057.6" y="1941" width="0.1" height="15.0" fill="rgb(206,20,9)" rx="2" ry="2" />
<text  x="1060.64" y="1951.5" ></text>
</g>
<g >
<title>_fini (1,971,507,219 samples, 0.14%)</title><rect x="1079.1" y="2037" width="1.7" height="15.0" fill="rgb(228,156,45)" rx="2" ry="2" />
<text  x="1082.13" y="2047.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::empty (941,891,233 samples, 0.07%)</title><rect x="307.6" y="1637" width="0.8" height="15.0" fill="rgb(249,145,23)" rx="2" ry="2" />
<text  x="310.63" y="1647.5" ></text>
</g>
<g >
<title>folly::coro::TaskWithExecutor&lt;void&gt;::Awaiter::await_suspend&lt;folly::coro::detail::DetachedBarrierTask::promise_type&gt; (1,036,931,055,052 samples, 76.22%)</title><rect x="10.0" y="1957" width="899.4" height="15.0" fill="rgb(231,140,45)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" >folly::coro::TaskWithExecutor&lt;void&gt;::Awaiter::await_suspend&lt;folly::coro::detail::DetachedBarrierTask::promise_type&gt;</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (2,320,310,944 samples, 0.17%)</title><rect x="847.4" y="1893" width="2.0" height="15.0" fill="rgb(231,181,12)" rx="2" ry="2" />
<text  x="850.36" y="1903.5" ></text>
</g>
<g >
<title>enqueue_task (649,305,076 samples, 0.05%)</title><rect x="1184.8" y="1909" width="0.6" height="15.0" fill="rgb(222,8,39)" rx="2" ry="2" />
<text  x="1187.83" y="1919.5" ></text>
</g>
<g >
<title>parseversion (142,309,023 samples, 0.01%)</title><rect x="1093.6" y="2021" width="0.1" height="15.0" fill="rgb(251,161,34)" rx="2" ry="2" />
<text  x="1096.59" y="2031.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::empty (796,706,085 samples, 0.06%)</title><rect x="63.1" y="1749" width="0.7" height="15.0" fill="rgb(235,4,51)" rx="2" ry="2" />
<text  x="66.10" y="1759.5" ></text>
</g>
<g >
<title>pick_next_task_fair (229,511,209 samples, 0.02%)</title><rect x="1160.5" y="1845" width="0.2" height="15.0" fill="rgb(233,92,33)" rx="2" ry="2" />
<text  x="1163.52" y="1855.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1749" width="0.1" height="15.0" fill="rgb(216,30,3)" rx="2" ry="2" />
<text  x="1080.14" y="1759.5" ></text>
</g>
<g >
<title>MMap::Map (139,684,818 samples, 0.01%)</title><rect x="1075.1" y="1989" width="0.1" height="15.0" fill="rgb(214,5,23)" rx="2" ry="2" />
<text  x="1078.11" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (303,240,975 samples, 0.02%)</title><rect x="225.3" y="1365" width="0.2" height="15.0" fill="rgb(227,30,24)" rx="2" ry="2" />
<text  x="228.26" y="1375.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_only_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::head (568,459,623 samples, 0.04%)</title><rect x="183.9" y="1669" width="0.5" height="15.0" fill="rgb(236,107,52)" rx="2" ry="2" />
<text  x="186.87" y="1679.5" ></text>
</g>
<g >
<title>prepare_task_switch (115,920,730 samples, 0.01%)</title><rect x="1029.0" y="1893" width="0.1" height="15.0" fill="rgb(217,51,53)" rx="2" ry="2" />
<text  x="1031.98" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (1,569,965,650 samples, 0.12%)</title><rect x="311.1" y="1573" width="1.4" height="15.0" fill="rgb(238,174,10)" rx="2" ry="2" />
<text  x="314.10" y="1583.5" ></text>
</g>
<g >
<title>operator new (407,383,021 samples, 0.03%)</title><rect x="488.3" y="1861" width="0.4" height="15.0" fill="rgb(254,101,16)" rx="2" ry="2" />
<text  x="491.32" y="1871.5" ></text>
</g>
<g >
<title>enqueue_task (1,889,815,400 samples, 0.14%)</title><rect x="1180.0" y="1797" width="1.7" height="15.0" fill="rgb(218,32,20)" rx="2" ry="2" />
<text  x="1183.03" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Identity::operator (304,706,184 samples, 0.02%)</title><rect x="1107.5" y="1765" width="0.2" height="15.0" fill="rgb(223,81,1)" rx="2" ry="2" />
<text  x="1110.48" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3,719,181,076 samples, 0.27%)</title><rect x="745.9" y="1813" width="3.2" height="15.0" fill="rgb(240,119,35)" rx="2" ry="2" />
<text  x="748.91" y="1823.5" ></text>
</g>
<g >
<title>up_read (164,016,701 samples, 0.01%)</title><rect x="948.2" y="1957" width="0.1" height="15.0" fill="rgb(210,88,29)" rx="2" ry="2" />
<text  x="951.19" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,776,538,430 samples, 0.13%)</title><rect x="465.0" y="1765" width="1.6" height="15.0" fill="rgb(214,213,44)" rx="2" ry="2" />
<text  x="468.01" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_valptr (405,178,608 samples, 0.03%)</title><rect x="1105.0" y="1749" width="0.4" height="15.0" fill="rgb(207,213,33)" rx="2" ry="2" />
<text  x="1108.04" y="1759.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (3,564,525,160 samples, 0.26%)</title><rect x="615.1" y="1765" width="3.1" height="15.0" fill="rgb(236,175,43)" rx="2" ry="2" />
<text  x="618.08" y="1775.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (436,414,783 samples, 0.03%)</title><rect x="972.4" y="1973" width="0.4" height="15.0" fill="rgb(237,207,15)" rx="2" ry="2" />
<text  x="975.42" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1637" width="0.2" height="15.0" fill="rgb(236,24,26)" rx="2" ry="2" />
<text  x="1048.93" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (115,604,199 samples, 0.01%)</title><rect x="222.5" y="1557" width="0.1" height="15.0" fill="rgb(252,37,43)" rx="2" ry="2" />
<text  x="225.51" y="1567.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (116,946,721 samples, 0.01%)</title><rect x="224.3" y="421" width="0.1" height="15.0" fill="rgb(210,78,31)" rx="2" ry="2" />
<text  x="227.33" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (293,305,417 samples, 0.02%)</title><rect x="84.1" y="1685" width="0.2" height="15.0" fill="rgb(213,198,38)" rx="2" ry="2" />
<text  x="87.08" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (517,510,547 samples, 0.04%)</title><rect x="1105.7" y="1765" width="0.4" height="15.0" fill="rgb(237,115,51)" rx="2" ry="2" />
<text  x="1108.65" y="1775.5" ></text>
</g>
<g >
<title>operator new (802,014,235 samples, 0.06%)</title><rect x="599.7" y="1797" width="0.7" height="15.0" fill="rgb(233,153,21)" rx="2" ry="2" />
<text  x="602.70" y="1807.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (142,523,648 samples, 0.01%)</title><rect x="290.7" y="1605" width="0.1" height="15.0" fill="rgb(247,199,6)" rx="2" ry="2" />
<text  x="293.68" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,588,152,542 samples, 0.12%)</title><rect x="264.0" y="1509" width="1.4" height="15.0" fill="rgb(211,192,26)" rx="2" ry="2" />
<text  x="267.00" y="1519.5" ></text>
</g>
<g >
<title>start_secondary (27,794,079,510 samples, 2.04%)</title><rect x="1164.8" y="2021" width="24.1" height="15.0" fill="rgb(223,33,36)" rx="2" ry="2" />
<text  x="1167.75" y="2031.5" >s..</text>
</g>
<g >
<title>cmd_record (232,622,597 samples, 0.02%)</title><rect x="1162.7" y="1989" width="0.2" height="15.0" fill="rgb(217,36,19)" rx="2" ry="2" />
<text  x="1165.74" y="1999.5" ></text>
</g>
<g >
<title>osq_unlock (255,975,122 samples, 0.02%)</title><rect x="1018.8" y="1909" width="0.3" height="15.0" fill="rgb(232,66,2)" rx="2" ry="2" />
<text  x="1021.85" y="1919.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (307,827,651 samples, 0.02%)</title><rect x="1033.5" y="1909" width="0.2" height="15.0" fill="rgb(219,121,34)" rx="2" ry="2" />
<text  x="1036.47" y="1919.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (165,679,949 samples, 0.01%)</title><rect x="80.0" y="1701" width="0.1" height="15.0" fill="rgb(254,113,46)" rx="2" ry="2" />
<text  x="83.01" y="1711.5" ></text>
</g>
<g >
<title>std::atomic&lt;unsigned int&gt;::atomic (439,714,011 samples, 0.03%)</title><rect x="484.6" y="1813" width="0.4" height="15.0" fill="rgb(209,126,24)" rx="2" ry="2" />
<text  x="487.57" y="1823.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrTableDeleter::operator (1,086,152,959 samples, 0.08%)</title><rect x="224.1" y="1461" width="1.0" height="15.0" fill="rgb(222,112,51)" rx="2" ry="2" />
<text  x="227.14" y="1471.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (163,017,616 samples, 0.01%)</title><rect x="1078.9" y="1909" width="0.2" height="15.0" fill="rgb(233,96,33)" rx="2" ry="2" />
<text  x="1081.93" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::CountedItem&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (56,213,041,648 samples, 4.13%)</title><rect x="424.7" y="1829" width="48.8" height="15.0" fill="rgb(220,142,34)" rx="2" ry="2" />
<text  x="427.71" y="1839.5" >foll..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (733,458,965 samples, 0.05%)</title><rect x="1108.7" y="1829" width="0.6" height="15.0" fill="rgb(248,163,41)" rx="2" ry="2" />
<text  x="1111.70" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1,083,403,821 samples, 0.08%)</title><rect x="441.7" y="1749" width="0.9" height="15.0" fill="rgb(218,0,44)" rx="2" ry="2" />
<text  x="444.67" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4,416,018,493 samples, 0.32%)</title><rect x="619.2" y="1829" width="3.8" height="15.0" fill="rgb(239,151,15)" rx="2" ry="2" />
<text  x="622.22" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (2,142,677,571 samples, 0.16%)</title><rect x="495.2" y="1845" width="1.9" height="15.0" fill="rgb(241,27,40)" rx="2" ry="2" />
<text  x="498.20" y="1855.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (953,482,810 samples, 0.07%)</title><rect x="264.2" y="1493" width="0.8" height="15.0" fill="rgb(252,134,20)" rx="2" ry="2" />
<text  x="267.19" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (5,719,884,671 samples, 0.42%)</title><rect x="886.4" y="1845" width="5.0" height="15.0" fill="rgb(218,51,50)" rx="2" ry="2" />
<text  x="889.42" y="1855.5" ></text>
</g>
<g >
<title>menu_select (1,388,335,805 samples, 0.10%)</title><rect x="1183.3" y="1941" width="1.2" height="15.0" fill="rgb(222,3,23)" rx="2" ry="2" />
<text  x="1186.25" y="1951.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::check_due_time (257,092,851 samples, 0.02%)</title><rect x="184.8" y="1669" width="0.2" height="15.0" fill="rgb(240,76,33)" rx="2" ry="2" />
<text  x="187.78" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrTableDeleter::operator (328,397,089 samples, 0.02%)</title><rect x="224.3" y="1077" width="0.3" height="15.0" fill="rgb(218,147,42)" rx="2" ry="2" />
<text  x="227.29" y="1087.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, bool&amp;&amp;&gt; (840,911,424 samples, 0.06%)</title><rect x="513.1" y="1829" width="0.8" height="15.0" fill="rgb(233,81,15)" rx="2" ry="2" />
<text  x="516.14" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (903,033,380 samples, 0.07%)</title><rect x="1086.4" y="1909" width="0.8" height="15.0" fill="rgb(230,1,37)" rx="2" ry="2" />
<text  x="1089.38" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (531,718,524 samples, 0.04%)</title><rect x="718.0" y="1813" width="0.5" height="15.0" fill="rgb(241,94,4)" rx="2" ry="2" />
<text  x="721.02" y="1823.5" ></text>
</g>
<g >
<title>pkgPackageManager::SmartUnPack (2,198,522,385 samples, 0.16%)</title><rect x="1047.8" y="2005" width="1.9" height="15.0" fill="rgb(238,44,23)" rx="2" ry="2" />
<text  x="1050.76" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (166,494,392 samples, 0.01%)</title><rect x="225.9" y="1445" width="0.1" height="15.0" fill="rgb(231,110,8)" rx="2" ry="2" />
<text  x="228.88" y="1455.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (2,728,993,316 samples, 0.20%)</title><rect x="369.1" y="1813" width="2.4" height="15.0" fill="rgb(213,121,3)" rx="2" ry="2" />
<text  x="372.14" y="1823.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (398,534,522 samples, 0.03%)</title><rect x="280.7" y="1541" width="0.4" height="15.0" fill="rgb(209,73,5)" rx="2" ry="2" />
<text  x="283.72" y="1551.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::push_links&lt;std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt; &gt; (360,564,274 samples, 0.03%)</title><rect x="269.4" y="1637" width="0.3" height="15.0" fill="rgb(249,80,17)" rx="2" ry="2" />
<text  x="272.37" y="1647.5" ></text>
</g>
<g >
<title>exit_mmap (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="1925" width="0.7" height="15.0" fill="rgb(235,62,50)" rx="2" ry="2" />
<text  x="1090.95" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="773" width="0.2" height="15.0" fill="rgb(243,141,45)" rx="2" ry="2" />
<text  x="1048.93" y="783.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (305,266,048 samples, 0.02%)</title><rect x="1074.2" y="1781" width="0.2" height="15.0" fill="rgb(236,67,31)" rx="2" ry="2" />
<text  x="1077.18" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="789" width="0.2" height="15.0" fill="rgb(247,207,17)" rx="2" ry="2" />
<text  x="1048.93" y="799.5" ></text>
</g>
<g >
<title>folly::to_ascii_lower&lt;10ul, 20ul&gt; (79,030,811,983 samples, 5.81%)</title><rect x="640.9" y="1829" width="68.5" height="15.0" fill="rgb(226,12,22)" rx="2" ry="2" />
<text  x="643.85" y="1839.5" >folly::..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (118,441,299 samples, 0.01%)</title><rect x="709.3" y="1797" width="0.1" height="15.0" fill="rgb(239,10,37)" rx="2" ry="2" />
<text  x="712.28" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1525" width="0.2" height="15.0" fill="rgb(226,124,41)" rx="2" ry="2" />
<text  x="1048.93" y="1535.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (466,985,017 samples, 0.03%)</title><rect x="1186.4" y="1925" width="0.4" height="15.0" fill="rgb(249,96,43)" rx="2" ry="2" />
<text  x="1189.39" y="1935.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (278,567,386 samples, 0.02%)</title><rect x="1189.3" y="1829" width="0.3" height="15.0" fill="rgb(249,48,34)" rx="2" ry="2" />
<text  x="1192.32" y="1839.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (211,126,952 samples, 0.02%)</title><rect x="29.3" y="1861" width="0.2" height="15.0" fill="rgb(220,213,24)" rx="2" ry="2" />
<text  x="32.33" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (136,904,901 samples, 0.01%)</title><rect x="330.7" y="1621" width="0.1" height="15.0" fill="rgb(230,221,47)" rx="2" ry="2" />
<text  x="333.72" y="1631.5" ></text>
</g>
<g >
<title>enqueue_task (219,344,236 samples, 0.02%)</title><rect x="1186.5" y="1813" width="0.2" height="15.0" fill="rgb(220,195,27)" rx="2" ry="2" />
<text  x="1189.48" y="1823.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (232,555,314 samples, 0.02%)</title><rect x="1072.8" y="1845" width="0.2" height="15.0" fill="rgb(234,9,36)" rx="2" ry="2" />
<text  x="1075.81" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (241,716,110 samples, 0.02%)</title><rect x="882.3" y="1861" width="0.2" height="15.0" fill="rgb(246,15,21)" rx="2" ry="2" />
<text  x="885.33" y="1871.5" ></text>
</g>
<g >
<title>exc_page_fault (230,951,939 samples, 0.02%)</title><rect x="1072.8" y="1829" width="0.2" height="15.0" fill="rgb(218,45,17)" rx="2" ry="2" />
<text  x="1075.81" y="1839.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (167,211,861 samples, 0.01%)</title><rect x="420.2" y="1797" width="0.2" height="15.0" fill="rgb(224,47,9)" rx="2" ry="2" />
<text  x="423.23" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,650,919,527 samples, 0.12%)</title><rect x="840.7" y="1845" width="1.4" height="15.0" fill="rgb(254,201,51)" rx="2" ry="2" />
<text  x="843.68" y="1855.5" ></text>
</g>
<g >
<title>operator delete (126,107,190 samples, 0.01%)</title><rect x="288.4" y="1573" width="0.1" height="15.0" fill="rgb(217,14,19)" rx="2" ry="2" />
<text  x="291.39" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (155,538,139 samples, 0.01%)</title><rect x="871.2" y="1861" width="0.1" height="15.0" fill="rgb(237,74,13)" rx="2" ry="2" />
<text  x="874.17" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (3,372,520,682 samples, 0.25%)</title><rect x="752.2" y="1813" width="2.9" height="15.0" fill="rgb(220,36,1)" rx="2" ry="2" />
<text  x="755.16" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (408,074,239 samples, 0.03%)</title><rect x="388.2" y="1797" width="0.4" height="15.0" fill="rgb(226,45,26)" rx="2" ry="2" />
<text  x="391.20" y="1807.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (517,290,662 samples, 0.04%)</title><rect x="222.8" y="1493" width="0.4" height="15.0" fill="rgb(206,186,23)" rx="2" ry="2" />
<text  x="225.75" y="1503.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, bool&amp;&amp;, false&gt;::_Head_base&lt;bool&gt; (551,322,409 samples, 0.04%)</title><rect x="492.9" y="1829" width="0.5" height="15.0" fill="rgb(237,15,30)" rx="2" ry="2" />
<text  x="495.88" y="1839.5" ></text>
</g>
<g >
<title>ext4_evict_inode (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1765" width="0.1" height="15.0" fill="rgb(250,39,53)" rx="2" ry="2" />
<text  x="1080.14" y="1775.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count (8,142,693,027 samples, 0.60%)</title><rect x="299.4" y="1637" width="7.0" height="15.0" fill="rgb(207,116,49)" rx="2" ry="2" />
<text  x="302.38" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (997,775,385 samples, 0.07%)</title><rect x="947.3" y="1957" width="0.9" height="15.0" fill="rgb(226,210,48)" rx="2" ry="2" />
<text  x="950.31" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (231,816,753 samples, 0.02%)</title><rect x="1084.7" y="2037" width="0.3" height="15.0" fill="rgb(219,97,40)" rx="2" ry="2" />
<text  x="1087.75" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (970,240,960 samples, 0.07%)</title><rect x="514.0" y="1829" width="0.8" height="15.0" fill="rgb(213,171,42)" rx="2" ry="2" />
<text  x="516.99" y="1839.5" ></text>
</g>
<g >
<title>wake_up_q (978,522,721 samples, 0.07%)</title><rect x="417.9" y="1685" width="0.9" height="15.0" fill="rgb(253,187,38)" rx="2" ry="2" />
<text  x="420.95" y="1695.5" ></text>
</g>
<g >
<title>__x64_sys_openat (365,889,250 samples, 0.03%)</title><rect x="1161.5" y="1973" width="0.3" height="15.0" fill="rgb(253,61,38)" rx="2" ry="2" />
<text  x="1164.50" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::reserveInTarget&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (162,692,247 samples, 0.01%)</title><rect x="518.7" y="1877" width="0.1" height="15.0" fill="rgb(232,48,49)" rx="2" ry="2" />
<text  x="521.65" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (124,479,864 samples, 0.01%)</title><rect x="359.2" y="1781" width="0.1" height="15.0" fill="rgb(208,24,13)" rx="2" ry="2" />
<text  x="362.22" y="1791.5" ></text>
</g>
<g >
<title>folly::ThreadPoolExecutor::runTask (72,730,131,697 samples, 5.35%)</title><rect x="1097.1" y="1989" width="63.0" height="15.0" fill="rgb(214,4,25)" rx="2" ry="2" />
<text  x="1100.06" y="1999.5" >folly:..</text>
</g>
<g >
<title>__vfwprintf_chk (120,211,224 samples, 0.01%)</title><rect x="1061.2" y="2037" width="0.1" height="15.0" fill="rgb(228,103,53)" rx="2" ry="2" />
<text  x="1064.24" y="2047.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (1,723,630,596 samples, 0.13%)</title><rect x="65.7" y="1685" width="1.5" height="15.0" fill="rgb(248,125,36)" rx="2" ry="2" />
<text  x="68.70" y="1695.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (285,925,933 samples, 0.02%)</title><rect x="1189.3" y="1845" width="0.3" height="15.0" fill="rgb(216,94,5)" rx="2" ry="2" />
<text  x="1192.31" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::release_link (6,516,966,888 samples, 0.48%)</title><rect x="353.5" y="1781" width="5.7" height="15.0" fill="rgb(246,121,31)" rx="2" ry="2" />
<text  x="356.55" y="1791.5" ></text>
</g>
<g >
<title>irqentry_exit (456,784,183 samples, 0.03%)</title><rect x="972.4" y="1989" width="0.4" height="15.0" fill="rgb(224,106,43)" rx="2" ry="2" />
<text  x="975.40" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="453" width="0.2" height="15.0" fill="rgb(252,61,33)" rx="2" ry="2" />
<text  x="1048.93" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (151,910,239 samples, 0.01%)</title><rect x="1091.6" y="1973" width="0.2" height="15.0" fill="rgb(222,141,22)" rx="2" ry="2" />
<text  x="1094.62" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::_Tuple_impl (1,344,849,332 samples, 0.10%)</title><rect x="429.2" y="1781" width="1.2" height="15.0" fill="rgb(208,162,8)" rx="2" ry="2" />
<text  x="432.24" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4,715,248,074 samples, 0.35%)</title><rect x="459.0" y="1733" width="4.0" height="15.0" fill="rgb(235,151,22)" rx="2" ry="2" />
<text  x="461.95" y="1743.5" ></text>
</g>
<g >
<title>std::forward&lt;void const* const&amp;&gt; (134,584,337 samples, 0.01%)</title><rect x="1105.5" y="1749" width="0.2" height="15.0" fill="rgb(217,23,33)" rx="2" ry="2" />
<text  x="1108.54" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::head (267,236,986 samples, 0.02%)</title><rect x="223.2" y="1509" width="0.2" height="15.0" fill="rgb(220,157,11)" rx="2" ry="2" />
<text  x="226.20" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,840,259,809 samples, 0.14%)</title><rect x="847.7" y="1877" width="1.6" height="15.0" fill="rgb(252,17,3)" rx="2" ry="2" />
<text  x="850.70" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (328,397,089 samples, 0.02%)</title><rect x="224.3" y="1029" width="0.3" height="15.0" fill="rgb(218,216,36)" rx="2" ry="2" />
<text  x="227.29" y="1039.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_empty_list (2,956,614,258 samples, 0.22%)</title><rect x="97.7" y="1717" width="2.6" height="15.0" fill="rgb(229,148,49)" rx="2" ry="2" />
<text  x="100.70" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (601,244,092 samples, 0.04%)</title><rect x="446.1" y="1717" width="0.5" height="15.0" fill="rgb(247,112,4)" rx="2" ry="2" />
<text  x="449.09" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::allocate (1,887,792,296 samples, 0.14%)</title><rect x="72.0" y="1685" width="1.7" height="15.0" fill="rgb(207,212,41)" rx="2" ry="2" />
<text  x="75.04" y="1695.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (179,968,419 samples, 0.01%)</title><rect x="1033.6" y="1877" width="0.1" height="15.0" fill="rgb(205,204,5)" rx="2" ry="2" />
<text  x="1036.58" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (115,790,126 samples, 0.01%)</title><rect x="353.1" y="1765" width="0.1" height="15.0" fill="rgb(229,62,5)" rx="2" ry="2" />
<text  x="356.07" y="1775.5" ></text>
</g>
<g >
<title>operator delete (189,984,018 samples, 0.01%)</title><rect x="258.9" y="1493" width="0.2" height="15.0" fill="rgb(233,210,21)" rx="2" ry="2" />
<text  x="261.90" y="1503.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (2,091,405,144 samples, 0.15%)</title><rect x="730.5" y="1797" width="1.8" height="15.0" fill="rgb(223,49,17)" rx="2" ry="2" />
<text  x="733.49" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (567,545,371 samples, 0.04%)</title><rect x="469.1" y="1765" width="0.4" height="15.0" fill="rgb(219,177,43)" rx="2" ry="2" />
<text  x="472.05" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="309" width="0.2" height="15.0" fill="rgb(219,3,32)" rx="2" ry="2" />
<text  x="1048.93" y="319.5" ></text>
</g>
<g >
<title>__fwprintf_chk (342,674,394 samples, 0.03%)</title><rect x="1091.9" y="2021" width="0.3" height="15.0" fill="rgb(221,198,52)" rx="2" ry="2" />
<text  x="1094.89" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::check_threshold_push (160,500,619 samples, 0.01%)</title><rect x="223.9" y="1541" width="0.1" height="15.0" fill="rgb(223,48,53)" rx="2" ry="2" />
<text  x="226.85" y="1551.5" ></text>
</g>
<g >
<title>free_unref_page_commit (212,308,129 samples, 0.02%)</title><rect x="1088.3" y="1749" width="0.2" height="15.0" fill="rgb(216,193,53)" rx="2" ry="2" />
<text  x="1091.33" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (342,674,394 samples, 0.03%)</title><rect x="1091.9" y="2005" width="0.3" height="15.0" fill="rgb(241,11,54)" rx="2" ry="2" />
<text  x="1094.89" y="2015.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (3,935,785,007 samples, 0.29%)</title><rect x="416.4" y="1813" width="3.4" height="15.0" fill="rgb(245,198,18)" rx="2" ry="2" />
<text  x="419.40" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (558,817,677 samples, 0.04%)</title><rect x="352.6" y="1765" width="0.5" height="15.0" fill="rgb(219,17,20)" rx="2" ry="2" />
<text  x="355.59" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (185,400,806 samples, 0.01%)</title><rect x="838.0" y="1845" width="0.1" height="15.0" fill="rgb(246,50,32)" rx="2" ry="2" />
<text  x="840.96" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (130,843,631 samples, 0.01%)</title><rect x="88.7" y="1717" width="0.1" height="15.0" fill="rgb(235,179,15)" rx="2" ry="2" />
<text  x="91.72" y="1727.5" ></text>
</g>
<g >
<title>vfs_write (158,162,543 samples, 0.01%)</title><rect x="1092.4" y="1941" width="0.2" height="15.0" fill="rgb(206,31,51)" rx="2" ry="2" />
<text  x="1095.43" y="1951.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::_M_max_size (153,198,080 samples, 0.01%)</title><rect x="448.3" y="1717" width="0.1" height="15.0" fill="rgb(254,177,2)" rx="2" ry="2" />
<text  x="451.30" y="1727.5" ></text>
</g>
<g >
<title>dequeue_task_fair (892,252,044 samples, 0.07%)</title><rect x="964.5" y="1893" width="0.8" height="15.0" fill="rgb(234,15,28)" rx="2" ry="2" />
<text  x="967.48" y="1903.5" ></text>
</g>
<g >
<title>lzma_decode (2,623,326,985 samples, 0.19%)</title><rect x="1081.7" y="2037" width="2.2" height="15.0" fill="rgb(243,87,52)" rx="2" ry="2" />
<text  x="1084.67" y="2047.5" ></text>
</g>
<g >
<title>do_idle (27,584,660,905 samples, 2.03%)</title><rect x="1164.9" y="1989" width="23.9" height="15.0" fill="rgb(242,191,26)" rx="2" ry="2" />
<text  x="1167.87" y="1999.5" >d..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (13,225,844,529 samples, 0.97%)</title><rect x="607.4" y="1829" width="11.5" height="15.0" fill="rgb(228,71,4)" rx="2" ry="2" />
<text  x="610.45" y="1839.5" ></text>
</g>
<g >
<title>[snap] (415,284,461 samples, 0.03%)</title><rect x="1163.2" y="1925" width="0.4" height="15.0" fill="rgb(218,27,26)" rx="2" ry="2" />
<text  x="1166.24" y="1935.5" ></text>
</g>
<g >
<title>__handle_mm_fault (195,349,353 samples, 0.01%)</title><rect x="1072.8" y="1781" width="0.2" height="15.0" fill="rgb(241,106,19)" rx="2" ry="2" />
<text  x="1075.83" y="1791.5" ></text>
</g>
<g >
<title>folly::Ignore::Ignore&lt;unsigned long&gt; (293,919,768 samples, 0.02%)</title><rect x="567.0" y="1829" width="0.3" height="15.0" fill="rgb(226,200,15)" rx="2" ry="2" />
<text  x="570.01" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::getItem (1,409,246,102 samples, 0.10%)</title><rect x="487.0" y="1861" width="1.2" height="15.0" fill="rgb(228,212,31)" rx="2" ry="2" />
<text  x="489.98" y="1871.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (424,308,413 samples, 0.03%)</title><rect x="85.2" y="1685" width="0.4" height="15.0" fill="rgb(225,204,33)" rx="2" ry="2" />
<text  x="88.25" y="1695.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::check_threshold_push (23,521,986,480 samples, 1.73%)</title><rect x="181.8" y="1733" width="20.4" height="15.0" fill="rgb(245,208,22)" rx="2" ry="2" />
<text  x="184.78" y="1743.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (160,412,108 samples, 0.01%)</title><rect x="1184.1" y="1909" width="0.1" height="15.0" fill="rgb(208,36,14)" rx="2" ry="2" />
<text  x="1187.08" y="1919.5" ></text>
</g>
<g >
<title>ttwu_do_activate (288,169,882 samples, 0.02%)</title><rect x="1186.5" y="1829" width="0.2" height="15.0" fill="rgb(211,10,12)" rx="2" ry="2" />
<text  x="1189.48" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (207,869,302 samples, 0.02%)</title><rect x="316.0" y="1557" width="0.2" height="15.0" fill="rgb(244,46,3)" rx="2" ry="2" />
<text  x="319.03" y="1567.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,156,466,168 samples, 0.16%)</title><rect x="412.3" y="1733" width="1.9" height="15.0" fill="rgb(206,100,50)" rx="2" ry="2" />
<text  x="415.32" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="869" width="0.2" height="15.0" fill="rgb(239,1,33)" rx="2" ry="2" />
<text  x="1048.93" y="879.5" ></text>
</g>
<g >
<title>[unknown] (216,547,082 samples, 0.02%)</title><rect x="1045.9" y="1973" width="0.2" height="15.0" fill="rgb(210,61,43)" rx="2" ry="2" />
<text  x="1048.92" y="1983.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (140,477,626 samples, 0.01%)</title><rect x="1057.7" y="1909" width="0.2" height="15.0" fill="rgb(233,168,14)" rx="2" ry="2" />
<text  x="1060.75" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::init (9,186,697,165 samples, 0.68%)</title><rect x="475.4" y="1845" width="8.0" height="15.0" fill="rgb(213,24,43)" rx="2" ry="2" />
<text  x="478.40" y="1855.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (400,410,804 samples, 0.03%)</title><rect x="1039.2" y="2021" width="0.4" height="15.0" fill="rgb(231,148,2)" rx="2" ry="2" />
<text  x="1042.20" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (328,397,089 samples, 0.02%)</title><rect x="224.3" y="1061" width="0.3" height="15.0" fill="rgb(227,95,36)" rx="2" ry="2" />
<text  x="227.29" y="1071.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (184,415,229 samples, 0.01%)</title><rect x="224.3" y="709" width="0.2" height="15.0" fill="rgb(213,209,11)" rx="2" ry="2" />
<text  x="227.31" y="719.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::deallocate (199,652,249 samples, 0.01%)</title><rect x="88.2" y="1669" width="0.1" height="15.0" fill="rgb(232,188,2)" rx="2" ry="2" />
<text  x="91.17" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::count (12,288,114,010 samples, 0.90%)</title><rect x="1099.4" y="1861" width="10.7" height="15.0" fill="rgb(223,174,20)" rx="2" ry="2" />
<text  x="1102.41" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,814,734,769 samples, 0.57%)</title><rect x="401.7" y="1781" width="6.8" height="15.0" fill="rgb(234,160,37)" rx="2" ry="2" />
<text  x="404.72" y="1791.5" ></text>
</g>
<g >
<title>__count_memcg_events (150,281,210 samples, 0.01%)</title><rect x="971.2" y="1941" width="0.2" height="15.0" fill="rgb(215,47,46)" rx="2" ry="2" />
<text  x="974.23" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::hazptr_domain&lt;std::atomic&gt;*&gt; (122,995,553 samples, 0.01%)</title><rect x="353.2" y="1765" width="0.1" height="15.0" fill="rgb(240,139,45)" rx="2" ry="2" />
<text  x="356.21" y="1775.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (116,086,546 samples, 0.01%)</title><rect x="463.7" y="1749" width="0.1" height="15.0" fill="rgb(210,25,23)" rx="2" ry="2" />
<text  x="466.73" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::hazptr_obj_linked (1,469,150,278 samples, 0.11%)</title><rect x="483.7" y="1829" width="1.3" height="15.0" fill="rgb(228,185,21)" rx="2" ry="2" />
<text  x="486.68" y="1839.5" ></text>
</g>
<g >
<title>folly::to_ascii_with&lt;10ul, folly::to_ascii_alphabet&lt;false&gt;, 20ul&gt; (77,337,687,657 samples, 5.68%)</title><rect x="642.3" y="1813" width="67.1" height="15.0" fill="rgb(236,220,28)" rx="2" ry="2" />
<text  x="645.32" y="1823.5" >folly::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,762,937,800 samples, 0.13%)</title><rect x="861.1" y="1829" width="1.5" height="15.0" fill="rgb(249,35,16)" rx="2" ry="2" />
<text  x="864.06" y="1839.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (156,357,160 samples, 0.01%)</title><rect x="948.2" y="1941" width="0.1" height="15.0" fill="rgb(236,153,29)" rx="2" ry="2" />
<text  x="951.19" y="1951.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::cohort (644,347,673 samples, 0.05%)</title><rect x="95.3" y="1749" width="0.6" height="15.0" fill="rgb(252,70,49)" rx="2" ry="2" />
<text  x="98.29" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (4,914,621,706 samples, 0.36%)</title><rect x="222.5" y="1621" width="4.2" height="15.0" fill="rgb(251,214,21)" rx="2" ry="2" />
<text  x="225.48" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="629" width="0.2" height="15.0" fill="rgb(221,207,13)" rx="2" ry="2" />
<text  x="1048.93" y="639.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_head (517,290,662 samples, 0.04%)</title><rect x="222.8" y="1509" width="0.4" height="15.0" fill="rgb(229,18,16)" rx="2" ry="2" />
<text  x="225.75" y="1519.5" ></text>
</g>
<g >
<title>__folio_alloc (128,346,983 samples, 0.01%)</title><rect x="1072.9" y="1717" width="0.1" height="15.0" fill="rgb(236,106,12)" rx="2" ry="2" />
<text  x="1075.89" y="1727.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (210,676,197 samples, 0.02%)</title><rect x="267.2" y="1605" width="0.2" height="15.0" fill="rgb(244,133,20)" rx="2" ry="2" />
<text  x="270.17" y="1615.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (12,407,466,019 samples, 0.91%)</title><rect x="80.9" y="1765" width="10.7" height="15.0" fill="rgb(241,215,19)" rx="2" ry="2" />
<text  x="83.89" y="1775.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (584,751,456 samples, 0.04%)</title><rect x="968.2" y="1909" width="0.5" height="15.0" fill="rgb(205,70,41)" rx="2" ry="2" />
<text  x="971.17" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (73,722,484,206 samples, 5.42%)</title><rect x="1097.1" y="2021" width="63.9" height="15.0" fill="rgb(211,29,19)" rx="2" ry="2" />
<text  x="1100.06" y="2031.5" >folly::..</text>
</g>
<g >
<title>ext4_file_write_iter (838,140,826 samples, 0.06%)</title><rect x="1073.7" y="1877" width="0.8" height="15.0" fill="rgb(212,189,37)" rx="2" ry="2" />
<text  x="1076.73" y="1887.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (802,173,567 samples, 0.06%)</title><rect x="971.5" y="1957" width="0.7" height="15.0" fill="rgb(210,211,42)" rx="2" ry="2" />
<text  x="974.51" y="1967.5" ></text>
</g>
<g >
<title>pick_next_task (252,093,098 samples, 0.02%)</title><rect x="1160.5" y="1861" width="0.2" height="15.0" fill="rgb(209,9,34)" rx="2" ry="2" />
<text  x="1163.50" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (141,006,674 samples, 0.01%)</title><rect x="892.6" y="1877" width="0.1" height="15.0" fill="rgb(237,8,23)" rx="2" ry="2" />
<text  x="895.60" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (805,480,948 samples, 0.06%)</title><rect x="71.1" y="1685" width="0.7" height="15.0" fill="rgb(227,138,41)" rx="2" ry="2" />
<text  x="74.09" y="1695.5" ></text>
</g>
<g >
<title>exit_mm (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="1957" width="0.7" height="15.0" fill="rgb(222,15,3)" rx="2" ry="2" />
<text  x="1090.95" y="1967.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (685,465,155 samples, 0.05%)</title><rect x="283.2" y="1589" width="0.6" height="15.0" fill="rgb(234,29,45)" rx="2" ry="2" />
<text  x="286.16" y="1599.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (251,930,400 samples, 0.02%)</title><rect x="224.3" y="773" width="0.2" height="15.0" fill="rgb(225,93,2)" rx="2" ry="2" />
<text  x="227.31" y="783.5" ></text>
</g>
<g >
<title>__schedule (2,870,960,880 samples, 0.21%)</title><rect x="1185.8" y="1957" width="2.5" height="15.0" fill="rgb(207,141,13)" rx="2" ry="2" />
<text  x="1188.77" y="1967.5" ></text>
</g>
<g >
<title>__divtf3 (124,167,307 samples, 0.01%)</title><rect x="1091.8" y="2021" width="0.1" height="15.0" fill="rgb(211,109,3)" rx="2" ry="2" />
<text  x="1094.77" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (1,111,614,549 samples, 0.08%)</title><rect x="513.9" y="1845" width="0.9" height="15.0" fill="rgb(216,136,42)" rx="2" ry="2" />
<text  x="516.87" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (678,240,806 samples, 0.05%)</title><rect x="757.7" y="1829" width="0.6" height="15.0" fill="rgb(251,203,53)" rx="2" ry="2" />
<text  x="760.73" y="1839.5" ></text>
</g>
<g >
<title>do_anonymous_page (167,201,732 samples, 0.01%)</title><rect x="1072.9" y="1749" width="0.1" height="15.0" fill="rgb(248,119,1)" rx="2" ry="2" />
<text  x="1075.85" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (507,305,453 samples, 0.04%)</title><rect x="1072.6" y="1989" width="0.4" height="15.0" fill="rgb(251,8,0)" rx="2" ry="2" />
<text  x="1075.60" y="1999.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (6,806,629,312 samples, 0.50%)</title><rect x="876.4" y="1845" width="5.9" height="15.0" fill="rgb(242,206,19)" rx="2" ry="2" />
<text  x="879.42" y="1855.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (322,751,518 samples, 0.02%)</title><rect x="1186.5" y="1845" width="0.2" height="15.0" fill="rgb(208,140,54)" rx="2" ry="2" />
<text  x="1189.47" y="1855.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (211,183,512 samples, 0.02%)</title><rect x="497.2" y="1845" width="0.1" height="15.0" fill="rgb(214,151,10)" rx="2" ry="2" />
<text  x="500.15" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (1,145,271,167 samples, 0.08%)</title><rect x="1100.8" y="1829" width="1.0" height="15.0" fill="rgb(246,20,25)" rx="2" ry="2" />
<text  x="1103.83" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2,631,230,798 samples, 0.19%)</title><rect x="810.7" y="1829" width="2.3" height="15.0" fill="rgb(250,5,22)" rx="2" ry="2" />
<text  x="813.68" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (827,361,290 samples, 0.06%)</title><rect x="481.2" y="1797" width="0.7" height="15.0" fill="rgb(211,156,8)" rx="2" ry="2" />
<text  x="484.17" y="1807.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (406,278,613 samples, 0.03%)</title><rect x="1086.7" y="1765" width="0.3" height="15.0" fill="rgb(241,113,12)" rx="2" ry="2" />
<text  x="1089.70" y="1775.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::active (18,163,532,707 samples, 1.34%)</title><rect x="166.0" y="1733" width="15.8" height="15.0" fill="rgb(226,175,42)" rx="2" ry="2" />
<text  x="169.02" y="1743.5" ></text>
</g>
<g >
<title>handle_pte_fault (826,938,071 samples, 0.06%)</title><rect x="947.4" y="1925" width="0.7" height="15.0" fill="rgb(237,24,26)" rx="2" ry="2" />
<text  x="950.41" y="1935.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (261,216,321 samples, 0.02%)</title><rect x="1056.0" y="1989" width="0.3" height="15.0" fill="rgb(216,197,31)" rx="2" ry="2" />
<text  x="1059.02" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="741" width="0.2" height="15.0" fill="rgb(231,96,21)" rx="2" ry="2" />
<text  x="1048.93" y="751.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_inc (144,212,296 samples, 0.01%)</title><rect x="48.4" y="1781" width="0.2" height="15.0" fill="rgb(213,89,50)" rx="2" ry="2" />
<text  x="51.45" y="1791.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (296,028,865 samples, 0.02%)</title><rect x="512.7" y="1845" width="0.2" height="15.0" fill="rgb(228,188,38)" rx="2" ry="2" />
<text  x="515.67" y="1855.5" ></text>
</g>
<g >
<title>get_page_from_freelist (119,441,244 samples, 0.01%)</title><rect x="1072.9" y="1685" width="0.1" height="15.0" fill="rgb(228,140,35)" rx="2" ry="2" />
<text  x="1075.89" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (566,405,440 samples, 0.04%)</title><rect x="875.0" y="1845" width="0.5" height="15.0" fill="rgb(243,137,54)" rx="2" ry="2" />
<text  x="878.02" y="1855.5" ></text>
</g>
<g >
<title>std::operator&amp; (116,993,792 samples, 0.01%)</title><rect x="1159.8" y="1861" width="0.1" height="15.0" fill="rgb(212,200,19)" rx="2" ry="2" />
<text  x="1162.77" y="1871.5" ></text>
</g>
<g >
<title>__x64_sys_write (874,137,283 samples, 0.06%)</title><rect x="1073.7" y="1941" width="0.8" height="15.0" fill="rgb(208,150,22)" rx="2" ry="2" />
<text  x="1076.71" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (45,649,155,769 samples, 3.36%)</title><rect x="228.7" y="1637" width="39.6" height="15.0" fill="rgb(229,150,0)" rx="2" ry="2" />
<text  x="231.69" y="1647.5" >fol..</text>
</g>
<g >
<title>update_process_times (231,413,023 samples, 0.02%)</title><rect x="1178.9" y="1797" width="0.2" height="15.0" fill="rgb(241,195,0)" rx="2" ry="2" />
<text  x="1181.87" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (364,167,646 samples, 0.03%)</title><rect x="482.7" y="1813" width="0.3" height="15.0" fill="rgb(251,2,2)" rx="2" ry="2" />
<text  x="485.71" y="1823.5" ></text>
</g>
<g >
<title>std::equal_to&lt;void const*&gt;::operator (345,472,464 samples, 0.03%)</title><rect x="1107.7" y="1765" width="0.3" height="15.0" fill="rgb(223,158,48)" rx="2" ry="2" />
<text  x="1110.74" y="1775.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (130,708,729 samples, 0.01%)</title><rect x="485.2" y="1845" width="0.1" height="15.0" fill="rgb(243,7,25)" rx="2" ry="2" />
<text  x="488.23" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::release_ref (6,257,130,857 samples, 0.46%)</title><rect x="333.2" y="1669" width="5.4" height="15.0" fill="rgb(242,183,39)" rx="2" ry="2" />
<text  x="336.17" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (183,340,849 samples, 0.01%)</title><rect x="842.8" y="1861" width="0.2" height="15.0" fill="rgb(216,154,35)" rx="2" ry="2" />
<text  x="845.84" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (260,918,776 samples, 0.02%)</title><rect x="224.3" y="789" width="0.2" height="15.0" fill="rgb(241,224,33)" rx="2" ry="2" />
<text  x="227.30" y="799.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (279,708,242 samples, 0.02%)</title><rect x="1178.8" y="1845" width="0.3" height="15.0" fill="rgb(223,192,41)" rx="2" ry="2" />
<text  x="1181.83" y="1855.5" ></text>
</g>
<g >
<title>FileFd::OpenDescriptor (148,321,389 samples, 0.01%)</title><rect x="1076.8" y="1989" width="0.1" height="15.0" fill="rgb(246,157,44)" rx="2" ry="2" />
<text  x="1079.77" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,815,668,717 samples, 0.13%)</title><rect x="781.5" y="1845" width="1.6" height="15.0" fill="rgb(208,175,25)" rx="2" ry="2" />
<text  x="784.54" y="1855.5" ></text>
</g>
<g >
<title>do_sys_openat2 (384,406,562 samples, 0.03%)</title><rect x="1092.6" y="1957" width="0.3" height="15.0" fill="rgb(235,127,23)" rx="2" ry="2" />
<text  x="1095.57" y="1967.5" ></text>
</g>
<g >
<title>__vfwprintf_chk (167,029,732 samples, 0.01%)</title><rect x="1092.4" y="2021" width="0.2" height="15.0" fill="rgb(229,174,16)" rx="2" ry="2" />
<text  x="1095.42" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (28,489,307,356 samples, 2.09%)</title><rect x="867.9" y="1877" width="24.7" height="15.0" fill="rgb(210,26,20)" rx="2" ry="2" />
<text  x="870.89" y="1887.5" >s..</text>
</g>
<g >
<title>google::GetReferenceableValue (149,701,488 samples, 0.01%)</title><rect x="306.9" y="1637" width="0.1" height="15.0" fill="rgb(213,2,34)" rx="2" ry="2" />
<text  x="309.90" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (224,788,279 samples, 0.02%)</title><rect x="1045.9" y="1989" width="0.2" height="15.0" fill="rgb(242,138,19)" rx="2" ry="2" />
<text  x="1048.92" y="1999.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (125,934,052 samples, 0.01%)</title><rect x="224.3" y="533" width="0.1" height="15.0" fill="rgb(249,194,22)" rx="2" ry="2" />
<text  x="227.32" y="543.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (4,325,396,151 samples, 0.32%)</title><rect x="493.8" y="1877" width="3.7" height="15.0" fill="rgb(222,177,9)" rx="2" ry="2" />
<text  x="496.79" y="1887.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,678,042,303 samples, 0.12%)</title><rect x="743.7" y="1733" width="1.5" height="15.0" fill="rgb(215,164,50)" rx="2" ry="2" />
<text  x="746.70" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (191,769,070 samples, 0.01%)</title><rect x="757.6" y="1829" width="0.1" height="15.0" fill="rgb(213,19,21)" rx="2" ry="2" />
<text  x="760.56" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;APT::Configuration::Compressor, std::allocator&lt;APT::Configuration::Compressor&gt; &gt;::emplace_back&lt;char const  (154,345,566 samples, 0.01%)</title><rect x="1077.6" y="2021" width="0.1" height="15.0" fill="rgb(235,114,42)" rx="2" ry="2" />
<text  x="1080.59" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="549" width="0.2" height="15.0" fill="rgb(212,196,35)" rx="2" ry="2" />
<text  x="1048.93" y="559.5" ></text>
</g>
<g >
<title>search_binary_handler (150,260,330 samples, 0.01%)</title><rect x="1081.2" y="1909" width="0.1" height="15.0" fill="rgb(225,180,3)" rx="2" ry="2" />
<text  x="1084.21" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::allocate (1,456,089,188 samples, 0.11%)</title><rect x="277.7" y="1573" width="1.3" height="15.0" fill="rgb(243,221,24)" rx="2" ry="2" />
<text  x="280.73" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3,699,327,173 samples, 0.27%)</title><rect x="832.0" y="1845" width="3.2" height="15.0" fill="rgb(206,188,16)" rx="2" ry="2" />
<text  x="834.98" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (118,997,028 samples, 0.01%)</title><rect x="47.7" y="1797" width="0.1" height="15.0" fill="rgb(228,229,39)" rx="2" ry="2" />
<text  x="50.70" y="1807.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (253,009,362 samples, 0.02%)</title><rect x="435.4" y="1749" width="0.2" height="15.0" fill="rgb(233,1,14)" rx="2" ry="2" />
<text  x="438.36" y="1759.5" ></text>
</g>
<g >
<title>pkgCache::GrpIterator::FindPreferredPkg (972,495,508 samples, 0.07%)</title><rect x="1075.4" y="1989" width="0.8" height="15.0" fill="rgb(208,16,53)" rx="2" ry="2" />
<text  x="1078.36" y="1999.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_deleter (445,819,123 samples, 0.03%)</title><rect x="476.3" y="1829" width="0.4" height="15.0" fill="rgb(231,216,21)" rx="2" ry="2" />
<text  x="479.31" y="1839.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1,074,860,258 samples, 0.08%)</title><rect x="1036.5" y="1893" width="0.9" height="15.0" fill="rgb(214,69,52)" rx="2" ry="2" />
<text  x="1039.47" y="1903.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (220,118,816 samples, 0.02%)</title><rect x="1044.2" y="2021" width="0.2" height="15.0" fill="rgb(208,55,52)" rx="2" ry="2" />
<text  x="1047.17" y="2031.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (295,174,654 samples, 0.02%)</title><rect x="223.5" y="1509" width="0.2" height="15.0" fill="rgb(248,14,32)" rx="2" ry="2" />
<text  x="226.45" y="1519.5" ></text>
</g>
<g >
<title>std::operator&amp; (128,711,458 samples, 0.01%)</title><rect x="200.6" y="1701" width="0.2" height="15.0" fill="rgb(253,0,45)" rx="2" ry="2" />
<text  x="203.64" y="1711.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,867,695,371 samples, 0.14%)</title><rect x="889.6" y="1797" width="1.7" height="15.0" fill="rgb(230,171,14)" rx="2" ry="2" />
<text  x="892.64" y="1807.5" ></text>
</g>
<g >
<title>do_syscall_64 (342,674,394 samples, 0.03%)</title><rect x="1091.9" y="1989" width="0.3" height="15.0" fill="rgb(253,21,36)" rx="2" ry="2" />
<text  x="1094.89" y="1999.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::hazptr_obj&lt;std::atomic&gt;*, folly::hazptr_obj&lt;std::atomic&gt;*&gt; (245,783,470 samples, 0.02%)</title><rect x="1130.1" y="1893" width="0.2" height="15.0" fill="rgb(206,2,36)" rx="2" ry="2" />
<text  x="1133.09" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,868,254,086 samples, 0.14%)</title><rect x="809.1" y="1829" width="1.6" height="15.0" fill="rgb(218,6,22)" rx="2" ry="2" />
<text  x="812.06" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (176,590,951 samples, 0.01%)</title><rect x="430.8" y="1797" width="0.2" height="15.0" fill="rgb(241,33,14)" rx="2" ry="2" />
<text  x="433.81" y="1807.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1,019,758,063 samples, 0.07%)</title><rect x="467.9" y="1733" width="0.9" height="15.0" fill="rgb(235,165,17)" rx="2" ry="2" />
<text  x="470.91" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt; &gt; &gt; &gt; (825,873,940 samples, 0.06%)</title><rect x="1076.8" y="2021" width="0.7" height="15.0" fill="rgb(214,73,46)" rx="2" ry="2" />
<text  x="1079.77" y="2031.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (1,163,202,417 samples, 0.09%)</title><rect x="787.9" y="1861" width="1.0" height="15.0" fill="rgb(210,40,20)" rx="2" ry="2" />
<text  x="790.93" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (669,544,772 samples, 0.05%)</title><rect x="1089.7" y="2005" width="0.5" height="15.0" fill="rgb(212,190,1)" rx="2" ry="2" />
<text  x="1092.67" y="2015.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::set_cohort_tag (513,468,927 samples, 0.04%)</title><rect x="476.7" y="1829" width="0.4" height="15.0" fill="rgb(229,144,32)" rx="2" ry="2" />
<text  x="479.69" y="1839.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (872,797,899 samples, 0.06%)</title><rect x="1188.9" y="1909" width="0.7" height="15.0" fill="rgb(243,216,6)" rx="2" ry="2" />
<text  x="1191.87" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (499,903,746 samples, 0.04%)</title><rect x="858.1" y="1829" width="0.4" height="15.0" fill="rgb(222,116,50)" rx="2" ry="2" />
<text  x="861.10" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_data (350,804,630 samples, 0.03%)</title><rect x="89.0" y="1733" width="0.3" height="15.0" fill="rgb(215,175,34)" rx="2" ry="2" />
<text  x="91.97" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1,075,968,340 samples, 0.08%)</title><rect x="1073.6" y="2005" width="0.9" height="15.0" fill="rgb(227,37,34)" rx="2" ry="2" />
<text  x="1076.60" y="2015.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deallocate (784,059,201 samples, 0.06%)</title><rect x="329.7" y="1573" width="0.6" height="15.0" fill="rgb(246,149,47)" rx="2" ry="2" />
<text  x="332.67" y="1583.5" ></text>
</g>
<g >
<title>debSrcRecordParser::Files (1,075,968,340 samples, 0.08%)</title><rect x="1073.6" y="2021" width="0.9" height="15.0" fill="rgb(252,73,48)" rx="2" ry="2" />
<text  x="1076.60" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (31,847,183,033 samples, 2.34%)</title><rect x="437.3" y="1765" width="27.6" height="15.0" fill="rgb(218,129,28)" rx="2" ry="2" />
<text  x="440.28" y="1775.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique&lt;void const*, void const*, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void const*, false&gt; &gt; &gt; &gt; (338,087,013 samples, 0.02%)</title><rect x="1097.4" y="1861" width="0.3" height="15.0" fill="rgb(213,33,53)" rx="2" ry="2" />
<text  x="1100.38" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="421" width="0.2" height="15.0" fill="rgb(216,138,31)" rx="2" ry="2" />
<text  x="1048.93" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (275,974,579 samples, 0.02%)</title><rect x="417.3" y="1781" width="0.3" height="15.0" fill="rgb(206,179,45)" rx="2" ry="2" />
<text  x="420.31" y="1791.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (184,415,229 samples, 0.01%)</title><rect x="224.3" y="645" width="0.2" height="15.0" fill="rgb(221,203,13)" rx="2" ry="2" />
<text  x="227.31" y="655.5" ></text>
</g>
<g >
<title>psi_group_change (226,133,888 samples, 0.02%)</title><rect x="1029.2" y="1877" width="0.2" height="15.0" fill="rgb(231,103,35)" rx="2" ry="2" />
<text  x="1032.22" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::cas_safe_list_top (9,821,666,905 samples, 0.72%)</title><rect x="1144.8" y="1893" width="8.5" height="15.0" fill="rgb(217,126,3)" rx="2" ry="2" />
<text  x="1147.77" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::pop_back (595,750,994 samples, 0.04%)</title><rect x="308.6" y="1637" width="0.5" height="15.0" fill="rgb(225,156,31)" rx="2" ry="2" />
<text  x="311.55" y="1647.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (211,821,340 samples, 0.02%)</title><rect x="418.6" y="1653" width="0.2" height="15.0" fill="rgb(254,19,34)" rx="2" ry="2" />
<text  x="421.61" y="1663.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,396,074,568 samples, 0.18%)</title><rect x="456.4" y="1733" width="2.0" height="15.0" fill="rgb(244,117,28)" rx="2" ry="2" />
<text  x="459.37" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (667,950,603 samples, 0.05%)</title><rect x="240.6" y="1573" width="0.6" height="15.0" fill="rgb(239,135,24)" rx="2" ry="2" />
<text  x="243.64" y="1583.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (1,366,084,241 samples, 0.10%)</title><rect x="1040.2" y="2037" width="1.2" height="15.0" fill="rgb(234,44,0)" rx="2" ry="2" />
<text  x="1043.18" y="2047.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (1,474,830,409 samples, 0.11%)</title><rect x="878.9" y="1829" width="1.3" height="15.0" fill="rgb(221,106,33)" rx="2" ry="2" />
<text  x="881.94" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_domain_push_retired&lt;std::atomic&gt; (2,255,553,611 samples, 0.17%)</title><rect x="183.5" y="1717" width="2.0" height="15.0" fill="rgb(223,94,48)" rx="2" ry="2" />
<text  x="186.55" y="1727.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (761,748,905 samples, 0.06%)</title><rect x="464.2" y="1733" width="0.6" height="15.0" fill="rgb(245,121,18)" rx="2" ry="2" />
<text  x="467.18" y="1743.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (148,173,876 samples, 0.01%)</title><rect x="1074.3" y="1733" width="0.1" height="15.0" fill="rgb(248,144,50)" rx="2" ry="2" />
<text  x="1077.25" y="1743.5" ></text>
</g>
<g >
<title>std::operator&amp; (584,043,182 samples, 0.04%)</title><rect x="148.2" y="1669" width="0.5" height="15.0" fill="rgb(237,72,28)" rx="2" ry="2" />
<text  x="151.16" y="1679.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (328,397,089 samples, 0.02%)</title><rect x="224.3" y="1093" width="0.3" height="15.0" fill="rgb(233,41,45)" rx="2" ry="2" />
<text  x="227.29" y="1103.5" ></text>
</g>
<g >
<title>std::move&lt;folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;&amp;&gt; (373,803,145 samples, 0.03%)</title><rect x="483.0" y="1829" width="0.4" height="15.0" fill="rgb(252,16,18)" rx="2" ry="2" />
<text  x="486.04" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (786,983,857 samples, 0.06%)</title><rect x="1090.8" y="2021" width="0.7" height="15.0" fill="rgb(250,108,8)" rx="2" ry="2" />
<text  x="1093.79" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::acquire_link (10,102,102,720 samples, 0.74%)</title><rect x="359.9" y="1813" width="8.8" height="15.0" fill="rgb(216,83,35)" rx="2" ry="2" />
<text  x="362.89" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="901" width="0.2" height="15.0" fill="rgb(243,58,30)" rx="2" ry="2" />
<text  x="1048.93" y="911.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1749" width="0.2" height="15.0" fill="rgb(249,217,14)" rx="2" ry="2" />
<text  x="1048.93" y="1759.5" ></text>
</g>
<g >
<title>pkgDebianIndexTargetFile::pkgDebianIndexTargetFile (117,560,504 samples, 0.01%)</title><rect x="1069.3" y="2005" width="0.1" height="15.0" fill="rgb(245,74,31)" rx="2" ry="2" />
<text  x="1072.29" y="2015.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,426,521,115 samples, 0.18%)</title><rect x="785.8" y="1845" width="2.1" height="15.0" fill="rgb(238,142,41)" rx="2" ry="2" />
<text  x="788.83" y="1855.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (160,717,779 samples, 0.01%)</title><rect x="338.9" y="1669" width="0.1" height="15.0" fill="rgb(223,60,25)" rx="2" ry="2" />
<text  x="341.85" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="965" width="0.2" height="15.0" fill="rgb(254,67,9)" rx="2" ry="2" />
<text  x="1048.93" y="975.5" ></text>
</g>
<g >
<title>generic_write_end (376,663,597 samples, 0.03%)</title><rect x="1074.1" y="1813" width="0.3" height="15.0" fill="rgb(252,222,36)" rx="2" ry="2" />
<text  x="1077.12" y="1823.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (431,602,230 samples, 0.03%)</title><rect x="1036.8" y="1861" width="0.4" height="15.0" fill="rgb(214,34,32)" rx="2" ry="2" />
<text  x="1039.83" y="1871.5" ></text>
</g>
<g >
<title>pick_next_task_fair (804,924,111 samples, 0.06%)</title><rect x="965.5" y="1893" width="0.7" height="15.0" fill="rgb(209,60,16)" rx="2" ry="2" />
<text  x="968.51" y="1903.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (132,064,031 samples, 0.01%)</title><rect x="1072.6" y="1861" width="0.1" height="15.0" fill="rgb(233,193,46)" rx="2" ry="2" />
<text  x="1075.62" y="1871.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, unsigned long&amp;, false&gt;::_M_head (459,223,436 samples, 0.03%)</title><rect x="515.5" y="1797" width="0.4" height="15.0" fill="rgb(207,21,29)" rx="2" ry="2" />
<text  x="518.48" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1797" width="0.2" height="15.0" fill="rgb(221,40,40)" rx="2" ry="2" />
<text  x="1048.93" y="1807.5" ></text>
</g>
<g >
<title>_find_next_bit (291,959,850 samples, 0.02%)</title><rect x="1027.0" y="1781" width="0.3" height="15.0" fill="rgb(223,176,22)" rx="2" ry="2" />
<text  x="1030.04" y="1791.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (227,167,589 samples, 0.02%)</title><rect x="1084.7" y="2021" width="0.2" height="15.0" fill="rgb(243,200,46)" rx="2" ry="2" />
<text  x="1087.75" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::next (11,542,410,949 samples, 0.85%)</title><rect x="185.5" y="1717" width="10.0" height="15.0" fill="rgb(224,106,39)" rx="2" ry="2" />
<text  x="188.51" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11,898,955,116 samples, 0.87%)</title><rect x="718.5" y="1813" width="10.3" height="15.0" fill="rgb(242,162,6)" rx="2" ry="2" />
<text  x="721.48" y="1823.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (120,750,387 samples, 0.01%)</title><rect x="1189.3" y="1765" width="0.1" height="15.0" fill="rgb(231,141,16)" rx="2" ry="2" />
<text  x="1192.34" y="1775.5" ></text>
</g>
<g >
<title>std::operator&amp; (219,658,293 samples, 0.02%)</title><rect x="357.4" y="1749" width="0.2" height="15.0" fill="rgb(251,214,5)" rx="2" ry="2" />
<text  x="360.39" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1765" width="0.2" height="15.0" fill="rgb(228,178,18)" rx="2" ry="2" />
<text  x="1048.93" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (12,604,389,620 samples, 0.93%)</title><rect x="821.0" y="1845" width="11.0" height="15.0" fill="rgb(228,0,11)" rx="2" ry="2" />
<text  x="824.05" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,675,171,315 samples, 0.20%)</title><rect x="1052.3" y="2005" width="2.3" height="15.0" fill="rgb(225,105,28)" rx="2" ry="2" />
<text  x="1055.30" y="2015.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (945,195,440 samples, 0.07%)</title><rect x="224.2" y="1349" width="0.8" height="15.0" fill="rgb(222,89,52)" rx="2" ry="2" />
<text  x="227.22" y="1359.5" ></text>
</g>
<g >
<title>new_sync_write (850,817,587 samples, 0.06%)</title><rect x="1073.7" y="1893" width="0.8" height="15.0" fill="rgb(253,20,0)" rx="2" ry="2" />
<text  x="1076.72" y="1903.5" ></text>
</g>
<g >
<title>__iswblank_l (949,315,695 samples, 0.07%)</title><rect x="1160.2" y="1973" width="0.8" height="15.0" fill="rgb(237,67,39)" rx="2" ry="2" />
<text  x="1163.15" y="1983.5" ></text>
</g>
<g >
<title>dequeue_task (443,013,500 samples, 0.03%)</title><rect x="412.6" y="1621" width="0.3" height="15.0" fill="rgb(252,91,38)" rx="2" ry="2" />
<text  x="415.56" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_openat (384,406,562 samples, 0.03%)</title><rect x="1092.6" y="1973" width="0.3" height="15.0" fill="rgb(224,105,47)" rx="2" ry="2" />
<text  x="1095.57" y="1983.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (124,385,915 samples, 0.01%)</title><rect x="227.0" y="1685" width="0.1" height="15.0" fill="rgb(208,195,23)" rx="2" ry="2" />
<text  x="229.96" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (73,695,309,650 samples, 5.42%)</title><rect x="572.8" y="1845" width="63.9" height="15.0" fill="rgb(207,11,46)" rx="2" ry="2" />
<text  x="575.81" y="1855.5" >std::__..</text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,086,152,959 samples, 0.08%)</title><rect x="224.1" y="1509" width="1.0" height="15.0" fill="rgb(234,74,54)" rx="2" ry="2" />
<text  x="227.14" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_set_node (2,220,213,054 samples, 0.16%)</title><rect x="281.2" y="1589" width="2.0" height="15.0" fill="rgb(214,164,41)" rx="2" ry="2" />
<text  x="284.23" y="1599.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (3,969,018,065 samples, 0.29%)</title><rect x="628.7" y="1781" width="3.4" height="15.0" fill="rgb(239,134,24)" rx="2" ry="2" />
<text  x="631.68" y="1791.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_set (117,564,866 samples, 0.01%)</title><rect x="482.6" y="1813" width="0.1" height="15.0" fill="rgb(242,146,50)" rx="2" ry="2" />
<text  x="485.56" y="1823.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (385,542,248 samples, 0.03%)</title><rect x="745.3" y="1781" width="0.3" height="15.0" fill="rgb(243,49,21)" rx="2" ry="2" />
<text  x="748.26" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (204,680,911 samples, 0.02%)</title><rect x="273.6" y="1589" width="0.2" height="15.0" fill="rgb(235,17,12)" rx="2" ry="2" />
<text  x="276.63" y="1599.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (1,171,569,927 samples, 0.09%)</title><rect x="1066.0" y="2005" width="1.0" height="15.0" fill="rgb(219,41,21)" rx="2" ry="2" />
<text  x="1068.98" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (119,060,135 samples, 0.01%)</title><rect x="863.3" y="1861" width="0.1" height="15.0" fill="rgb(248,31,11)" rx="2" ry="2" />
<text  x="866.34" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (269,908,043 samples, 0.02%)</title><rect x="224.3" y="917" width="0.2" height="15.0" fill="rgb(226,214,34)" rx="2" ry="2" />
<text  x="227.30" y="927.5" ></text>
</g>
<g >
<title>folly::toAppendFit&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (681,133,903 samples, 0.05%)</title><rect x="791.3" y="1893" width="0.6" height="15.0" fill="rgb(230,173,28)" rx="2" ry="2" />
<text  x="794.31" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="837" width="0.2" height="15.0" fill="rgb(222,136,32)" rx="2" ry="2" />
<text  x="1048.93" y="847.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (5,697,398,938 samples, 0.42%)</title><rect x="44.8" y="1813" width="5.0" height="15.0" fill="rgb(225,224,8)" rx="2" ry="2" />
<text  x="47.82" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (338,326,304 samples, 0.02%)</title><rect x="501.9" y="1845" width="0.3" height="15.0" fill="rgb(254,29,44)" rx="2" ry="2" />
<text  x="504.86" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (3,704,367,600 samples, 0.27%)</title><rect x="765.2" y="1861" width="3.3" height="15.0" fill="rgb(234,104,46)" rx="2" ry="2" />
<text  x="768.24" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_map (3,496,704,820 samples, 0.26%)</title><rect x="70.6" y="1701" width="3.1" height="15.0" fill="rgb(233,111,22)" rx="2" ry="2" />
<text  x="73.65" y="1711.5" ></text>
</g>
<g >
<title>find_vma (272,450,655 samples, 0.02%)</title><rect x="1029.7" y="1957" width="0.2" height="15.0" fill="rgb(221,81,36)" rx="2" ry="2" />
<text  x="1032.71" y="1967.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (170,769,805 samples, 0.01%)</title><rect x="1062.4" y="2037" width="0.1" height="15.0" fill="rgb(205,155,30)" rx="2" ry="2" />
<text  x="1065.38" y="2047.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (5,542,598,064 samples, 0.41%)</title><rect x="773.5" y="1829" width="4.8" height="15.0" fill="rgb(224,40,0)" rx="2" ry="2" />
<text  x="776.54" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1317" width="0.2" height="15.0" fill="rgb(231,42,12)" rx="2" ry="2" />
<text  x="1048.93" y="1327.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::deallocate (139,012,298 samples, 0.01%)</title><rect x="330.2" y="1557" width="0.1" height="15.0" fill="rgb(210,80,6)" rx="2" ry="2" />
<text  x="333.23" y="1567.5" ></text>
</g>
<g >
<title>folly::asymmetric_thread_fence_heavy_fn::impl_ (126,720,136 samples, 0.01%)</title><rect x="1097.1" y="1925" width="0.1" height="15.0" fill="rgb(235,44,12)" rx="2" ry="2" />
<text  x="1100.07" y="1935.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (26,380,250,362 samples, 1.94%)</title><rect x="909.5" y="2021" width="22.9" height="15.0" fill="rgb(210,155,27)" rx="2" ry="2" />
<text  x="912.48" y="2031.5" >_..</text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (140,062,220 samples, 0.01%)</title><rect x="1179.9" y="1813" width="0.1" height="15.0" fill="rgb(238,77,5)" rx="2" ry="2" />
<text  x="1182.86" y="1823.5" ></text>
</g>
<g >
<title>[snap] (549,945,861 samples, 0.04%)</title><rect x="1163.2" y="2021" width="0.4" height="15.0" fill="rgb(252,116,5)" rx="2" ry="2" />
<text  x="1166.17" y="2031.5" ></text>
</g>
<g >
<title>std::atomic&lt;void const*&gt;::store (2,947,520,552 samples, 0.22%)</title><rect x="903.7" y="1861" width="2.6" height="15.0" fill="rgb(207,98,2)" rx="2" ry="2" />
<text  x="906.73" y="1871.5" ></text>
</g>
<g >
<title>record__pushfn (195,502,058 samples, 0.01%)</title><rect x="1162.8" y="1925" width="0.1" height="15.0" fill="rgb(217,6,20)" rx="2" ry="2" />
<text  x="1165.77" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (132,796,284 samples, 0.01%)</title><rect x="1179.9" y="1797" width="0.1" height="15.0" fill="rgb(205,180,27)" rx="2" ry="2" />
<text  x="1182.87" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::getItem (584,173,727 samples, 0.04%)</title><rect x="47.9" y="1797" width="0.5" height="15.0" fill="rgb(213,65,36)" rx="2" ry="2" />
<text  x="50.91" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (428,814,762 samples, 0.03%)</title><rect x="843.5" y="1861" width="0.4" height="15.0" fill="rgb(223,88,24)" rx="2" ry="2" />
<text  x="846.49" y="1871.5" ></text>
</g>
<g >
<title>main (232,622,597 samples, 0.02%)</title><rect x="1162.7" y="2021" width="0.2" height="15.0" fill="rgb(252,211,30)" rx="2" ry="2" />
<text  x="1165.74" y="2031.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (271,513,541 samples, 0.02%)</title><rect x="338.6" y="1669" width="0.2" height="15.0" fill="rgb(206,99,43)" rx="2" ry="2" />
<text  x="341.60" y="1679.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (115,389,314 samples, 0.01%)</title><rect x="948.4" y="1957" width="0.1" height="15.0" fill="rgb(244,58,10)" rx="2" ry="2" />
<text  x="951.38" y="1967.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (673,563,020 samples, 0.05%)</title><rect x="489.7" y="1861" width="0.6" height="15.0" fill="rgb(224,222,35)" rx="2" ry="2" />
<text  x="492.73" y="1871.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (37,923,373,855 samples, 2.79%)</title><rect x="973.3" y="2037" width="32.9" height="15.0" fill="rgb(220,190,21)" rx="2" ry="2" />
<text  x="976.34" y="2047.5" >__..</text>
</g>
<g >
<title>folly::to_ascii_size_decimal (35,793,334,300 samples, 2.63%)</title><rect x="533.2" y="1813" width="31.1" height="15.0" fill="rgb(251,227,42)" rx="2" ry="2" />
<text  x="536.24" y="1823.5" >fo..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (379,830,097 samples, 0.03%)</title><rect x="790.1" y="1877" width="0.3" height="15.0" fill="rgb(241,155,46)" rx="2" ry="2" />
<text  x="793.07" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (755,871,737 samples, 0.06%)</title><rect x="1104.3" y="1765" width="0.6" height="15.0" fill="rgb(205,77,42)" rx="2" ry="2" />
<text  x="1107.27" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,206,404,499 samples, 0.16%)</title><rect x="857.1" y="1845" width="1.9" height="15.0" fill="rgb(227,70,21)" rx="2" ry="2" />
<text  x="860.07" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_nodes (2,163,210,038 samples, 0.16%)</title><rect x="288.8" y="1605" width="1.8" height="15.0" fill="rgb(210,80,18)" rx="2" ry="2" />
<text  x="291.77" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1,030,943,143 samples, 0.08%)</title><rect x="445.7" y="1733" width="0.9" height="15.0" fill="rgb(222,29,9)" rx="2" ry="2" />
<text  x="448.73" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (212,233,767 samples, 0.02%)</title><rect x="312.5" y="1589" width="0.1" height="15.0" fill="rgb(237,58,20)" rx="2" ry="2" />
<text  x="315.46" y="1599.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (1,029,739,981 samples, 0.08%)</title><rect x="1188.9" y="2021" width="0.9" height="15.0" fill="rgb(207,227,36)" rx="2" ry="2" />
<text  x="1191.86" y="2031.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (144,508,787 samples, 0.01%)</title><rect x="462.3" y="1717" width="0.1" height="15.0" fill="rgb(219,98,20)" rx="2" ry="2" />
<text  x="465.26" y="1727.5" ></text>
</g>
<g >
<title>handle_pte_fault (4,465,597,569 samples, 0.33%)</title><rect x="967.3" y="1941" width="3.9" height="15.0" fill="rgb(223,31,21)" rx="2" ry="2" />
<text  x="970.30" y="1951.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (292,449,113 samples, 0.02%)</title><rect x="1181.7" y="1797" width="0.2" height="15.0" fill="rgb(233,56,48)" rx="2" ry="2" />
<text  x="1184.68" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (608,718,926 samples, 0.04%)</title><rect x="1086.6" y="1861" width="0.5" height="15.0" fill="rgb(251,25,1)" rx="2" ry="2" />
<text  x="1089.62" y="1871.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::__new_allocator (127,259,928 samples, 0.01%)</title><rect x="473.9" y="1829" width="0.1" height="15.0" fill="rgb(213,119,8)" rx="2" ry="2" />
<text  x="476.85" y="1839.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (15,857,027,231 samples, 1.17%)</title><rect x="270.7" y="1653" width="13.7" height="15.0" fill="rgb(219,31,0)" rx="2" ry="2" />
<text  x="273.67" y="1663.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (179,968,419 samples, 0.01%)</title><rect x="1033.6" y="1893" width="0.1" height="15.0" fill="rgb(235,171,7)" rx="2" ry="2" />
<text  x="1036.58" y="1903.5" ></text>
</g>
<g >
<title>folly::toAppend&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (141,327,848,468 samples, 10.39%)</title><rect x="636.7" y="1861" width="122.6" height="15.0" fill="rgb(245,32,9)" rx="2" ry="2" />
<text  x="639.73" y="1871.5" >folly::toAppend..</text>
</g>
<g >
<title>ext4_buffered_write_iter (152,765,370 samples, 0.01%)</title><rect x="1092.4" y="1893" width="0.2" height="15.0" fill="rgb(225,153,29)" rx="2" ry="2" />
<text  x="1095.43" y="1903.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (445,672,744 samples, 0.03%)</title><rect x="968.3" y="1861" width="0.4" height="15.0" fill="rgb(223,16,43)" rx="2" ry="2" />
<text  x="971.29" y="1871.5" ></text>
</g>
<g >
<title>pick_next_task_fair (6,712,202,590 samples, 0.49%)</title><rect x="1022.9" y="1877" width="5.9" height="15.0" fill="rgb(248,203,41)" rx="2" ry="2" />
<text  x="1025.94" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~deque (10,211,900,335 samples, 0.75%)</title><rect x="324.2" y="1637" width="8.9" height="15.0" fill="rgb(237,190,43)" rx="2" ry="2" />
<text  x="327.23" y="1647.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::release_link (122,776,754 samples, 0.01%)</title><rect x="359.7" y="1797" width="0.1" height="15.0" fill="rgb(216,65,44)" rx="2" ry="2" />
<text  x="362.70" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (26,976,012,668 samples, 1.98%)</title><rect x="242.4" y="1541" width="23.4" height="15.0" fill="rgb(224,113,28)" rx="2" ry="2" />
<text  x="245.37" y="1551.5" >s..</text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1,569,066,051 samples, 0.12%)</title><rect x="767.1" y="1845" width="1.4" height="15.0" fill="rgb(252,171,51)" rx="2" ry="2" />
<text  x="770.09" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1461" width="0.2" height="15.0" fill="rgb(220,17,39)" rx="2" ry="2" />
<text  x="1048.93" y="1471.5" ></text>
</g>
<g >
<title>lz_encoder_prepare (120,737,668 samples, 0.01%)</title><rect x="1074.7" y="2021" width="0.1" height="15.0" fill="rgb(217,169,21)" rx="2" ry="2" />
<text  x="1077.66" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocator (203,543,085 samples, 0.01%)</title><rect x="312.7" y="1589" width="0.1" height="15.0" fill="rgb(231,143,42)" rx="2" ry="2" />
<text  x="315.66" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (240,465,317 samples, 0.02%)</title><rect x="1023.8" y="1797" width="0.2" height="15.0" fill="rgb(246,196,24)" rx="2" ry="2" />
<text  x="1026.83" y="1807.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (640,299,671 samples, 0.05%)</title><rect x="78.5" y="1669" width="0.6" height="15.0" fill="rgb(231,223,28)" rx="2" ry="2" />
<text  x="81.50" y="1679.5" ></text>
</g>
<g >
<title>dequeue_entity (177,570,409 samples, 0.01%)</title><rect x="946.7" y="1861" width="0.2" height="15.0" fill="rgb(236,81,31)" rx="2" ry="2" />
<text  x="949.75" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::check_threshold_and_reclaim (125,167,898 samples, 0.01%)</title><rect x="212.8" y="1669" width="0.1" height="15.0" fill="rgb(212,41,2)" rx="2" ry="2" />
<text  x="215.79" y="1679.5" ></text>
</g>
<g >
<title>burn (4,396,569,335 samples, 0.32%)</title><rect x="1084.7" y="2053" width="3.9" height="15.0" fill="rgb(240,28,41)" rx="2" ry="2" />
<text  x="1087.75" y="2063.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (248,861,039 samples, 0.02%)</title><rect x="493.4" y="1829" width="0.2" height="15.0" fill="rgb(231,145,28)" rx="2" ry="2" />
<text  x="496.36" y="1839.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (248,928,029 samples, 0.02%)</title><rect x="493.6" y="1845" width="0.2" height="15.0" fill="rgb(251,54,33)" rx="2" ry="2" />
<text  x="496.57" y="1855.5" ></text>
</g>
<g >
<title>pkgPackageManager::SmartUnPack (1,526,737,439 samples, 0.11%)</title><rect x="1069.6" y="2005" width="1.3" height="15.0" fill="rgb(223,37,4)" rx="2" ry="2" />
<text  x="1072.62" y="2015.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::~allocator (117,779,398 samples, 0.01%)</title><rect x="267.4" y="1605" width="0.1" height="15.0" fill="rgb(212,20,19)" rx="2" ry="2" />
<text  x="270.36" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::_Tuple_impl (200,415,237 samples, 0.01%)</title><rect x="427.7" y="1797" width="0.2" height="15.0" fill="rgb(228,125,14)" rx="2" ry="2" />
<text  x="430.73" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (926,561,781 samples, 0.07%)</title><rect x="332.3" y="1605" width="0.8" height="15.0" fill="rgb(207,104,44)" rx="2" ry="2" />
<text  x="335.28" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_lock (125,154,412 samples, 0.01%)</title><rect x="1023.3" y="1845" width="0.1" height="15.0" fill="rgb(206,19,15)" rx="2" ry="2" />
<text  x="1026.28" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1413" width="0.2" height="15.0" fill="rgb(224,166,38)" rx="2" ry="2" />
<text  x="1048.93" y="1423.5" ></text>
</g>
<g >
<title>do_futex (1,371,719,127 samples, 0.10%)</title><rect x="417.6" y="1717" width="1.2" height="15.0" fill="rgb(254,16,16)" rx="2" ry="2" />
<text  x="420.61" y="1727.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::set_next (572,051,489 samples, 0.04%)</title><rect x="148.7" y="1701" width="0.5" height="15.0" fill="rgb(239,68,2)" rx="2" ry="2" />
<text  x="151.70" y="1711.5" ></text>
</g>
<g >
<title>cpuacct_charge (196,284,064 samples, 0.01%)</title><rect x="1022.1" y="1829" width="0.1" height="15.0" fill="rgb(205,54,21)" rx="2" ry="2" />
<text  x="1025.06" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (162,660,798 samples, 0.01%)</title><rect x="1092.4" y="2005" width="0.2" height="15.0" fill="rgb(223,200,43)" rx="2" ry="2" />
<text  x="1095.43" y="2015.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (179,920,794 samples, 0.01%)</title><rect x="224.3" y="613" width="0.2" height="15.0" fill="rgb(218,119,37)" rx="2" ry="2" />
<text  x="227.32" y="623.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::pop (660,569,205 samples, 0.05%)</title><rect x="308.5" y="1653" width="0.6" height="15.0" fill="rgb(214,73,37)" rx="2" ry="2" />
<text  x="311.49" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="197" width="0.2" height="15.0" fill="rgb(243,61,25)" rx="2" ry="2" />
<text  x="1048.93" y="207.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (554,439,967 samples, 0.04%)</title><rect x="875.5" y="1845" width="0.5" height="15.0" fill="rgb(246,73,23)" rx="2" ry="2" />
<text  x="878.51" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;void const*&gt;::_M_ptr (314,949,003 samples, 0.02%)</title><rect x="1107.0" y="1733" width="0.2" height="15.0" fill="rgb(236,206,53)" rx="2" ry="2" />
<text  x="1109.97" y="1743.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::next (20,599,725,218 samples, 1.51%)</title><rect x="1110.1" y="1893" width="17.8" height="15.0" fill="rgb(250,163,36)" rx="2" ry="2" />
<text  x="1113.07" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1269" width="0.2" height="15.0" fill="rgb(220,193,17)" rx="2" ry="2" />
<text  x="1048.93" y="1279.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (189,781,929 samples, 0.01%)</title><rect x="88.5" y="1717" width="0.2" height="15.0" fill="rgb(241,166,47)" rx="2" ry="2" />
<text  x="91.49" y="1727.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (129,859,064 samples, 0.01%)</title><rect x="1096.0" y="2005" width="0.2" height="15.0" fill="rgb(248,163,20)" rx="2" ry="2" />
<text  x="1099.04" y="2015.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (264,104,938 samples, 0.02%)</title><rect x="1056.6" y="2037" width="0.2" height="15.0" fill="rgb(249,82,33)" rx="2" ry="2" />
<text  x="1059.60" y="2047.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (179,920,794 samples, 0.01%)</title><rect x="224.3" y="597" width="0.2" height="15.0" fill="rgb(225,62,10)" rx="2" ry="2" />
<text  x="227.32" y="607.5" ></text>
</g>
<g >
<title>rwsem_spin_on_owner (958,007,860 samples, 0.07%)</title><rect x="1019.1" y="1909" width="0.8" height="15.0" fill="rgb(254,44,34)" rx="2" ry="2" />
<text  x="1022.07" y="1919.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (153,177,813 samples, 0.01%)</title><rect x="71.7" y="1669" width="0.1" height="15.0" fill="rgb(245,63,17)" rx="2" ry="2" />
<text  x="74.65" y="1679.5" ></text>
</g>
<g >
<title>all (1,360,454,730,479 samples, 100%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(235,135,18)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (289,633,615 samples, 0.02%)</title><rect x="494.5" y="1861" width="0.2" height="15.0" fill="rgb(226,149,2)" rx="2" ry="2" />
<text  x="497.49" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::empty (839,735,737 samples, 0.06%)</title><rect x="269.9" y="1637" width="0.7" height="15.0" fill="rgb(226,225,9)" rx="2" ry="2" />
<text  x="272.92" y="1647.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (29,951,900,028 samples, 2.20%)</title><rect x="239.9" y="1589" width="25.9" height="15.0" fill="rgb(226,161,24)" rx="2" ry="2" />
<text  x="242.87" y="1599.5" >f..</text>
</g>
<g >
<title>____wcstod_l_internal (199,376,423 samples, 0.01%)</title><rect x="1049.8" y="2021" width="0.2" height="15.0" fill="rgb(225,47,2)" rx="2" ry="2" />
<text  x="1052.83" y="2031.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (646,563,417 samples, 0.05%)</title><rect x="756.8" y="1813" width="0.5" height="15.0" fill="rgb(205,144,14)" rx="2" ry="2" />
<text  x="759.77" y="1823.5" ></text>
</g>
<g >
<title>poll_idle (462,050,589 samples, 0.03%)</title><rect x="1182.5" y="1909" width="0.4" height="15.0" fill="rgb(241,225,42)" rx="2" ry="2" />
<text  x="1185.52" y="1919.5" ></text>
</g>
<g >
<title>ext4_da_write_end (376,663,597 samples, 0.03%)</title><rect x="1074.1" y="1829" width="0.3" height="15.0" fill="rgb(242,139,33)" rx="2" ry="2" />
<text  x="1077.12" y="1839.5" ></text>
</g>
<g >
<title>XXH3_64bits_update (250,303,580 samples, 0.02%)</title><rect x="1060.0" y="2021" width="0.3" height="15.0" fill="rgb(232,142,35)" rx="2" ry="2" />
<text  x="1063.04" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_domain_push_retired&lt;std::atomic&gt; (358,616,041 samples, 0.03%)</title><rect x="212.6" y="1701" width="0.3" height="15.0" fill="rgb(241,35,22)" rx="2" ry="2" />
<text  x="215.60" y="1711.5" ></text>
</g>
<g >
<title>__folio_alloc (439,936,871 samples, 0.03%)</title><rect x="947.7" y="1877" width="0.4" height="15.0" fill="rgb(212,43,47)" rx="2" ry="2" />
<text  x="950.73" y="1887.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (150,260,330 samples, 0.01%)</title><rect x="1081.2" y="1973" width="0.1" height="15.0" fill="rgb(247,110,32)" rx="2" ry="2" />
<text  x="1084.21" y="1983.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (1,051,185,876 samples, 0.08%)</title><rect x="790.4" y="1877" width="0.9" height="15.0" fill="rgb(213,94,12)" rx="2" ry="2" />
<text  x="793.40" y="1887.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (298,058,709 samples, 0.02%)</title><rect x="732.4" y="1797" width="0.3" height="15.0" fill="rgb(221,142,48)" rx="2" ry="2" />
<text  x="735.44" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (353,666,044 samples, 0.03%)</title><rect x="445.4" y="1733" width="0.3" height="15.0" fill="rgb(238,1,22)" rx="2" ry="2" />
<text  x="448.43" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (546,762,331 samples, 0.04%)</title><rect x="401.2" y="1781" width="0.5" height="15.0" fill="rgb(229,191,27)" rx="2" ry="2" />
<text  x="404.24" y="1791.5" ></text>
</g>
<g >
<title>psi_task_switch (458,479,747 samples, 0.03%)</title><rect x="1029.1" y="1893" width="0.4" height="15.0" fill="rgb(254,165,18)" rx="2" ry="2" />
<text  x="1032.09" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (190,392,259 samples, 0.01%)</title><rect x="1162.8" y="1893" width="0.1" height="15.0" fill="rgb(216,196,20)" rx="2" ry="2" />
<text  x="1165.77" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="677" width="0.2" height="15.0" fill="rgb(215,3,47)" rx="2" ry="2" />
<text  x="1048.93" y="687.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (178,219,844 samples, 0.01%)</title><rect x="224.7" y="1221" width="0.1" height="15.0" fill="rgb(239,145,46)" rx="2" ry="2" />
<text  x="227.69" y="1231.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (299,636,409 samples, 0.02%)</title><rect x="1077.8" y="2037" width="0.2" height="15.0" fill="rgb(250,212,42)" rx="2" ry="2" />
<text  x="1080.77" y="2047.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (259,574,058 samples, 0.02%)</title><rect x="328.1" y="1573" width="0.3" height="15.0" fill="rgb(214,205,38)" rx="2" ry="2" />
<text  x="331.15" y="1583.5" ></text>
</g>
<g >
<title>dequeue_task (117,468,617 samples, 0.01%)</title><rect x="1024.3" y="1797" width="0.1" height="15.0" fill="rgb(238,17,35)" rx="2" ry="2" />
<text  x="1027.31" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (32,255,292,627 samples, 2.37%)</title><rect x="761.8" y="1877" width="27.9" height="15.0" fill="rgb(239,132,45)" rx="2" ry="2" />
<text  x="764.77" y="1887.5" >s..</text>
</g>
<g >
<title>std::unordered_set&lt;void const*, std::hash&lt;void const*&gt;, std::equal_to&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::insert (404,691,363 samples, 0.03%)</title><rect x="1097.4" y="1909" width="0.3" height="15.0" fill="rgb(215,61,18)" rx="2" ry="2" />
<text  x="1100.37" y="1919.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::invoke_reclamation_in_executor (72,730,131,697 samples, 5.35%)</title><rect x="1097.1" y="1957" width="63.0" height="15.0" fill="rgb(253,114,17)" rx="2" ry="2" />
<text  x="1100.06" y="1967.5" >folly:..</text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::_M_max_size (235,510,976 samples, 0.02%)</title><rect x="603.4" y="1781" width="0.2" height="15.0" fill="rgb(217,214,15)" rx="2" ry="2" />
<text  x="606.38" y="1791.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (125,732,838 samples, 0.01%)</title><rect x="224.6" y="1125" width="0.1" height="15.0" fill="rgb(244,219,9)" rx="2" ry="2" />
<text  x="227.57" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1,804,854,563 samples, 0.13%)</title><rect x="442.6" y="1749" width="1.6" height="15.0" fill="rgb(243,221,25)" rx="2" ry="2" />
<text  x="445.61" y="1759.5" ></text>
</g>
<g >
<title>getaddrinfo (319,234,578 samples, 0.02%)</title><rect x="1081.1" y="2037" width="0.3" height="15.0" fill="rgb(249,220,31)" rx="2" ry="2" />
<text  x="1084.08" y="2047.5" ></text>
</g>
<g >
<title>update_load_avg (257,754,244 samples, 0.02%)</title><rect x="964.9" y="1861" width="0.3" height="15.0" fill="rgb(238,56,40)" rx="2" ry="2" />
<text  x="967.94" y="1871.5" ></text>
</g>
<g >
<title>std::hash&lt;void const*&gt;::operator (161,208,019 samples, 0.01%)</title><rect x="1104.8" y="1749" width="0.1" height="15.0" fill="rgb(243,217,27)" rx="2" ry="2" />
<text  x="1107.79" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_list&lt;std::atomic&gt;::head (128,631,222 samples, 0.01%)</title><rect x="339.4" y="1685" width="0.2" height="15.0" fill="rgb(220,116,30)" rx="2" ry="2" />
<text  x="342.44" y="1695.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (406,222,178 samples, 0.03%)</title><rect x="224.7" y="1317" width="0.3" height="15.0" fill="rgb(254,194,54)" rx="2" ry="2" />
<text  x="227.69" y="1327.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (834,572,880 samples, 0.06%)</title><rect x="1073.7" y="1861" width="0.8" height="15.0" fill="rgb(250,153,20)" rx="2" ry="2" />
<text  x="1076.73" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrTableDeleter::operator (184,415,229 samples, 0.01%)</title><rect x="224.3" y="693" width="0.2" height="15.0" fill="rgb(249,86,16)" rx="2" ry="2" />
<text  x="227.31" y="703.5" ></text>
</g>
<g >
<title>std::construct_at&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (401,659,759 samples, 0.03%)</title><rect x="297.1" y="1557" width="0.4" height="15.0" fill="rgb(222,172,22)" rx="2" ry="2" />
<text  x="300.13" y="1567.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (187,098,626 samples, 0.01%)</title><rect x="512.5" y="1845" width="0.2" height="15.0" fill="rgb(251,127,36)" rx="2" ry="2" />
<text  x="515.51" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (191,733,159 samples, 0.01%)</title><rect x="224.7" y="1285" width="0.2" height="15.0" fill="rgb(208,78,9)" rx="2" ry="2" />
<text  x="227.69" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (3,799,092,768 samples, 0.28%)</title><rect x="849.4" y="1893" width="3.3" height="15.0" fill="rgb(228,103,52)" rx="2" ry="2" />
<text  x="852.37" y="1903.5" ></text>
</g>
<g >
<title>__x64_sys_clone (138,302,560 samples, 0.01%)</title><rect x="1081.1" y="1989" width="0.1" height="15.0" fill="rgb(230,204,19)" rx="2" ry="2" />
<text  x="1084.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="997" width="0.2" height="15.0" fill="rgb(226,199,13)" rx="2" ry="2" />
<text  x="1048.93" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="277" width="0.2" height="15.0" fill="rgb(229,49,41)" rx="2" ry="2" />
<text  x="1048.93" y="287.5" ></text>
</g>
<g >
<title>[unknown] (214,585,381 samples, 0.02%)</title><rect x="1162.0" y="2037" width="0.2" height="15.0" fill="rgb(254,16,38)" rx="2" ry="2" />
<text  x="1165.03" y="2047.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::allocate (1,902,781,660 samples, 0.14%)</title><rect x="74.9" y="1669" width="1.7" height="15.0" fill="rgb(209,63,38)" rx="2" ry="2" />
<text  x="77.91" y="1679.5" ></text>
</g>
<g >
<title>up_write (287,476,493 samples, 0.02%)</title><rect x="1037.6" y="1973" width="0.2" height="15.0" fill="rgb(207,170,2)" rx="2" ry="2" />
<text  x="1040.59" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8,226,649,407 samples, 0.60%)</title><rect x="451.3" y="1749" width="7.1" height="15.0" fill="rgb(213,113,48)" rx="2" ry="2" />
<text  x="454.31" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (188,103,881 samples, 0.01%)</title><rect x="1162.8" y="1877" width="0.1" height="15.0" fill="rgb(206,37,11)" rx="2" ry="2" />
<text  x="1165.78" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (150,015,235 samples, 0.01%)</title><rect x="1077.1" y="1973" width="0.1" height="15.0" fill="rgb(254,13,28)" rx="2" ry="2" />
<text  x="1080.12" y="1983.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (1,029,739,981 samples, 0.08%)</title><rect x="1188.9" y="2005" width="0.9" height="15.0" fill="rgb(243,35,34)" rx="2" ry="2" />
<text  x="1191.86" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;void const*&gt;::store (267,979,436 samples, 0.02%)</title><rect x="906.6" y="1877" width="0.2" height="15.0" fill="rgb(251,217,7)" rx="2" ry="2" />
<text  x="909.61" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_set (4,247,007,583 samples, 0.31%)</title><rect x="334.5" y="1653" width="3.7" height="15.0" fill="rgb(216,154,20)" rx="2" ry="2" />
<text  x="337.48" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1557" width="0.2" height="15.0" fill="rgb(236,227,34)" rx="2" ry="2" />
<text  x="1048.93" y="1567.5" ></text>
</g>
<g >
<title>std::seed_seq::generate&lt;unsigned int*&gt; (364,038,913 samples, 0.03%)</title><rect x="1039.6" y="2021" width="0.3" height="15.0" fill="rgb(235,215,44)" rx="2" ry="2" />
<text  x="1042.55" y="2031.5" ></text>
</g>
<g >
<title>std::operator&amp; (119,714,599 samples, 0.01%)</title><rect x="296.2" y="1605" width="0.1" height="15.0" fill="rgb(251,106,44)" rx="2" ry="2" />
<text  x="299.21" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_S_buffer_size (517,882,782 samples, 0.04%)</title><rect x="321.0" y="1573" width="0.5" height="15.0" fill="rgb(214,151,54)" rx="2" ry="2" />
<text  x="324.04" y="1583.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (137,717,527 samples, 0.01%)</title><rect x="1189.3" y="1781" width="0.1" height="15.0" fill="rgb(234,26,4)" rx="2" ry="2" />
<text  x="1192.32" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (162,114,635 samples, 0.01%)</title><rect x="908.2" y="1909" width="0.2" height="15.0" fill="rgb(240,23,28)" rx="2" ry="2" />
<text  x="911.25" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (129,581,580 samples, 0.01%)</title><rect x="239.8" y="1573" width="0.1" height="15.0" fill="rgb(228,142,37)" rx="2" ry="2" />
<text  x="242.76" y="1583.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (759,228,218 samples, 0.06%)</title><rect x="462.4" y="1717" width="0.6" height="15.0" fill="rgb(215,70,13)" rx="2" ry="2" />
<text  x="465.38" y="1727.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (1,168,959,163 samples, 0.09%)</title><rect x="222.7" y="1541" width="1.0" height="15.0" fill="rgb(226,89,30)" rx="2" ry="2" />
<text  x="225.70" y="1551.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2,232,165,521 samples, 0.16%)</title><rect x="471.4" y="1765" width="1.9" height="15.0" fill="rgb(252,116,52)" rx="2" ry="2" />
<text  x="474.39" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2,984,800,735 samples, 0.22%)</title><rect x="470.7" y="1781" width="2.6" height="15.0" fill="rgb(226,72,50)" rx="2" ry="2" />
<text  x="473.74" y="1791.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (179,920,794 samples, 0.01%)</title><rect x="224.3" y="565" width="0.2" height="15.0" fill="rgb(239,10,22)" rx="2" ry="2" />
<text  x="227.32" y="575.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count (395,573,099 samples, 0.03%)</title><rect x="226.3" y="1573" width="0.4" height="15.0" fill="rgb(249,111,22)" rx="2" ry="2" />
<text  x="229.33" y="1583.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (137,457,434 samples, 0.01%)</title><rect x="470.0" y="1781" width="0.1" height="15.0" fill="rgb(216,208,2)" rx="2" ry="2" />
<text  x="472.95" y="1791.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (191,816,709 samples, 0.01%)</title><rect x="1076.9" y="1989" width="0.2" height="15.0" fill="rgb(231,183,1)" rx="2" ry="2" />
<text  x="1079.95" y="1999.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (187,544,878 samples, 0.01%)</title><rect x="67.2" y="1701" width="0.2" height="15.0" fill="rgb(231,53,4)" rx="2" ry="2" />
<text  x="70.19" y="1711.5" ></text>
</g>
<g >
<title>do_filp_open (317,014,559 samples, 0.02%)</title><rect x="1092.6" y="1941" width="0.2" height="15.0" fill="rgb(223,35,48)" rx="2" ry="2" />
<text  x="1095.57" y="1951.5" ></text>
</g>
<g >
<title>kernel_clone (138,302,560 samples, 0.01%)</title><rect x="1081.1" y="1957" width="0.1" height="15.0" fill="rgb(236,38,40)" rx="2" ry="2" />
<text  x="1084.09" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::estimateSpaceToReserve&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (44,180,642,214 samples, 3.25%)</title><rect x="526.5" y="1845" width="38.3" height="15.0" fill="rgb(243,115,26)" rx="2" ry="2" />
<text  x="529.46" y="1855.5" >fol..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (120,211,224 samples, 0.01%)</title><rect x="1061.2" y="2021" width="0.1" height="15.0" fill="rgb(233,152,25)" rx="2" ry="2" />
<text  x="1064.24" y="2031.5" ></text>
</g>
<g >
<title>generic_perform_write (152,765,370 samples, 0.01%)</title><rect x="1092.4" y="1877" width="0.2" height="15.0" fill="rgb(220,66,24)" rx="2" ry="2" />
<text  x="1095.43" y="1887.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,211,402,843 samples, 0.16%)</title><rect x="1180.0" y="1813" width="1.9" height="15.0" fill="rgb(244,105,9)" rx="2" ry="2" />
<text  x="1183.02" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (262,191,523 samples, 0.02%)</title><rect x="385.4" y="1797" width="0.2" height="15.0" fill="rgb(246,164,35)" rx="2" ry="2" />
<text  x="388.36" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (125,732,838 samples, 0.01%)</title><rect x="224.6" y="1109" width="0.1" height="15.0" fill="rgb(223,129,32)" rx="2" ry="2" />
<text  x="227.57" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (10,389,560,114 samples, 0.76%)</title><rect x="854.2" y="1861" width="9.0" height="15.0" fill="rgb(254,32,19)" rx="2" ry="2" />
<text  x="857.19" y="1871.5" ></text>
</g>
<g >
<title>__strncat_sse2_unaligned (1,012,523,223 samples, 0.07%)</title><rect x="418.9" y="1781" width="0.9" height="15.0" fill="rgb(220,115,5)" rx="2" ry="2" />
<text  x="421.90" y="1791.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::release_link (449,716,746 samples, 0.03%)</title><rect x="226.3" y="1589" width="0.4" height="15.0" fill="rgb(216,132,1)" rx="2" ry="2" />
<text  x="229.33" y="1599.5" ></text>
</g>
<g >
<title>futex_wait_setup (233,393,798 samples, 0.02%)</title><rect x="413.8" y="1669" width="0.2" height="15.0" fill="rgb(207,174,44)" rx="2" ry="2" />
<text  x="416.81" y="1679.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (202,884,685 samples, 0.01%)</title><rect x="1073.2" y="2021" width="0.2" height="15.0" fill="rgb(225,86,43)" rx="2" ry="2" />
<text  x="1076.25" y="2031.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (245,289,109 samples, 0.02%)</title><rect x="101.6" y="1685" width="0.2" height="15.0" fill="rgb(225,59,36)" rx="2" ry="2" />
<text  x="104.63" y="1695.5" ></text>
</g>
<g >
<title>tick_sched_timer (244,366,499 samples, 0.02%)</title><rect x="1178.9" y="1829" width="0.2" height="15.0" fill="rgb(245,128,31)" rx="2" ry="2" />
<text  x="1181.86" y="1839.5" ></text>
</g>
<g >
<title>__alloc_pages (128,346,983 samples, 0.01%)</title><rect x="1072.9" y="1701" width="0.1" height="15.0" fill="rgb(254,130,52)" rx="2" ry="2" />
<text  x="1075.89" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (184,415,229 samples, 0.01%)</title><rect x="224.3" y="677" width="0.2" height="15.0" fill="rgb(230,206,22)" rx="2" ry="2" />
<text  x="227.31" y="687.5" ></text>
</g>
<g >
<title>dequeue_entity (723,983,326 samples, 0.05%)</title><rect x="964.6" y="1877" width="0.6" height="15.0" fill="rgb(234,180,44)" rx="2" ry="2" />
<text  x="967.57" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1253" width="0.4" height="15.0" fill="rgb(210,73,35)" rx="2" ry="2" />
<text  x="227.27" y="1263.5" ></text>
</g>
<g >
<title>folly::detail::getLastElement&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (5,465,054,009 samples, 0.40%)</title><rect x="564.8" y="1845" width="4.7" height="15.0" fill="rgb(215,147,39)" rx="2" ry="2" />
<text  x="567.78" y="1855.5" ></text>
</g>
<g >
<title>folly::ThreadPoolExecutor::runTask (1,036,931,055,052 samples, 76.22%)</title><rect x="10.0" y="1989" width="899.4" height="15.0" fill="rgb(243,149,51)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" >folly::ThreadPoolExecutor::runTask</text>
</g>
<g >
<title>__irq_exit_rcu (125,851,768 samples, 0.01%)</title><rect x="1189.5" y="1797" width="0.1" height="15.0" fill="rgb(254,215,22)" rx="2" ry="2" />
<text  x="1192.45" y="1807.5" ></text>
</g>
<g >
<title>do_syscall_64 (120,211,224 samples, 0.01%)</title><rect x="1061.2" y="2005" width="0.1" height="15.0" fill="rgb(243,176,9)" rx="2" ry="2" />
<text  x="1064.24" y="2015.5" ></text>
</g>
<g >
<title>resched_curr (195,971,358 samples, 0.01%)</title><rect x="1181.8" y="1781" width="0.1" height="15.0" fill="rgb(250,160,35)" rx="2" ry="2" />
<text  x="1184.77" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (889,129,921 samples, 0.07%)</title><rect x="89.7" y="1717" width="0.7" height="15.0" fill="rgb(211,167,22)" rx="2" ry="2" />
<text  x="92.66" y="1727.5" ></text>
</g>
<g >
<title>enqueue_entity (942,345,522 samples, 0.07%)</title><rect x="1180.4" y="1765" width="0.8" height="15.0" fill="rgb(250,188,48)" rx="2" ry="2" />
<text  x="1183.36" y="1775.5" ></text>
</g>
<g >
<title>folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (8,751,691,270 samples, 0.64%)</title><rect x="504.2" y="1845" width="7.6" height="15.0" fill="rgb(250,105,42)" rx="2" ry="2" />
<text  x="507.19" y="1855.5" ></text>
</g>
<g >
<title>dequeue_task (939,805,337 samples, 0.07%)</title><rect x="964.4" y="1909" width="0.9" height="15.0" fill="rgb(247,115,23)" rx="2" ry="2" />
<text  x="967.44" y="1919.5" ></text>
</g>
<g >
<title>ExecGPGV (347,224,086 samples, 0.03%)</title><rect x="1040.8" y="2021" width="0.3" height="15.0" fill="rgb(245,34,34)" rx="2" ry="2" />
<text  x="1043.78" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (360,107,194 samples, 0.03%)</title><rect x="49.2" y="1781" width="0.3" height="15.0" fill="rgb(236,76,51)" rx="2" ry="2" />
<text  x="52.22" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="805" width="0.2" height="15.0" fill="rgb(232,36,46)" rx="2" ry="2" />
<text  x="1048.93" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (417,150,165 samples, 0.03%)</title><rect x="466.6" y="1765" width="0.3" height="15.0" fill="rgb(251,97,33)" rx="2" ry="2" />
<text  x="469.55" y="1775.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (157,114,743 samples, 0.01%)</title><rect x="569.4" y="1829" width="0.1" height="15.0" fill="rgb(219,87,12)" rx="2" ry="2" />
<text  x="572.38" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (328,397,089 samples, 0.02%)</title><rect x="224.3" y="1125" width="0.3" height="15.0" fill="rgb(208,227,13)" rx="2" ry="2" />
<text  x="227.29" y="1135.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::set_next (237,511,538 samples, 0.02%)</title><rect x="1129.9" y="1877" width="0.2" height="15.0" fill="rgb(231,215,54)" rx="2" ry="2" />
<text  x="1132.88" y="1887.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (197,458,594 samples, 0.01%)</title><rect x="412.0" y="1765" width="0.2" height="15.0" fill="rgb(247,40,34)" rx="2" ry="2" />
<text  x="415.03" y="1775.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (184,971,641 samples, 0.01%)</title><rect x="1035.5" y="1845" width="0.1" height="15.0" fill="rgb(211,99,41)" rx="2" ry="2" />
<text  x="1038.48" y="1855.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (306,580,114 samples, 0.02%)</title><rect x="1078.0" y="2037" width="0.3" height="15.0" fill="rgb(224,35,47)" rx="2" ry="2" />
<text  x="1081.03" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="165" width="0.2" height="15.0" fill="rgb(233,107,51)" rx="2" ry="2" />
<text  x="1048.93" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (347,065,005 samples, 0.03%)</title><rect x="242.1" y="1541" width="0.3" height="15.0" fill="rgb(214,115,6)" rx="2" ry="2" />
<text  x="245.05" y="1551.5" ></text>
</g>
<g >
<title>perf_mmap__push (201,367,141 samples, 0.01%)</title><rect x="1162.8" y="1941" width="0.1" height="15.0" fill="rgb(242,121,3)" rx="2" ry="2" />
<text  x="1165.76" y="1951.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (242,982,233 samples, 0.02%)</title><rect x="1071.3" y="1989" width="0.2" height="15.0" fill="rgb(223,112,19)" rx="2" ry="2" />
<text  x="1074.31" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;bool&amp;&amp;&gt;::tuple&lt;bool, true, true&gt; (2,018,445,636 samples, 0.15%)</title><rect x="492.0" y="1861" width="1.8" height="15.0" fill="rgb(244,49,53)" rx="2" ry="2" />
<text  x="495.04" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (230,011,295 samples, 0.02%)</title><rect x="795.7" y="1877" width="0.2" height="15.0" fill="rgb(253,191,37)" rx="2" ry="2" />
<text  x="798.67" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1093" width="0.2" height="15.0" fill="rgb(251,118,7)" rx="2" ry="2" />
<text  x="1048.93" y="1103.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (127,295,984 samples, 0.01%)</title><rect x="225.6" y="1429" width="0.1" height="15.0" fill="rgb(234,224,13)" rx="2" ry="2" />
<text  x="228.56" y="1439.5" ></text>
</g>
<g >
<title>do_exit (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="1973" width="0.7" height="15.0" fill="rgb(227,54,28)" rx="2" ry="2" />
<text  x="1090.95" y="1983.5" ></text>
</g>
<g >
<title>sh (174,026,152 samples, 0.01%)</title><rect x="1163.0" y="2053" width="0.2" height="15.0" fill="rgb(209,67,39)" rx="2" ry="2" />
<text  x="1166.01" y="2063.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (4,853,484,529 samples, 0.36%)</title><rect x="614.0" y="1781" width="4.2" height="15.0" fill="rgb(220,185,39)" rx="2" ry="2" />
<text  x="616.96" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (235,292,524 samples, 0.02%)</title><rect x="791.9" y="1893" width="0.2" height="15.0" fill="rgb(233,145,32)" rx="2" ry="2" />
<text  x="794.90" y="1903.5" ></text>
</g>
<g >
<title>std::operator&amp; (221,133,708 samples, 0.02%)</title><rect x="181.5" y="1701" width="0.2" height="15.0" fill="rgb(216,18,2)" rx="2" ry="2" />
<text  x="184.54" y="1711.5" ></text>
</g>
<g >
<title>__strchr_sse2_no_bsf (118,519,540 samples, 0.01%)</title><rect x="1039.0" y="2021" width="0.1" height="15.0" fill="rgb(207,121,11)" rx="2" ry="2" />
<text  x="1042.00" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1893" width="0.2" height="15.0" fill="rgb(243,59,21)" rx="2" ry="2" />
<text  x="1048.93" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::_Deque_impl (3,303,325,245 samples, 0.24%)</title><rect x="310.0" y="1605" width="2.8" height="15.0" fill="rgb(248,164,45)" rx="2" ry="2" />
<text  x="312.97" y="1615.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (312,301,236 samples, 0.02%)</title><rect x="491.2" y="1877" width="0.2" height="15.0" fill="rgb(209,9,49)" rx="2" ry="2" />
<text  x="494.17" y="1887.5" ></text>
</g>
<g >
<title>std::mutex::unlock (130,888,095 samples, 0.01%)</title><rect x="420.3" y="1781" width="0.1" height="15.0" fill="rgb(251,29,13)" rx="2" ry="2" />
<text  x="423.26" y="1791.5" ></text>
</g>
<g >
<title>dequeue_entity (1,279,999,771 samples, 0.09%)</title><rect x="1021.5" y="1861" width="1.1" height="15.0" fill="rgb(216,32,11)" rx="2" ry="2" />
<text  x="1024.52" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_set (1,133,430,988 samples, 0.08%)</title><rect x="479.4" y="1797" width="1.0" height="15.0" fill="rgb(231,114,25)" rx="2" ry="2" />
<text  x="482.39" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (116,946,721 samples, 0.01%)</title><rect x="224.3" y="389" width="0.1" height="15.0" fill="rgb(236,32,4)" rx="2" ry="2" />
<text  x="227.33" y="399.5" ></text>
</g>
<g >
<title>acpi_idle_do_entry (14,492,305,632 samples, 1.07%)</title><rect x="1166.2" y="1893" width="12.6" height="15.0" fill="rgb(253,44,28)" rx="2" ry="2" />
<text  x="1169.18" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="757" width="0.2" height="15.0" fill="rgb(216,115,24)" rx="2" ry="2" />
<text  x="1048.93" y="767.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_initialize_map (11,162,956,563 samples, 0.82%)</title><rect x="313.0" y="1605" width="9.6" height="15.0" fill="rgb(248,22,33)" rx="2" ry="2" />
<text  x="315.96" y="1615.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (160,848,501 samples, 0.01%)</title><rect x="1184.6" y="1941" width="0.1" height="15.0" fill="rgb(245,134,22)" rx="2" ry="2" />
<text  x="1187.55" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1877" width="0.2" height="15.0" fill="rgb(246,142,14)" rx="2" ry="2" />
<text  x="1048.93" y="1887.5" ></text>
</g>
<g >
<title>schedule (10,433,184,213 samples, 0.77%)</title><rect x="1020.6" y="1925" width="9.1" height="15.0" fill="rgb(220,56,15)" rx="2" ry="2" />
<text  x="1023.65" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1589" width="0.2" height="15.0" fill="rgb(252,100,48)" rx="2" ry="2" />
<text  x="1048.93" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (243,174,412 samples, 0.02%)</title><rect x="277.2" y="1557" width="0.2" height="15.0" fill="rgb(241,95,48)" rx="2" ry="2" />
<text  x="280.23" y="1567.5" ></text>
</g>
<g >
<title>pkgCacheGenerator::AddNewDescription (213,035,371 samples, 0.02%)</title><rect x="1069.1" y="2005" width="0.1" height="15.0" fill="rgb(235,136,43)" rx="2" ry="2" />
<text  x="1072.06" y="2015.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (401,925,338 samples, 0.03%)</title><rect x="968.7" y="1909" width="0.3" height="15.0" fill="rgb(217,129,51)" rx="2" ry="2" />
<text  x="971.68" y="1919.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (159,736,349 samples, 0.01%)</title><rect x="1186.2" y="1941" width="0.1" height="15.0" fill="rgb(209,85,40)" rx="2" ry="2" />
<text  x="1189.17" y="1951.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;void const*&gt;::_M_ptr (270,591,228 samples, 0.02%)</title><rect x="1105.2" y="1733" width="0.2" height="15.0" fill="rgb(253,53,9)" rx="2" ry="2" />
<text  x="1108.16" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (15,088,788,972 samples, 1.11%)</title><rect x="309.7" y="1621" width="13.1" height="15.0" fill="rgb(248,67,43)" rx="2" ry="2" />
<text  x="312.71" y="1631.5" ></text>
</g>
<g >
<title>proc_single_show (137,195,858 samples, 0.01%)</title><rect x="1161.3" y="1893" width="0.1" height="15.0" fill="rgb(247,193,54)" rx="2" ry="2" />
<text  x="1164.29" y="1903.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (555,895,058 samples, 0.04%)</title><rect x="468.3" y="1717" width="0.5" height="15.0" fill="rgb(217,152,20)" rx="2" ry="2" />
<text  x="471.31" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,482,077,504 samples, 0.11%)</title><rect x="417.6" y="1749" width="1.3" height="15.0" fill="rgb(214,53,40)" rx="2" ry="2" />
<text  x="420.60" y="1759.5" ></text>
</g>
<g >
<title>pkgDebianIndexTargetFile::IndexFileName[abi:cxx11] (373,286,326 samples, 0.03%)</title><rect x="1058.6" y="2037" width="0.3" height="15.0" fill="rgb(221,68,41)" rx="2" ry="2" />
<text  x="1061.61" y="2047.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (184,415,229 samples, 0.01%)</title><rect x="224.3" y="725" width="0.2" height="15.0" fill="rgb(209,210,40)" rx="2" ry="2" />
<text  x="227.31" y="735.5" ></text>
</g>
<g >
<title>__handle_mm_fault (913,460,538 samples, 0.07%)</title><rect x="947.3" y="1941" width="0.8" height="15.0" fill="rgb(214,60,32)" rx="2" ry="2" />
<text  x="950.34" y="1951.5" ></text>
</g>
<g >
<title>exit_mmap (140,559,791 samples, 0.01%)</title><rect x="1081.2" y="1829" width="0.1" height="15.0" fill="rgb(228,143,31)" rx="2" ry="2" />
<text  x="1084.22" y="1839.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (344,776,294 samples, 0.03%)</title><rect x="463.3" y="1749" width="0.3" height="15.0" fill="rgb(207,135,42)" rx="2" ry="2" />
<text  x="466.32" y="1759.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (414,948,385 samples, 0.03%)</title><rect x="972.4" y="1957" width="0.4" height="15.0" fill="rgb(248,18,52)" rx="2" ry="2" />
<text  x="975.43" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="933" width="0.2" height="15.0" fill="rgb(218,28,43)" rx="2" ry="2" />
<text  x="1048.93" y="943.5" ></text>
</g>
<g >
<title>start_kernel (1,029,739,981 samples, 0.08%)</title><rect x="1188.9" y="1989" width="0.9" height="15.0" fill="rgb(223,31,36)" rx="2" ry="2" />
<text  x="1191.86" y="1999.5" ></text>
</g>
<g >
<title>ksys_read (262,770,885 samples, 0.02%)</title><rect x="1161.2" y="1957" width="0.3" height="15.0" fill="rgb(205,152,36)" rx="2" ry="2" />
<text  x="1164.23" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3,030,640,522 samples, 0.22%)</title><rect x="844.5" y="1877" width="2.7" height="15.0" fill="rgb(219,179,44)" rx="2" ry="2" />
<text  x="847.54" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="581" width="0.2" height="15.0" fill="rgb(213,99,16)" rx="2" ry="2" />
<text  x="1048.93" y="591.5" ></text>
</g>
<g >
<title>rwsem_wake.isra.0 (4,624,756,229 samples, 0.34%)</title><rect x="1033.4" y="1941" width="4.0" height="15.0" fill="rgb(217,216,6)" rx="2" ry="2" />
<text  x="1036.42" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (162,660,798 samples, 0.01%)</title><rect x="1092.4" y="1989" width="0.2" height="15.0" fill="rgb(248,171,51)" rx="2" ry="2" />
<text  x="1095.43" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (691,072,423 samples, 0.05%)</title><rect x="758.7" y="1829" width="0.6" height="15.0" fill="rgb(252,202,25)" rx="2" ry="2" />
<text  x="761.72" y="1839.5" ></text>
</g>
<g >
<title>acpi_idle_do_entry (444,004,723 samples, 0.03%)</title><rect x="1188.9" y="1829" width="0.4" height="15.0" fill="rgb(216,161,54)" rx="2" ry="2" />
<text  x="1191.91" y="1839.5" ></text>
</g>
<g >
<title>do_group_exit (129,859,064 samples, 0.01%)</title><rect x="1096.0" y="1989" width="0.2" height="15.0" fill="rgb(230,110,3)" rx="2" ry="2" />
<text  x="1099.04" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (529,644,134,778 samples, 38.93%)</title><rect x="30.9" y="1877" width="459.4" height="15.0" fill="rgb(238,38,12)" rx="2" ry="2" />
<text  x="33.92" y="1887.5" >folly::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_st..</text>
</g>
<g >
<title>folly::resumeCoroutineWithNewAsyncStackRoot (1,036,931,055,052 samples, 76.22%)</title><rect x="10.0" y="1925" width="899.4" height="15.0" fill="rgb(227,34,24)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" >folly::resumeCoroutineWithNewAsyncStackRoot</text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (1,033,204,238 samples, 0.08%)</title><rect x="224.2" y="1397" width="0.8" height="15.0" fill="rgb(225,196,10)" rx="2" ry="2" />
<text  x="227.15" y="1407.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (1,033,204,238 samples, 0.08%)</title><rect x="224.2" y="1365" width="0.8" height="15.0" fill="rgb(250,174,42)" rx="2" ry="2" />
<text  x="227.15" y="1375.5" ></text>
</g>
<g >
<title>new_sync_read (118,762,102 samples, 0.01%)</title><rect x="1050.3" y="1925" width="0.1" height="15.0" fill="rgb(235,166,40)" rx="2" ry="2" />
<text  x="1053.32" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (9,600,352,816 samples, 0.71%)</title><rect x="1145.0" y="1877" width="8.3" height="15.0" fill="rgb(214,137,54)" rx="2" ry="2" />
<text  x="1147.96" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (162,185,964 samples, 0.01%)</title><rect x="230.1" y="1605" width="0.2" height="15.0" fill="rgb(250,82,43)" rx="2" ry="2" />
<text  x="233.12" y="1615.5" ></text>
</g>
<g >
<title>XXH3_64bits_update (758,063,386 samples, 0.06%)</title><rect x="1065.0" y="2021" width="0.7" height="15.0" fill="rgb(235,226,0)" rx="2" ry="2" />
<text  x="1068.04" y="2031.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (146,248,948 samples, 0.01%)</title><rect x="892.9" y="1893" width="0.1" height="15.0" fill="rgb(251,113,19)" rx="2" ry="2" />
<text  x="895.86" y="1903.5" ></text>
</g>
<g >
<title>fileNameMatches (121,626,075 samples, 0.01%)</title><rect x="1081.0" y="2037" width="0.1" height="15.0" fill="rgb(226,140,40)" rx="2" ry="2" />
<text  x="1083.96" y="2047.5" ></text>
</g>
<g >
<title>schedule (1,583,779,624 samples, 0.12%)</title><rect x="412.4" y="1653" width="1.4" height="15.0" fill="rgb(232,47,20)" rx="2" ry="2" />
<text  x="415.43" y="1663.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (174,200,595 samples, 0.01%)</title><rect x="295.4" y="1621" width="0.2" height="15.0" fill="rgb(215,143,36)" rx="2" ry="2" />
<text  x="298.43" y="1631.5" ></text>
</g>
<g >
<title>seq_read (247,293,350 samples, 0.02%)</title><rect x="1161.2" y="1925" width="0.3" height="15.0" fill="rgb(220,175,38)" rx="2" ry="2" />
<text  x="1164.24" y="1935.5" ></text>
</g>
<g >
<title>change_protection_range (794,651,619 samples, 0.06%)</title><rect x="1030.1" y="1925" width="0.6" height="15.0" fill="rgb(221,81,29)" rx="2" ry="2" />
<text  x="1033.06" y="1935.5" ></text>
</g>
<g >
<title>LineBuffer::readFrom (189,753,212 samples, 0.01%)</title><rect x="1041.9" y="2021" width="0.1" height="15.0" fill="rgb(220,26,14)" rx="2" ry="2" />
<text  x="1044.89" y="2031.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (119,702,956 samples, 0.01%)</title><rect x="359.4" y="1781" width="0.1" height="15.0" fill="rgb(247,201,49)" rx="2" ry="2" />
<text  x="362.45" y="1791.5" ></text>
</g>
<g >
<title>irq_enter_rcu (135,406,832 samples, 0.01%)</title><rect x="1182.3" y="1877" width="0.1" height="15.0" fill="rgb(219,205,23)" rx="2" ry="2" />
<text  x="1185.32" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (129,859,064 samples, 0.01%)</title><rect x="1096.0" y="2021" width="0.2" height="15.0" fill="rgb(233,147,49)" rx="2" ry="2" />
<text  x="1099.04" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1941" width="0.2" height="15.0" fill="rgb(247,6,27)" rx="2" ry="2" />
<text  x="1048.93" y="1951.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::_M_max_size (540,274,088 samples, 0.04%)</title><rect x="600.5" y="1797" width="0.5" height="15.0" fill="rgb(228,199,41)" rx="2" ry="2" />
<text  x="603.48" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (477,834,320 samples, 0.04%)</title><rect x="1055.8" y="2005" width="0.5" height="15.0" fill="rgb(209,131,20)" rx="2" ry="2" />
<text  x="1058.84" y="2015.5" ></text>
</g>
<g >
<title>folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (14,797,244,518 samples, 1.09%)</title><rect x="893.5" y="1877" width="12.8" height="15.0" fill="rgb(228,145,47)" rx="2" ry="2" />
<text  x="896.50" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (959,620,417 samples, 0.07%)</title><rect x="79.2" y="1701" width="0.8" height="15.0" fill="rgb(233,164,9)" rx="2" ry="2" />
<text  x="82.17" y="1711.5" ></text>
</g>
<g >
<title>MMap::Map (160,617,488 samples, 0.01%)</title><rect x="1062.2" y="2037" width="0.2" height="15.0" fill="rgb(213,188,49)" rx="2" ry="2" />
<text  x="1065.23" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::size (497,874,615 samples, 0.04%)</title><rect x="1108.2" y="1829" width="0.4" height="15.0" fill="rgb(248,91,2)" rx="2" ry="2" />
<text  x="1111.18" y="1839.5" ></text>
</g>
<g >
<title>do_sys_openat2 (365,889,250 samples, 0.03%)</title><rect x="1161.5" y="1957" width="0.3" height="15.0" fill="rgb(228,132,11)" rx="2" ry="2" />
<text  x="1164.50" y="1967.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (123,536,923 samples, 0.01%)</title><rect x="469.5" y="1765" width="0.2" height="15.0" fill="rgb(226,96,28)" rx="2" ry="2" />
<text  x="472.54" y="1775.5" ></text>
</g>
<g >
<title>clear_page_erms (1,318,297,744 samples, 0.10%)</title><rect x="969.5" y="1845" width="1.1" height="15.0" fill="rgb(210,162,10)" rx="2" ry="2" />
<text  x="972.47" y="1855.5" ></text>
</g>
<g >
<title>fileNameMatches (126,356,398 samples, 0.01%)</title><rect x="1058.1" y="2037" width="0.2" height="15.0" fill="rgb(216,174,40)" rx="2" ry="2" />
<text  x="1061.14" y="2047.5" ></text>
</g>
<g >
<title>sched_clock (121,335,510 samples, 0.01%)</title><rect x="1183.0" y="1893" width="0.1" height="15.0" fill="rgb(209,135,48)" rx="2" ry="2" />
<text  x="1186.02" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::reserveInTarget&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (131,286,437,083 samples, 9.65%)</title><rect x="522.9" y="1861" width="113.8" height="15.0" fill="rgb(235,137,24)" rx="2" ry="2" />
<text  x="525.86" y="1871.5" >folly::detail:..</text>
</g>
<g >
<title>args_rule (274,102,813 samples, 0.02%)</title><rect x="1051.1" y="2021" width="0.3" height="15.0" fill="rgb(252,108,1)" rx="2" ry="2" />
<text  x="1054.15" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (361,837,094 samples, 0.03%)</title><rect x="264.7" y="1461" width="0.3" height="15.0" fill="rgb(248,128,46)" rx="2" ry="2" />
<text  x="267.70" y="1471.5" ></text>
</g>
<g >
<title>irq_exit_rcu (226,976,695 samples, 0.02%)</title><rect x="1179.1" y="1877" width="0.2" height="15.0" fill="rgb(222,119,12)" rx="2" ry="2" />
<text  x="1182.09" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (136,590,719 samples, 0.01%)</title><rect x="1050.3" y="2005" width="0.1" height="15.0" fill="rgb(229,42,30)" rx="2" ry="2" />
<text  x="1053.32" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::emplace_back&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (2,483,087,316 samples, 0.18%)</title><rect x="296.7" y="1589" width="2.1" height="15.0" fill="rgb(226,55,53)" rx="2" ry="2" />
<text  x="299.68" y="1599.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocator (310,140,575 samples, 0.02%)</title><rect x="67.4" y="1701" width="0.3" height="15.0" fill="rgb(223,61,45)" rx="2" ry="2" />
<text  x="70.41" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::push_links&lt;std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt; &gt; (447,821,296 samples, 0.03%)</title><rect x="62.4" y="1749" width="0.4" height="15.0" fill="rgb(249,51,13)" rx="2" ry="2" />
<text  x="65.39" y="1759.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (234,973,984 samples, 0.02%)</title><rect x="288.5" y="1573" width="0.2" height="15.0" fill="rgb(205,21,11)" rx="2" ry="2" />
<text  x="291.51" y="1583.5" ></text>
</g>
<g >
<title>new_sync_read (342,306,160 samples, 0.03%)</title><rect x="1091.9" y="1925" width="0.3" height="15.0" fill="rgb(231,73,6)" rx="2" ry="2" />
<text  x="1094.89" y="1935.5" ></text>
</g>
<g >
<title>filemap_read (330,349,615 samples, 0.02%)</title><rect x="1091.9" y="1877" width="0.3" height="15.0" fill="rgb(254,73,29)" rx="2" ry="2" />
<text  x="1094.89" y="1887.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (421,885,322 samples, 0.03%)</title><rect x="265.0" y="1493" width="0.4" height="15.0" fill="rgb(249,148,48)" rx="2" ry="2" />
<text  x="268.02" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (15,488,630,789 samples, 1.14%)</title><rect x="309.5" y="1637" width="13.4" height="15.0" fill="rgb(209,208,27)" rx="2" ry="2" />
<text  x="312.47" y="1647.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (148,904,902 samples, 0.01%)</title><rect x="446.6" y="1733" width="0.2" height="15.0" fill="rgb(248,119,47)" rx="2" ry="2" />
<text  x="449.63" y="1743.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::exchange (290,230,876 samples, 0.02%)</title><rect x="182.9" y="1685" width="0.3" height="15.0" fill="rgb(252,53,6)" rx="2" ry="2" />
<text  x="185.91" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (333,291,725 samples, 0.02%)</title><rect x="1060.3" y="2021" width="0.3" height="15.0" fill="rgb(236,50,53)" rx="2" ry="2" />
<text  x="1063.27" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (940,687,956 samples, 0.07%)</title><rect x="224.2" y="1333" width="0.8" height="15.0" fill="rgb(245,28,43)" rx="2" ry="2" />
<text  x="227.22" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (392,791,336 samples, 0.03%)</title><rect x="1092.6" y="1989" width="0.3" height="15.0" fill="rgb(251,29,5)" rx="2" ry="2" />
<text  x="1095.57" y="1999.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (142,624,902 samples, 0.01%)</title><rect x="84.4" y="1685" width="0.1" height="15.0" fill="rgb(210,174,8)" rx="2" ry="2" />
<text  x="87.40" y="1695.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1813" width="0.1" height="15.0" fill="rgb(221,30,28)" rx="2" ry="2" />
<text  x="1080.14" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_only_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::head (134,601,690 samples, 0.01%)</title><rect x="212.7" y="1653" width="0.1" height="15.0" fill="rgb(223,171,34)" rx="2" ry="2" />
<text  x="215.65" y="1663.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::hazptr_tc&lt;std::atomic&gt;, folly::hazptr_tc_tls_tag, folly::detail::DefaultMake&lt;folly::hazptr_tc&lt;std::atomic&gt; &gt;, folly::hazptr_tc_tls_tag&gt;::Wrapper::operator folly::hazptr_tc&lt;std::atomic&gt;&amp; (265,867,954 samples, 0.02%)</title><rect x="511.3" y="1829" width="0.2" height="15.0" fill="rgb(205,177,12)" rx="2" ry="2" />
<text  x="514.29" y="1839.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (3,472,863,013 samples, 0.26%)</title><rect x="1179.5" y="1893" width="3.0" height="15.0" fill="rgb(205,173,49)" rx="2" ry="2" />
<text  x="1182.50" y="1903.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (3,740,620,136 samples, 0.27%)</title><rect x="963.4" y="1957" width="3.3" height="15.0" fill="rgb(254,164,38)" rx="2" ry="2" />
<text  x="966.45" y="1967.5" ></text>
</g>
<g >
<title>__schedule (1,552,764,187 samples, 0.11%)</title><rect x="412.5" y="1637" width="1.3" height="15.0" fill="rgb(225,61,1)" rx="2" ry="2" />
<text  x="415.46" y="1647.5" ></text>
</g>
<g >
<title>folly::to_ascii_decimal&lt;20ul&gt; (80,891,851,800 samples, 5.95%)</title><rect x="639.4" y="1845" width="70.1" height="15.0" fill="rgb(243,113,5)" rx="2" ry="2" />
<text  x="642.36" y="1855.5" >folly::..</text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (5,757,418,399 samples, 0.42%)</title><rect x="497.5" y="1877" width="5.0" height="15.0" fill="rgb(207,21,5)" rx="2" ry="2" />
<text  x="500.54" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (499,734,218 samples, 0.04%)</title><rect x="282.6" y="1557" width="0.4" height="15.0" fill="rgb(220,165,23)" rx="2" ry="2" />
<text  x="285.61" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (28,016,670,883 samples, 2.06%)</title><rect x="241.5" y="1557" width="24.3" height="15.0" fill="rgb(231,11,25)" rx="2" ry="2" />
<text  x="244.55" y="1567.5" >s..</text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (584,184,147 samples, 0.04%)</title><rect x="862.0" y="1781" width="0.5" height="15.0" fill="rgb(247,144,9)" rx="2" ry="2" />
<text  x="864.97" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_write (188,103,881 samples, 0.01%)</title><rect x="1162.8" y="1861" width="0.1" height="15.0" fill="rgb(247,135,7)" rx="2" ry="2" />
<text  x="1165.78" y="1871.5" ></text>
</g>
<g >
<title>[apt_pkg.cpython-310-x86_64-linux-gnu.so] (678,206,166 samples, 0.05%)</title><rect x="1043.6" y="2021" width="0.6" height="15.0" fill="rgb(210,97,49)" rx="2" ry="2" />
<text  x="1046.58" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (268,122,286 samples, 0.02%)</title><rect x="1057.6" y="2005" width="0.3" height="15.0" fill="rgb(208,218,15)" rx="2" ry="2" />
<text  x="1060.64" y="2015.5" ></text>
</g>
<g >
<title>rwsem_down_read_slowpath (877,612,510 samples, 0.06%)</title><rect x="946.5" y="1941" width="0.8" height="15.0" fill="rgb(238,175,45)" rx="2" ry="2" />
<text  x="949.53" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (432,806,528 samples, 0.03%)</title><rect x="572.3" y="1845" width="0.4" height="15.0" fill="rgb(224,164,48)" rx="2" ry="2" />
<text  x="575.33" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,593,390,108 samples, 0.19%)</title><rect x="611.0" y="1797" width="2.3" height="15.0" fill="rgb(235,122,35)" rx="2" ry="2" />
<text  x="614.02" y="1807.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (248,763,784 samples, 0.02%)</title><rect x="965.3" y="1909" width="0.2" height="15.0" fill="rgb(246,98,44)" rx="2" ry="2" />
<text  x="968.27" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (35,642,551,546 samples, 2.62%)</title><rect x="1007.6" y="2005" width="30.9" height="15.0" fill="rgb(249,35,46)" rx="2" ry="2" />
<text  x="1010.59" y="2015.5" >do..</text>
</g>
<g >
<title>cpu_startup_entry (1,029,739,981 samples, 0.08%)</title><rect x="1188.9" y="1941" width="0.9" height="15.0" fill="rgb(214,210,11)" rx="2" ry="2" />
<text  x="1191.86" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (465,323,952 samples, 0.03%)</title><rect x="636.0" y="1829" width="0.4" height="15.0" fill="rgb(248,192,18)" rx="2" ry="2" />
<text  x="638.98" y="1839.5" ></text>
</g>
<g >
<title>std::operator&amp; (198,233,903 samples, 0.01%)</title><rect x="479.2" y="1781" width="0.2" height="15.0" fill="rgb(252,114,48)" rx="2" ry="2" />
<text  x="482.22" y="1791.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (214,251,057 samples, 0.02%)</title><rect x="495.9" y="1813" width="0.2" height="15.0" fill="rgb(211,221,43)" rx="2" ry="2" />
<text  x="498.90" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;void const*, true, false&gt;::_Node_const_iterator (438,683,365 samples, 0.03%)</title><rect x="1109.4" y="1829" width="0.4" height="15.0" fill="rgb(252,85,50)" rx="2" ry="2" />
<text  x="1112.41" y="1839.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (178,529,161 samples, 0.01%)</title><rect x="280.1" y="1557" width="0.2" height="15.0" fill="rgb(213,34,38)" rx="2" ry="2" />
<text  x="283.11" y="1567.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1189" width="0.4" height="15.0" fill="rgb(218,163,30)" rx="2" ry="2" />
<text  x="227.27" y="1199.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,026,774,960 samples, 0.22%)</title><rect x="1034.8" y="1909" width="2.6" height="15.0" fill="rgb(229,123,51)" rx="2" ry="2" />
<text  x="1037.81" y="1919.5" ></text>
</g>
<g >
<title>FindSrc (254,754,628 samples, 0.02%)</title><rect x="1063.5" y="2021" width="0.2" height="15.0" fill="rgb(236,148,9)" rx="2" ry="2" />
<text  x="1066.51" y="2031.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (613,363,187 samples, 0.05%)</title><rect x="427.9" y="1797" width="0.5" height="15.0" fill="rgb(228,6,30)" rx="2" ry="2" />
<text  x="430.91" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (1,081,827,468 samples, 0.08%)</title><rect x="224.1" y="1413" width="1.0" height="15.0" fill="rgb(211,29,15)" rx="2" ry="2" />
<text  x="227.14" y="1423.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (466,995,981 samples, 0.03%)</title><rect x="278.6" y="1557" width="0.4" height="15.0" fill="rgb(249,63,26)" rx="2" ry="2" />
<text  x="281.59" y="1567.5" ></text>
</g>
<g >
<title>unmap_vmas (706,223,322 samples, 0.05%)</title><rect x="1088.0" y="1909" width="0.6" height="15.0" fill="rgb(220,223,21)" rx="2" ry="2" />
<text  x="1090.95" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (207,328,726 samples, 0.02%)</title><rect x="493.2" y="1813" width="0.2" height="15.0" fill="rgb(210,38,53)" rx="2" ry="2" />
<text  x="496.18" y="1823.5" ></text>
</g>
<g >
<title>futex_wake (1,347,756,179 samples, 0.10%)</title><rect x="417.6" y="1701" width="1.2" height="15.0" fill="rgb(242,76,36)" rx="2" ry="2" />
<text  x="420.63" y="1711.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (491,572,489 samples, 0.04%)</title><rect x="860.2" y="1829" width="0.4" height="15.0" fill="rgb(241,96,2)" rx="2" ry="2" />
<text  x="863.21" y="1839.5" ></text>
</g>
<g >
<title>sudo (187,244,824 samples, 0.01%)</title><rect x="1164.0" y="2053" width="0.2" height="15.0" fill="rgb(239,217,26)" rx="2" ry="2" />
<text  x="1167.04" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1541" width="0.2" height="15.0" fill="rgb(243,127,37)" rx="2" ry="2" />
<text  x="1048.93" y="1551.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (406,237,097 samples, 0.03%)</title><rect x="1088.2" y="1813" width="0.3" height="15.0" fill="rgb(221,89,50)" rx="2" ry="2" />
<text  x="1091.19" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1,607,853,711 samples, 0.12%)</title><rect x="434.7" y="1765" width="1.4" height="15.0" fill="rgb(206,72,8)" rx="2" ry="2" />
<text  x="437.68" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (242,809,348 samples, 0.02%)</title><rect x="82.0" y="1733" width="0.2" height="15.0" fill="rgb(212,214,54)" rx="2" ry="2" />
<text  x="85.02" y="1743.5" ></text>
</g>
<g >
<title>psi_task_change (440,261,719 samples, 0.03%)</title><rect x="1181.3" y="1781" width="0.4" height="15.0" fill="rgb(232,166,38)" rx="2" ry="2" />
<text  x="1184.29" y="1791.5" ></text>
</g>
<g >
<title>[snap] (322,662,540 samples, 0.02%)</title><rect x="1163.3" y="1877" width="0.3" height="15.0" fill="rgb(248,149,43)" rx="2" ry="2" />
<text  x="1166.31" y="1887.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (153,467,731 samples, 0.01%)</title><rect x="1050.0" y="2021" width="0.1" height="15.0" fill="rgb(209,20,16)" rx="2" ry="2" />
<text  x="1053.00" y="2031.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (2,483,328,271 samples, 0.18%)</title><rect x="224.1" y="1525" width="2.1" height="15.0" fill="rgb(217,184,26)" rx="2" ry="2" />
<text  x="227.05" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (347,448,639 samples, 0.03%)</title><rect x="842.5" y="1861" width="0.3" height="15.0" fill="rgb(219,95,6)" rx="2" ry="2" />
<text  x="845.53" y="1871.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (168,701,692 samples, 0.01%)</title><rect x="278.3" y="1557" width="0.1" height="15.0" fill="rgb(231,73,8)" rx="2" ry="2" />
<text  x="281.25" y="1567.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (147,941,038 samples, 0.01%)</title><rect x="265.4" y="1509" width="0.1" height="15.0" fill="rgb(207,93,52)" rx="2" ry="2" />
<text  x="268.38" y="1519.5" ></text>
</g>
<g >
<title>change_protection (802,122,504 samples, 0.06%)</title><rect x="1030.1" y="1941" width="0.7" height="15.0" fill="rgb(219,7,50)" rx="2" ry="2" />
<text  x="1033.06" y="1951.5" ></text>
</g>
<g >
<title>activate_task (118,975,690 samples, 0.01%)</title><rect x="1024.0" y="1829" width="0.1" height="15.0" fill="rgb(252,56,9)" rx="2" ry="2" />
<text  x="1027.04" y="1839.5" ></text>
</g>
<g >
<title>quiet_vmstat (117,141,790 samples, 0.01%)</title><rect x="1184.6" y="1925" width="0.1" height="15.0" fill="rgb(245,117,21)" rx="2" ry="2" />
<text  x="1187.59" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (732,743,203 samples, 0.05%)</title><rect x="570.8" y="1845" width="0.6" height="15.0" fill="rgb(235,19,38)" rx="2" ry="2" />
<text  x="573.79" y="1855.5" ></text>
</g>
<g >
<title>load_elf_binary (150,260,330 samples, 0.01%)</title><rect x="1081.2" y="1893" width="0.1" height="15.0" fill="rgb(209,149,10)" rx="2" ry="2" />
<text  x="1084.21" y="1903.5" ></text>
</g>
<g >
<title>[snap] (117,163,702 samples, 0.01%)</title><rect x="1163.4" y="1813" width="0.1" height="15.0" fill="rgb(244,185,16)" rx="2" ry="2" />
<text  x="1166.45" y="1823.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (252,240,685 samples, 0.02%)</title><rect x="1056.0" y="1973" width="0.3" height="15.0" fill="rgb(234,104,35)" rx="2" ry="2" />
<text  x="1059.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (6,218,500,178 samples, 0.46%)</title><rect x="1044.4" y="2021" width="5.4" height="15.0" fill="rgb(236,216,41)" rx="2" ry="2" />
<text  x="1047.38" y="2031.5" ></text>
</g>
<g >
<title>filemap_read (493,945,097 samples, 0.04%)</title><rect x="1072.6" y="1877" width="0.4" height="15.0" fill="rgb(211,75,33)" rx="2" ry="2" />
<text  x="1075.61" y="1887.5" ></text>
</g>
<g >
<title>do_user_addr_fault (213,224,881 samples, 0.02%)</title><rect x="1072.8" y="1813" width="0.2" height="15.0" fill="rgb(234,146,16)" rx="2" ry="2" />
<text  x="1075.81" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (474,904,441 samples, 0.03%)</title><rect x="891.6" y="1861" width="0.4" height="15.0" fill="rgb(231,154,8)" rx="2" ry="2" />
<text  x="894.64" y="1871.5" ></text>
</g>
<g >
<title>do_user_addr_fault (10,422,706,089 samples, 0.77%)</title><rect x="963.2" y="1989" width="9.0" height="15.0" fill="rgb(230,22,5)" rx="2" ry="2" />
<text  x="966.18" y="1999.5" ></text>
</g>
<g >
<title>pkgDebianIndexTargetFile::pkgDebianIndexTargetFile (193,995,749 samples, 0.01%)</title><rect x="1047.6" y="2005" width="0.1" height="15.0" fill="rgb(216,42,8)" rx="2" ry="2" />
<text  x="1050.58" y="2015.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (323,897,569 samples, 0.02%)</title><rect x="224.3" y="997" width="0.3" height="15.0" fill="rgb(229,92,19)" rx="2" ry="2" />
<text  x="227.29" y="1007.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::pop_all (824,856,803 samples, 0.06%)</title><rect x="182.8" y="1717" width="0.7" height="15.0" fill="rgb(210,3,22)" rx="2" ry="2" />
<text  x="185.83" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (212,682,369 samples, 0.02%)</title><rect x="324.9" y="1621" width="0.2" height="15.0" fill="rgb(249,52,5)" rx="2" ry="2" />
<text  x="327.90" y="1631.5" ></text>
</g>
<g >
<title>ksys_write (874,137,283 samples, 0.06%)</title><rect x="1073.7" y="1925" width="0.8" height="15.0" fill="rgb(233,130,26)" rx="2" ry="2" />
<text  x="1076.71" y="1935.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::__new_allocator (151,256,838 samples, 0.01%)</title><rect x="268.1" y="1605" width="0.1" height="15.0" fill="rgb(249,136,40)" rx="2" ry="2" />
<text  x="271.11" y="1615.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (131,975,429 samples, 0.01%)</title><rect x="287.5" y="1573" width="0.2" height="15.0" fill="rgb(220,195,36)" rx="2" ry="2" />
<text  x="290.54" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (6,823,964,342 samples, 0.50%)</title><rect x="1102.2" y="1813" width="5.9" height="15.0" fill="rgb(231,163,37)" rx="2" ry="2" />
<text  x="1105.22" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1317" width="0.4" height="15.0" fill="rgb(221,130,35)" rx="2" ry="2" />
<text  x="227.27" y="1327.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (332,454,987 samples, 0.02%)</title><rect x="618.3" y="1797" width="0.3" height="15.0" fill="rgb(235,104,9)" rx="2" ry="2" />
<text  x="621.27" y="1807.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (237,554,536 samples, 0.02%)</title><rect x="344.2" y="1717" width="0.2" height="15.0" fill="rgb(247,0,30)" rx="2" ry="2" />
<text  x="347.17" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::back (1,094,556,411 samples, 0.08%)</title><rect x="323.0" y="1637" width="0.9" height="15.0" fill="rgb(252,23,17)" rx="2" ry="2" />
<text  x="326.00" y="1647.5" ></text>
</g>
<g >
<title>mprotect_fixup (3,380,761,514 samples, 0.25%)</title><rect x="1030.0" y="1957" width="2.9" height="15.0" fill="rgb(229,19,7)" rx="2" ry="2" />
<text  x="1032.97" y="1967.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::match_tagged (71,850,064,222 samples, 5.28%)</title><rect x="1097.7" y="1925" width="62.4" height="15.0" fill="rgb(253,103,38)" rx="2" ry="2" />
<text  x="1100.73" y="1935.5" >folly:..</text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (1,296,947,840 samples, 0.10%)</title><rect x="225.1" y="1509" width="1.1" height="15.0" fill="rgb(235,11,35)" rx="2" ry="2" />
<text  x="228.08" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (6,181,688,616 samples, 0.45%)</title><rect x="444.2" y="1749" width="5.3" height="15.0" fill="rgb(207,226,0)" rx="2" ry="2" />
<text  x="447.17" y="1759.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="2005" width="0.7" height="15.0" fill="rgb(221,67,37)" rx="2" ry="2" />
<text  x="1090.95" y="2015.5" ></text>
</g>
<g >
<title>update_load_avg (186,076,930 samples, 0.01%)</title><rect x="1185.1" y="1861" width="0.1" height="15.0" fill="rgb(216,148,27)" rx="2" ry="2" />
<text  x="1188.09" y="1871.5" ></text>
</g>
<g >
<title>do_futex (1,945,492,315 samples, 0.14%)</title><rect x="412.3" y="1701" width="1.7" height="15.0" fill="rgb(216,83,49)" rx="2" ry="2" />
<text  x="415.33" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (126,135,090 samples, 0.01%)</title><rect x="1097.1" y="1893" width="0.1" height="15.0" fill="rgb(217,21,23)" rx="2" ry="2" />
<text  x="1100.07" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1861" width="0.2" height="15.0" fill="rgb(224,227,40)" rx="2" ry="2" />
<text  x="1048.93" y="1871.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (578,141,581 samples, 0.04%)</title><rect x="435.6" y="1749" width="0.5" height="15.0" fill="rgb(209,226,37)" rx="2" ry="2" />
<text  x="438.58" y="1759.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (504,435,776 samples, 0.04%)</title><rect x="225.1" y="1445" width="0.4" height="15.0" fill="rgb(222,89,8)" rx="2" ry="2" />
<text  x="228.10" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (1,725,340,416 samples, 0.13%)</title><rect x="1075.1" y="2005" width="1.5" height="15.0" fill="rgb(223,152,21)" rx="2" ry="2" />
<text  x="1078.11" y="2015.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (175,458,463 samples, 0.01%)</title><rect x="1088.4" y="1733" width="0.1" height="15.0" fill="rgb(214,15,28)" rx="2" ry="2" />
<text  x="1091.36" y="1743.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (262,913,880 samples, 0.02%)</title><rect x="223.2" y="1493" width="0.2" height="15.0" fill="rgb(205,224,37)" rx="2" ry="2" />
<text  x="226.20" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_write (265,559,230 samples, 0.02%)</title><rect x="1057.6" y="1989" width="0.3" height="15.0" fill="rgb(219,88,45)" rx="2" ry="2" />
<text  x="1060.64" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (884,655,780 samples, 0.07%)</title><rect x="1086.4" y="1893" width="0.8" height="15.0" fill="rgb(213,58,45)" rx="2" ry="2" />
<text  x="1089.39" y="1903.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,915,975,229 samples, 0.36%)</title><rect x="966.9" y="1957" width="4.3" height="15.0" fill="rgb(235,212,11)" rx="2" ry="2" />
<text  x="969.93" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (191,733,159 samples, 0.01%)</title><rect x="224.7" y="1253" width="0.2" height="15.0" fill="rgb(235,29,21)" rx="2" ry="2" />
<text  x="227.69" y="1263.5" ></text>
</g>
<g >
<title>__fput (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1861" width="0.1" height="15.0" fill="rgb(239,197,51)" rx="2" ry="2" />
<text  x="1080.14" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (4,918,774,653 samples, 0.36%)</title><rect x="222.5" y="1637" width="4.2" height="15.0" fill="rgb(214,120,8)" rx="2" ry="2" />
<text  x="225.47" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2,675,679,218 samples, 0.20%)</title><rect x="724.0" y="1797" width="2.3" height="15.0" fill="rgb(219,208,54)" rx="2" ry="2" />
<text  x="727.03" y="1807.5" ></text>
</g>
<g >
<title>dpkg-preconfigu (2,257,639,440 samples, 0.17%)</title><rect x="1088.8" y="2053" width="1.9" height="15.0" fill="rgb(207,25,28)" rx="2" ry="2" />
<text  x="1091.77" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (420,022,637 samples, 0.03%)</title><rect x="401.4" y="1765" width="0.3" height="15.0" fill="rgb(214,73,50)" rx="2" ry="2" />
<text  x="404.35" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="149" width="0.2" height="15.0" fill="rgb(215,21,11)" rx="2" ry="2" />
<text  x="1048.93" y="159.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (251,930,400 samples, 0.02%)</title><rect x="224.3" y="757" width="0.2" height="15.0" fill="rgb(219,111,39)" rx="2" ry="2" />
<text  x="227.31" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;void const*, void const*, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_key_equals (1,728,042,908 samples, 0.13%)</title><rect x="1106.6" y="1781" width="1.5" height="15.0" fill="rgb(238,49,9)" rx="2" ry="2" />
<text  x="1109.55" y="1791.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (356,906,818 samples, 0.03%)</title><rect x="813.0" y="1829" width="0.3" height="15.0" fill="rgb(215,117,16)" rx="2" ry="2" />
<text  x="815.96" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (294,102,100 samples, 0.02%)</title><rect x="1081.1" y="2021" width="0.2" height="15.0" fill="rgb(251,82,25)" rx="2" ry="2" />
<text  x="1084.09" y="2031.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_node (2,487,282,155 samples, 0.18%)</title><rect x="74.4" y="1685" width="2.2" height="15.0" fill="rgb(225,190,18)" rx="2" ry="2" />
<text  x="77.40" y="1695.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (34,488,214,139 samples, 2.54%)</title><rect x="1007.6" y="1973" width="29.9" height="15.0" fill="rgb(208,179,51)" rx="2" ry="2" />
<text  x="1010.61" y="1983.5" >do..</text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::push_list (349,820,725 samples, 0.03%)</title><rect x="212.6" y="1685" width="0.3" height="15.0" fill="rgb(227,152,0)" rx="2" ry="2" />
<text  x="215.61" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (217,559,854 samples, 0.02%)</title><rect x="1078.9" y="2005" width="0.2" height="15.0" fill="rgb(228,183,23)" rx="2" ry="2" />
<text  x="1081.88" y="2015.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (191,733,159 samples, 0.01%)</title><rect x="224.7" y="1269" width="0.2" height="15.0" fill="rgb(242,163,44)" rx="2" ry="2" />
<text  x="227.69" y="1279.5" ></text>
</g>
<g >
<title>generic_perform_write (172,889,308 samples, 0.01%)</title><rect x="1162.8" y="1765" width="0.1" height="15.0" fill="rgb(219,120,42)" rx="2" ry="2" />
<text  x="1165.79" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_read (132,097,243 samples, 0.01%)</title><rect x="1050.3" y="1973" width="0.1" height="15.0" fill="rgb(216,79,51)" rx="2" ry="2" />
<text  x="1053.32" y="1983.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (1,029,319,459 samples, 0.08%)</title><rect x="287.8" y="1589" width="0.9" height="15.0" fill="rgb(238,210,53)" rx="2" ry="2" />
<text  x="290.82" y="1599.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (43,408,534,216 samples, 3.19%)</title><rect x="229.8" y="1621" width="37.7" height="15.0" fill="rgb(241,62,41)" rx="2" ry="2" />
<text  x="232.81" y="1631.5" >fol..</text>
</g>
<g >
<title>update_sg_lb_stats (189,310,784 samples, 0.01%)</title><rect x="413.3" y="1525" width="0.2" height="15.0" fill="rgb(221,163,26)" rx="2" ry="2" />
<text  x="416.30" y="1535.5" ></text>
</g>
<g >
<title>ksys_write (115,746,976 samples, 0.01%)</title><rect x="1061.2" y="1973" width="0.1" height="15.0" fill="rgb(205,173,25)" rx="2" ry="2" />
<text  x="1064.24" y="1983.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator-- (182,524,879 samples, 0.01%)</title><rect x="323.3" y="1621" width="0.2" height="15.0" fill="rgb(206,106,4)" rx="2" ry="2" />
<text  x="326.32" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1,217,623,656 samples, 0.09%)</title><rect x="1059.9" y="2037" width="1.1" height="15.0" fill="rgb(239,205,38)" rx="2" ry="2" />
<text  x="1062.94" y="2047.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (25,424,526,811 samples, 1.87%)</title><rect x="951.3" y="2037" width="22.0" height="15.0" fill="rgb(241,97,12)" rx="2" ry="2" />
<text  x="954.29" y="2047.5" >_..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator-- (253,855,790 samples, 0.02%)</title><rect x="297.9" y="1557" width="0.2" height="15.0" fill="rgb(214,113,2)" rx="2" ry="2" />
<text  x="300.92" y="1567.5" ></text>
</g>
<g >
<title>__stpcpy_sse2_unaligned (2,333,539,962 samples, 0.17%)</title><rect x="412.2" y="1765" width="2.0" height="15.0" fill="rgb(253,77,12)" rx="2" ry="2" />
<text  x="415.21" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;void const*&gt;::_M_addr (193,857,671 samples, 0.01%)</title><rect x="1107.1" y="1717" width="0.1" height="15.0" fill="rgb(228,78,9)" rx="2" ry="2" />
<text  x="1110.08" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17,505,577,176 samples, 1.29%)</title><rect x="1062.6" y="2037" width="15.1" height="15.0" fill="rgb(225,43,18)" rx="2" ry="2" />
<text  x="1065.57" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (5,619,973,102 samples, 0.41%)</title><rect x="826.4" y="1813" width="4.9" height="15.0" fill="rgb(224,57,45)" rx="2" ry="2" />
<text  x="829.41" y="1823.5" ></text>
</g>
<g >
<title>split.lto_priv.0 (945,084,263 samples, 0.07%)</title><rect x="1055.0" y="2021" width="0.8" height="15.0" fill="rgb(206,175,23)" rx="2" ry="2" />
<text  x="1057.97" y="2031.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (355,842,905 samples, 0.03%)</title><rect x="1038.1" y="1957" width="0.3" height="15.0" fill="rgb(206,31,10)" rx="2" ry="2" />
<text  x="1041.11" y="1967.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::allocate (925,152,595 samples, 0.07%)</title><rect x="280.3" y="1557" width="0.8" height="15.0" fill="rgb(248,227,49)" rx="2" ry="2" />
<text  x="283.26" y="1567.5" ></text>
</g>
<g >
<title>find_busiest_group (3,880,515,478 samples, 0.29%)</title><rect x="1024.5" y="1829" width="3.4" height="15.0" fill="rgb(232,114,17)" rx="2" ry="2" />
<text  x="1027.49" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_create_nodes (2,205,131,863 samples, 0.16%)</title><rect x="317.7" y="1589" width="1.9" height="15.0" fill="rgb(211,172,46)" rx="2" ry="2" />
<text  x="320.67" y="1599.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (203,126,662 samples, 0.01%)</title><rect x="266.0" y="1589" width="0.1" height="15.0" fill="rgb(206,208,19)" rx="2" ry="2" />
<text  x="268.96" y="1599.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (640,155,120 samples, 0.05%)</title><rect x="1037.9" y="1989" width="0.6" height="15.0" fill="rgb(241,50,18)" rx="2" ry="2" />
<text  x="1040.95" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (452,207,141 samples, 0.03%)</title><rect x="1086.7" y="1797" width="0.4" height="15.0" fill="rgb(229,172,52)" rx="2" ry="2" />
<text  x="1089.66" y="1807.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (356,225,702 samples, 0.03%)</title><rect x="1064.4" y="1989" width="0.3" height="15.0" fill="rgb(228,114,32)" rx="2" ry="2" />
<text  x="1067.36" y="1999.5" ></text>
</g>
<g >
<title>lz_encoder_prepare (144,140,436 samples, 0.01%)</title><rect x="1081.5" y="2037" width="0.1" height="15.0" fill="rgb(208,220,10)" rx="2" ry="2" />
<text  x="1084.47" y="2047.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::__atomic_base (513,909,805 samples, 0.04%)</title><rect x="426.0" y="1797" width="0.5" height="15.0" fill="rgb(208,102,16)" rx="2" ry="2" />
<text  x="429.03" y="1807.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (212,773,057 samples, 0.02%)</title><rect x="447.9" y="1717" width="0.2" height="15.0" fill="rgb(223,108,18)" rx="2" ry="2" />
<text  x="450.87" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_valptr (485,271,173 samples, 0.04%)</title><rect x="1106.8" y="1749" width="0.4" height="15.0" fill="rgb(221,193,47)" rx="2" ry="2" />
<text  x="1109.83" y="1759.5" ></text>
</g>
<g >
<title>gdbus (133,231,271 samples, 0.01%)</title><rect x="1096.9" y="2053" width="0.1" height="15.0" fill="rgb(214,77,0)" rx="2" ry="2" />
<text  x="1099.85" y="2063.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1909" width="0.1" height="15.0" fill="rgb(213,86,13)" rx="2" ry="2" />
<text  x="1080.14" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;void const*, false&gt;::_Node_iterator_base (303,980,705 samples, 0.02%)</title><rect x="1109.5" y="1813" width="0.3" height="15.0" fill="rgb(236,25,54)" rx="2" ry="2" />
<text  x="1112.53" y="1823.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (142,298,833 samples, 0.01%)</title><rect x="1038.2" y="1941" width="0.2" height="15.0" fill="rgb(230,33,12)" rx="2" ry="2" />
<text  x="1041.24" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (3,523,482,282 samples, 0.26%)</title><rect x="604.4" y="1829" width="3.0" height="15.0" fill="rgb(242,61,45)" rx="2" ry="2" />
<text  x="607.39" y="1839.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,829,796,788 samples, 0.21%)</title><rect x="732.7" y="1797" width="2.5" height="15.0" fill="rgb(231,215,47)" rx="2" ry="2" />
<text  x="735.70" y="1807.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (49,433,452,392 samples, 3.63%)</title><rect x="430.4" y="1813" width="42.9" height="15.0" fill="rgb(209,73,54)" rx="2" ry="2" />
<text  x="433.45" y="1823.5" >std:..</text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrTableDeleter::operator (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1269" width="0.4" height="15.0" fill="rgb(239,167,29)" rx="2" ry="2" />
<text  x="227.27" y="1279.5" ></text>
</g>
<g >
<title>tlb_gather_mmu (293,974,303 samples, 0.02%)</title><rect x="1033.2" y="1957" width="0.2" height="15.0" fill="rgb(236,109,46)" rx="2" ry="2" />
<text  x="1036.16" y="1967.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (173,036,116 samples, 0.01%)</title><rect x="359.5" y="1781" width="0.2" height="15.0" fill="rgb(241,216,42)" rx="2" ry="2" />
<text  x="362.55" y="1791.5" ></text>
</g>
<g >
<title>std::operator&amp; (136,468,800 samples, 0.01%)</title><rect x="355.2" y="1749" width="0.1" height="15.0" fill="rgb(213,50,3)" rx="2" ry="2" />
<text  x="358.16" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::active (164,835,519 samples, 0.01%)</title><rect x="339.2" y="1701" width="0.2" height="15.0" fill="rgb(208,189,47)" rx="2" ry="2" />
<text  x="342.25" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1029" width="0.2" height="15.0" fill="rgb(242,193,38)" rx="2" ry="2" />
<text  x="1048.93" y="1039.5" ></text>
</g>
<g >
<title>[snap] (276,060,585 samples, 0.02%)</title><rect x="1163.3" y="1861" width="0.3" height="15.0" fill="rgb(219,39,23)" rx="2" ry="2" />
<text  x="1166.33" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,905,243,649 samples, 0.14%)</title><rect x="859.0" y="1845" width="1.6" height="15.0" fill="rgb(206,170,43)" rx="2" ry="2" />
<text  x="861.99" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (468,027,814 samples, 0.03%)</title><rect x="848.6" y="1861" width="0.4" height="15.0" fill="rgb(233,195,13)" rx="2" ry="2" />
<text  x="851.58" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (825,873,940 samples, 0.06%)</title><rect x="1076.8" y="2005" width="0.7" height="15.0" fill="rgb(244,74,3)" rx="2" ry="2" />
<text  x="1079.77" y="2015.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1205" width="0.4" height="15.0" fill="rgb(208,218,33)" rx="2" ry="2" />
<text  x="227.27" y="1215.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (277,242,874 samples, 0.02%)</title><rect x="598.5" y="1797" width="0.2" height="15.0" fill="rgb(236,122,17)" rx="2" ry="2" />
<text  x="601.49" y="1807.5" ></text>
</g>
<g >
<title>__switch_to (211,553,998 samples, 0.02%)</title><rect x="1185.9" y="1941" width="0.2" height="15.0" fill="rgb(216,212,36)" rx="2" ry="2" />
<text  x="1188.94" y="1951.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (20,136,100,242 samples, 1.48%)</title><rect x="391.5" y="1813" width="17.5" height="15.0" fill="rgb(205,118,25)" rx="2" ry="2" />
<text  x="394.50" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (543,431,947 samples, 0.04%)</title><rect x="277.1" y="1573" width="0.5" height="15.0" fill="rgb(206,133,53)" rx="2" ry="2" />
<text  x="280.08" y="1583.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_only_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (741,520,684 samples, 0.05%)</title><rect x="183.7" y="1685" width="0.7" height="15.0" fill="rgb(223,132,39)" rx="2" ry="2" />
<text  x="186.73" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (2,725,197,386 samples, 0.20%)</title><rect x="1103.9" y="1797" width="2.3" height="15.0" fill="rgb(232,10,22)" rx="2" ry="2" />
<text  x="1106.86" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::do_reclamation (72,724,471,987 samples, 5.35%)</title><rect x="1097.1" y="1941" width="63.0" height="15.0" fill="rgb(236,121,45)" rx="2" ry="2" />
<text  x="1100.07" y="1951.5" >folly:..</text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::push_back (2,739,256,437 samples, 0.20%)</title><rect x="296.5" y="1605" width="2.4" height="15.0" fill="rgb(206,186,27)" rx="2" ry="2" />
<text  x="299.54" y="1615.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (208,695,650 samples, 0.02%)</title><rect x="491.9" y="1861" width="0.1" height="15.0" fill="rgb(236,135,30)" rx="2" ry="2" />
<text  x="494.86" y="1871.5" ></text>
</g>
<g >
<title>try_to_wake_up (961,629,452 samples, 0.07%)</title><rect x="418.0" y="1669" width="0.8" height="15.0" fill="rgb(244,39,31)" rx="2" ry="2" />
<text  x="420.96" y="1679.5" ></text>
</g>
<g >
<title>pick_next_task (7,025,904,516 samples, 0.52%)</title><rect x="1022.9" y="1893" width="6.1" height="15.0" fill="rgb(240,213,9)" rx="2" ry="2" />
<text  x="1025.88" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::releaseLink (234,641,053 samples, 0.02%)</title><rect x="1086.4" y="1861" width="0.2" height="15.0" fill="rgb(228,44,36)" rx="2" ry="2" />
<text  x="1089.41" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (531,696,339 samples, 0.04%)</title><rect x="804.8" y="1845" width="0.4" height="15.0" fill="rgb(239,215,46)" rx="2" ry="2" />
<text  x="807.78" y="1855.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (278,092,613 samples, 0.02%)</title><rect x="166.2" y="1717" width="0.2" height="15.0" fill="rgb(240,169,38)" rx="2" ry="2" />
<text  x="169.17" y="1727.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::set_next (719,123,781 samples, 0.05%)</title><rect x="1129.3" y="1861" width="0.6" height="15.0" fill="rgb(206,131,17)" rx="2" ry="2" />
<text  x="1132.26" y="1871.5" ></text>
</g>
<g >
<title>__handle_mm_fault (143,014,943 samples, 0.01%)</title><rect x="1091.6" y="1941" width="0.2" height="15.0" fill="rgb(224,194,8)" rx="2" ry="2" />
<text  x="1094.63" y="1951.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (269,908,043 samples, 0.02%)</title><rect x="224.3" y="901" width="0.2" height="15.0" fill="rgb(226,130,30)" rx="2" ry="2" />
<text  x="227.30" y="911.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::push_links&lt;std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt; &gt; (5,287,760,534 samples, 0.39%)</title><rect x="294.4" y="1637" width="4.6" height="15.0" fill="rgb(217,206,15)" rx="2" ry="2" />
<text  x="297.43" y="1647.5" ></text>
</g>
<g >
<title>irq_exit_rcu (125,851,768 samples, 0.01%)</title><rect x="1189.5" y="1813" width="0.1" height="15.0" fill="rgb(227,155,52)" rx="2" ry="2" />
<text  x="1192.45" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (312,754,212 samples, 0.02%)</title><rect x="1033.5" y="1925" width="0.2" height="15.0" fill="rgb(251,36,27)" rx="2" ry="2" />
<text  x="1036.47" y="1935.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (311,736,139 samples, 0.02%)</title><rect x="1072.7" y="1861" width="0.3" height="15.0" fill="rgb(226,3,34)" rx="2" ry="2" />
<text  x="1075.74" y="1871.5" ></text>
</g>
<g >
<title>folly::to_ascii_lower&lt;10ul, 20ul&gt; (177,514,108 samples, 0.01%)</title><rect x="709.5" y="1845" width="0.2" height="15.0" fill="rgb(243,198,11)" rx="2" ry="2" />
<text  x="712.53" y="1855.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (175,311,364 samples, 0.01%)</title><rect x="1178.9" y="1749" width="0.2" height="15.0" fill="rgb(214,45,53)" rx="2" ry="2" />
<text  x="1181.91" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node_tr&lt;void const*&gt; (128,260,759 samples, 0.01%)</title><rect x="1097.5" y="1845" width="0.1" height="15.0" fill="rgb(209,214,13)" rx="2" ry="2" />
<text  x="1100.47" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (2,490,074,438 samples, 0.18%)</title><rect x="592.5" y="1797" width="2.2" height="15.0" fill="rgb(210,41,15)" rx="2" ry="2" />
<text  x="595.50" y="1807.5" ></text>
</g>
<g >
<title>[snap] (475,839,156 samples, 0.03%)</title><rect x="1163.2" y="1957" width="0.4" height="15.0" fill="rgb(208,218,29)" rx="2" ry="2" />
<text  x="1166.20" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (438,064,393 samples, 0.03%)</title><rect x="502.2" y="1861" width="0.3" height="15.0" fill="rgb(214,85,0)" rx="2" ry="2" />
<text  x="505.15" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (671,274,816 samples, 0.05%)</title><rect x="409.0" y="1813" width="0.6" height="15.0" fill="rgb(235,67,43)" rx="2" ry="2" />
<text  x="412.02" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (14,420,493,936 samples, 1.06%)</title><rect x="136.2" y="1685" width="12.5" height="15.0" fill="rgb(250,138,5)" rx="2" ry="2" />
<text  x="139.16" y="1695.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (154,289,062 samples, 0.01%)</title><rect x="1178.9" y="1717" width="0.2" height="15.0" fill="rgb(205,204,20)" rx="2" ry="2" />
<text  x="1181.93" y="1727.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (301,681,991,809 samples, 22.18%)</title><rect x="91.6" y="1781" width="261.7" height="15.0" fill="rgb(230,66,0)" rx="2" ry="2" />
<text  x="94.65" y="1791.5" >folly::hazptr_obj_base_linked&lt;foll..</text>
</g>
<g >
<title>trig_parse_ci (117,965,624 samples, 0.01%)</title><rect x="1095.5" y="2021" width="0.1" height="15.0" fill="rgb(211,174,29)" rx="2" ry="2" />
<text  x="1098.54" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (445,130,230,643 samples, 32.72%)</title><rect x="35.7" y="1845" width="386.0" height="15.0" fill="rgb(237,160,48)" rx="2" ry="2" />
<text  x="38.66" y="1855.5" >folly::detail::concurrenthashmap::bucket::BucketTabl..</text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (334,520,023 samples, 0.02%)</title><rect x="632.2" y="1797" width="0.3" height="15.0" fill="rgb(237,214,41)" rx="2" ry="2" />
<text  x="635.24" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_set_node (2,321,548,086 samples, 0.17%)</title><rect x="319.6" y="1589" width="2.0" height="15.0" fill="rgb(239,10,2)" rx="2" ry="2" />
<text  x="322.62" y="1599.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::push (3,021,392,995 samples, 0.22%)</title><rect x="296.4" y="1621" width="2.6" height="15.0" fill="rgb(218,67,48)" rx="2" ry="2" />
<text  x="299.39" y="1631.5" ></text>
</g>
<g >
<title>dup_mm (136,867,779 samples, 0.01%)</title><rect x="1081.1" y="1925" width="0.1" height="15.0" fill="rgb(216,67,28)" rx="2" ry="2" />
<text  x="1084.09" y="1935.5" ></text>
</g>
<g >
<title>operator delete (131,102,377 samples, 0.01%)</title><rect x="88.0" y="1669" width="0.2" height="15.0" fill="rgb(213,76,40)" rx="2" ry="2" />
<text  x="91.05" y="1679.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (508,853,963 samples, 0.04%)</title><rect x="225.1" y="1477" width="0.4" height="15.0" fill="rgb(205,6,41)" rx="2" ry="2" />
<text  x="228.10" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_propagate_on_copy_assign (142,461,380 samples, 0.01%)</title><rect x="853.1" y="1877" width="0.1" height="15.0" fill="rgb(247,157,25)" rx="2" ry="2" />
<text  x="856.08" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (472,111,729 samples, 0.03%)</title><rect x="315.9" y="1573" width="0.4" height="15.0" fill="rgb(241,109,37)" rx="2" ry="2" />
<text  x="318.90" y="1583.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::load (15,240,653,630 samples, 1.12%)</title><rect x="372.4" y="1813" width="13.2" height="15.0" fill="rgb(206,67,14)" rx="2" ry="2" />
<text  x="375.37" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,695,245,045 samples, 0.20%)</title><rect x="802.3" y="1845" width="2.3" height="15.0" fill="rgb(209,190,2)" rx="2" ry="2" />
<text  x="805.27" y="1855.5" ></text>
</g>
<g >
<title>find_busiest_group (244,689,604 samples, 0.02%)</title><rect x="413.3" y="1557" width="0.2" height="15.0" fill="rgb(250,97,51)" rx="2" ry="2" />
<text  x="416.25" y="1567.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (362,246,247 samples, 0.03%)</title><rect x="225.2" y="1397" width="0.3" height="15.0" fill="rgb(229,13,45)" rx="2" ry="2" />
<text  x="228.21" y="1407.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (441,425,435 samples, 0.03%)</title><rect x="1036.8" y="1877" width="0.4" height="15.0" fill="rgb(254,19,0)" rx="2" ry="2" />
<text  x="1039.82" y="1887.5" ></text>
</g>
<g >
<title>std::operator== (572,906,355 samples, 0.04%)</title><rect x="270.2" y="1621" width="0.4" height="15.0" fill="rgb(217,177,36)" rx="2" ry="2" />
<text  x="273.15" y="1631.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned long&gt; (366,216,255 samples, 0.03%)</title><rect x="200.8" y="1717" width="0.3" height="15.0" fill="rgb(250,69,23)" rx="2" ry="2" />
<text  x="203.78" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::allocate (988,634,915 samples, 0.07%)</title><rect x="318.6" y="1557" width="0.9" height="15.0" fill="rgb(250,58,43)" rx="2" ry="2" />
<text  x="321.62" y="1567.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (465,900,780 samples, 0.03%)</title><rect x="967.7" y="1909" width="0.4" height="15.0" fill="rgb(247,53,49)" rx="2" ry="2" />
<text  x="970.70" y="1919.5" ></text>
</g>
<g >
<title>pkgCacheGenerator::AllocateInMap (197,243,069 samples, 0.01%)</title><rect x="1077.3" y="1989" width="0.2" height="15.0" fill="rgb(246,184,32)" rx="2" ry="2" />
<text  x="1080.30" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (186,714,204 samples, 0.01%)</title><rect x="480.2" y="1781" width="0.2" height="15.0" fill="rgb(216,98,26)" rx="2" ry="2" />
<text  x="483.22" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;void const*&gt;, true&gt;::_M_cget (148,226,149 samples, 0.01%)</title><rect x="1107.3" y="1749" width="0.2" height="15.0" fill="rgb(224,11,35)" rx="2" ry="2" />
<text  x="1110.34" y="1759.5" ></text>
</g>
<g >
<title>ksys_write (265,559,230 samples, 0.02%)</title><rect x="1057.6" y="1973" width="0.3" height="15.0" fill="rgb(227,229,34)" rx="2" ry="2" />
<text  x="1060.64" y="1983.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (129,708,468,250 samples, 9.53%)</title><rect x="226.7" y="1701" width="112.5" height="15.0" fill="rgb(228,127,19)" rx="2" ry="2" />
<text  x="229.75" y="1711.5" >folly::hazptr..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (42,991,930,376 samples, 3.16%)</title><rect x="432.6" y="1781" width="37.3" height="15.0" fill="rgb(253,199,19)" rx="2" ry="2" />
<text  x="435.57" y="1791.5" >std..</text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (79,702,410,676 samples, 5.86%)</title><rect x="96.6" y="1733" width="69.1" height="15.0" fill="rgb(230,119,26)" rx="2" ry="2" />
<text  x="99.59" y="1743.5" >folly::..</text>
</g>
<g >
<title>__flush_smp_call_function_queue (773,063,282 samples, 0.06%)</title><rect x="1184.8" y="1957" width="0.7" height="15.0" fill="rgb(234,82,16)" rx="2" ry="2" />
<text  x="1187.80" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (207,280,173 samples, 0.02%)</title><rect x="451.1" y="1749" width="0.2" height="15.0" fill="rgb(254,77,49)" rx="2" ry="2" />
<text  x="454.13" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Insert&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt;, true&gt;::insert (395,699,948 samples, 0.03%)</title><rect x="1097.4" y="1893" width="0.3" height="15.0" fill="rgb(227,77,37)" rx="2" ry="2" />
<text  x="1100.37" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (42,146,597,853 samples, 3.10%)</title><rect x="230.3" y="1605" width="36.5" height="15.0" fill="rgb(230,164,49)" rx="2" ry="2" />
<text  x="233.26" y="1615.5" >fol..</text>
</g>
<g >
<title>std::atomic&lt;unsigned int&gt;::atomic (1,172,108,465 samples, 0.09%)</title><rect x="425.5" y="1813" width="1.0" height="15.0" fill="rgb(244,99,52)" rx="2" ry="2" />
<text  x="428.46" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_inc_safe (6,014,456,895 samples, 0.44%)</title><rect x="477.3" y="1813" width="5.3" height="15.0" fill="rgb(221,189,15)" rx="2" ry="2" />
<text  x="480.34" y="1823.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (148,812,354 samples, 0.01%)</title><rect x="463.2" y="1749" width="0.1" height="15.0" fill="rgb(234,137,26)" rx="2" ry="2" />
<text  x="466.19" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (721,598,537 samples, 0.05%)</title><rect x="1160.3" y="1957" width="0.6" height="15.0" fill="rgb(225,153,6)" rx="2" ry="2" />
<text  x="1163.31" y="1967.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (179,541,668 samples, 0.01%)</title><rect x="1091.6" y="2005" width="0.2" height="15.0" fill="rgb(243,167,25)" rx="2" ry="2" />
<text  x="1094.60" y="2015.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (381,901,740 samples, 0.03%)</title><rect x="1186.4" y="1861" width="0.4" height="15.0" fill="rgb(246,28,50)" rx="2" ry="2" />
<text  x="1189.42" y="1871.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1925" width="0.1" height="15.0" fill="rgb(239,91,19)" rx="2" ry="2" />
<text  x="1080.14" y="1935.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (371,080,209 samples, 0.03%)</title><rect x="135.8" y="1685" width="0.4" height="15.0" fill="rgb(229,5,40)" rx="2" ry="2" />
<text  x="138.84" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2,958,699,363 samples, 0.22%)</title><rect x="446.9" y="1733" width="2.5" height="15.0" fill="rgb(212,136,5)" rx="2" ry="2" />
<text  x="449.86" y="1743.5" ></text>
</g>
<g >
<title>__sysvec_call_function_single (3,206,280,492 samples, 0.24%)</title><rect x="1179.5" y="1877" width="2.8" height="15.0" fill="rgb(233,76,12)" rx="2" ry="2" />
<text  x="1182.52" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (327,942,109 samples, 0.02%)</title><rect x="1023.8" y="1829" width="0.2" height="15.0" fill="rgb(248,147,47)" rx="2" ry="2" />
<text  x="1026.75" y="1839.5" ></text>
</g>
<g >
<title>pick_next_task (920,842,319 samples, 0.07%)</title><rect x="965.5" y="1909" width="0.8" height="15.0" fill="rgb(254,3,22)" rx="2" ry="2" />
<text  x="968.48" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;void const*&gt;, true&gt;::_M_cget (241,125,347 samples, 0.02%)</title><rect x="1109.0" y="1797" width="0.2" height="15.0" fill="rgb(233,15,22)" rx="2" ry="2" />
<text  x="1112.04" y="1807.5" ></text>
</g>
<g >
<title>enqueue_task (118,975,690 samples, 0.01%)</title><rect x="1024.0" y="1813" width="0.1" height="15.0" fill="rgb(243,89,40)" rx="2" ry="2" />
<text  x="1027.04" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::acquire_link (165,976,967 samples, 0.01%)</title><rect x="48.4" y="1797" width="0.2" height="15.0" fill="rgb(220,225,1)" rx="2" ry="2" />
<text  x="51.43" y="1807.5" ></text>
</g>
<g >
<title>page_remove_rmap (161,568,462 samples, 0.01%)</title><rect x="1088.1" y="1829" width="0.1" height="15.0" fill="rgb(231,31,24)" rx="2" ry="2" />
<text  x="1091.05" y="1839.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (4,624,523,403 samples, 0.34%)</title><rect x="741.1" y="1765" width="4.1" height="15.0" fill="rgb(252,25,6)" rx="2" ry="2" />
<text  x="744.15" y="1775.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::active (159,268,665 samples, 0.01%)</title><rect x="223.7" y="1541" width="0.2" height="15.0" fill="rgb(248,160,15)" rx="2" ry="2" />
<text  x="226.72" y="1551.5" ></text>
</g>
<g >
<title>newidle_balance (770,887,877 samples, 0.06%)</title><rect x="965.5" y="1877" width="0.7" height="15.0" fill="rgb(218,227,39)" rx="2" ry="2" />
<text  x="968.54" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1477" width="0.2" height="15.0" fill="rgb(217,150,54)" rx="2" ry="2" />
<text  x="1048.93" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (7,281,369,051 samples, 0.54%)</title><rect x="1101.9" y="1829" width="6.3" height="15.0" fill="rgb(216,170,31)" rx="2" ry="2" />
<text  x="1104.86" y="1839.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (10,516,489,185 samples, 0.77%)</title><rect x="324.0" y="1653" width="9.1" height="15.0" fill="rgb(208,179,3)" rx="2" ry="2" />
<text  x="326.96" y="1663.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (120,402,901 samples, 0.01%)</title><rect x="421.6" y="1829" width="0.1" height="15.0" fill="rgb(239,134,38)" rx="2" ry="2" />
<text  x="424.56" y="1839.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (115,604,199 samples, 0.01%)</title><rect x="222.5" y="1573" width="0.1" height="15.0" fill="rgb(229,6,34)" rx="2" ry="2" />
<text  x="225.51" y="1583.5" ></text>
</g>
<g >
<title>getnameinfo (150,015,235 samples, 0.01%)</title><rect x="1077.1" y="1989" width="0.1" height="15.0" fill="rgb(216,127,29)" rx="2" ry="2" />
<text  x="1080.12" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_write (217,559,854 samples, 0.02%)</title><rect x="1078.9" y="1989" width="0.2" height="15.0" fill="rgb(207,120,23)" rx="2" ry="2" />
<text  x="1081.88" y="1999.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::set_next (338,106,315 samples, 0.02%)</title><rect x="1144.5" y="1893" width="0.3" height="15.0" fill="rgb(207,21,34)" rx="2" ry="2" />
<text  x="1147.48" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1,914,967,951 samples, 0.14%)</title><rect x="753.4" y="1797" width="1.7" height="15.0" fill="rgb(216,219,6)" rx="2" ry="2" />
<text  x="756.40" y="1807.5" ></text>
</g>
<g >
<title>update_curr (271,707,584 samples, 0.02%)</title><rect x="964.7" y="1861" width="0.2" height="15.0" fill="rgb(216,130,41)" rx="2" ry="2" />
<text  x="967.71" y="1871.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (258,073,681 samples, 0.02%)</title><rect x="1059.0" y="2021" width="0.2" height="15.0" fill="rgb(253,111,9)" rx="2" ry="2" />
<text  x="1062.02" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::release (345,525,592,201 samples, 25.40%)</title><rect x="60.1" y="1813" width="299.7" height="15.0" fill="rgb(208,70,7)" rx="2" ry="2" />
<text  x="63.11" y="1823.5" >folly::detail::concurrenthashmap::bucket..</text>
</g>
<g >
<title>folly::to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (317,388,188,968 samples, 23.33%)</title><rect x="516.0" y="1893" width="275.3" height="15.0" fill="rgb(242,127,7)" rx="2" ry="2" />
<text  x="519.02" y="1903.5" >folly::to&lt;std::__cxx11::basic_string..</text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node_tr&lt;void const*&gt; (117,121,779 samples, 0.01%)</title><rect x="1097.5" y="1829" width="0.1" height="15.0" fill="rgb(207,68,2)" rx="2" ry="2" />
<text  x="1100.48" y="1839.5" ></text>
</g>
<g >
<title>generic_perform_write (140,477,626 samples, 0.01%)</title><rect x="1057.7" y="1893" width="0.2" height="15.0" fill="rgb(247,82,36)" rx="2" ry="2" />
<text  x="1060.75" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,501,512,547 samples, 0.11%)</title><rect x="417.6" y="1765" width="1.3" height="15.0" fill="rgb(227,18,37)" rx="2" ry="2" />
<text  x="420.58" y="1775.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (2,701,226,134 samples, 0.20%)</title><rect x="1179.7" y="1829" width="2.4" height="15.0" fill="rgb(244,176,13)" rx="2" ry="2" />
<text  x="1182.74" y="1839.5" ></text>
</g>
<g >
<title>__multf3 (191,468,017 samples, 0.01%)</title><rect x="1092.2" y="2021" width="0.2" height="15.0" fill="rgb(249,90,24)" rx="2" ry="2" />
<text  x="1095.22" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1829" width="0.2" height="15.0" fill="rgb(205,24,14)" rx="2" ry="2" />
<text  x="1048.93" y="1839.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (658,928,970 samples, 0.05%)</title><rect x="470.2" y="1781" width="0.5" height="15.0" fill="rgb(219,59,42)" rx="2" ry="2" />
<text  x="473.16" y="1791.5" ></text>
</g>
<g >
<title>PipedFileFdPrivate::~PipedFileFdPrivate (693,652,181 samples, 0.05%)</title><rect x="1042.5" y="2021" width="0.6" height="15.0" fill="rgb(214,35,14)" rx="2" ry="2" />
<text  x="1045.48" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (133,866,926 samples, 0.01%)</title><rect x="490.8" y="1877" width="0.1" height="15.0" fill="rgb(217,180,10)" rx="2" ry="2" />
<text  x="493.75" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (629,722,276 samples, 0.05%)</title><rect x="759.7" y="1861" width="0.5" height="15.0" fill="rgb(230,57,38)" rx="2" ry="2" />
<text  x="762.68" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_cas (292,067,843 samples, 0.02%)</title><rect x="306.4" y="1637" width="0.3" height="15.0" fill="rgb(206,176,0)" rx="2" ry="2" />
<text  x="309.45" y="1647.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count_set (2,612,080,952 samples, 0.19%)</title><rect x="355.3" y="1765" width="2.3" height="15.0" fill="rgb(228,180,35)" rx="2" ry="2" />
<text  x="358.31" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (571,985,132 samples, 0.04%)</title><rect x="1086.6" y="1813" width="0.5" height="15.0" fill="rgb(226,16,29)" rx="2" ry="2" />
<text  x="1089.64" y="1823.5" ></text>
</g>
<g >
<title>memcpy$plt (175,760,762 samples, 0.01%)</title><rect x="818.6" y="1829" width="0.2" height="15.0" fill="rgb(219,202,49)" rx="2" ry="2" />
<text  x="821.60" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1685" width="0.2" height="15.0" fill="rgb(243,29,37)" rx="2" ry="2" />
<text  x="1048.93" y="1695.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (173,520,159 samples, 0.01%)</title><rect x="225.3" y="1301" width="0.2" height="15.0" fill="rgb(206,144,41)" rx="2" ry="2" />
<text  x="228.31" y="1311.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::allocate (119,816,813 samples, 0.01%)</title><rect x="490.6" y="1877" width="0.2" height="15.0" fill="rgb(243,217,10)" rx="2" ry="2" />
<text  x="493.65" y="1887.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (356,607,102 samples, 0.03%)</title><rect x="965.8" y="1829" width="0.3" height="15.0" fill="rgb(238,188,23)" rx="2" ry="2" />
<text  x="968.77" y="1839.5" ></text>
</g>
<g >
<title>simple_stmt_rule (119,249,786 samples, 0.01%)</title><rect x="1054.9" y="2021" width="0.1" height="15.0" fill="rgb(219,73,24)" rx="2" ry="2" />
<text  x="1057.86" y="2031.5" ></text>
</g>
<g >
<title>up_write (4,639,169,936 samples, 0.34%)</title><rect x="1033.4" y="1957" width="4.0" height="15.0" fill="rgb(249,9,39)" rx="2" ry="2" />
<text  x="1036.41" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (198,258,494 samples, 0.01%)</title><rect x="804.6" y="1845" width="0.2" height="15.0" fill="rgb(224,135,32)" rx="2" ry="2" />
<text  x="807.61" y="1855.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (159,268,665 samples, 0.01%)</title><rect x="223.7" y="1525" width="0.2" height="15.0" fill="rgb(245,153,3)" rx="2" ry="2" />
<text  x="226.72" y="1535.5" ></text>
</g>
<g >
<title>rwsem_mark_wake (589,297,911 samples, 0.04%)</title><rect x="1033.8" y="1925" width="0.5" height="15.0" fill="rgb(220,3,34)" rx="2" ry="2" />
<text  x="1036.76" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="565" width="0.2" height="15.0" fill="rgb(249,155,20)" rx="2" ry="2" />
<text  x="1048.93" y="575.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (622,374,379 samples, 0.05%)</title><rect x="211.0" y="1717" width="0.5" height="15.0" fill="rgb(228,104,10)" rx="2" ry="2" />
<text  x="214.00" y="1727.5" ></text>
</g>
<g >
<title>__flush_smp_call_function_queue (2,949,356,790 samples, 0.22%)</title><rect x="1179.5" y="1845" width="2.6" height="15.0" fill="rgb(252,61,17)" rx="2" ry="2" />
<text  x="1182.53" y="1855.5" ></text>
</g>
<g >
<title>evict (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1781" width="0.1" height="15.0" fill="rgb(241,114,45)" rx="2" ry="2" />
<text  x="1080.14" y="1791.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;bool&gt; (2,678,844,832 samples, 0.20%)</title><rect x="491.5" y="1877" width="2.3" height="15.0" fill="rgb(244,116,11)" rx="2" ry="2" />
<text  x="494.46" y="1887.5" ></text>
</g>
<g >
<title>cpu_startup_entry (27,771,529,939 samples, 2.04%)</title><rect x="1164.8" y="2005" width="24.0" height="15.0" fill="rgb(249,207,54)" rx="2" ry="2" />
<text  x="1167.76" y="2015.5" >c..</text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (307,684,831 samples, 0.02%)</title><rect x="225.3" y="1381" width="0.2" height="15.0" fill="rgb(207,51,19)" rx="2" ry="2" />
<text  x="228.26" y="1391.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (600,634,011 samples, 0.04%)</title><rect x="1165.3" y="1925" width="0.5" height="15.0" fill="rgb(220,31,16)" rx="2" ry="2" />
<text  x="1168.31" y="1935.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1285" width="0.4" height="15.0" fill="rgb(212,146,34)" rx="2" ry="2" />
<text  x="227.27" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (140,098,483 samples, 0.01%)</title><rect x="1059.6" y="2037" width="0.1" height="15.0" fill="rgb(220,85,12)" rx="2" ry="2" />
<text  x="1062.59" y="2047.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_head (208,582,229 samples, 0.02%)</title><rect x="97.4" y="1717" width="0.2" height="15.0" fill="rgb(213,195,3)" rx="2" ry="2" />
<text  x="100.42" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1621" width="0.2" height="15.0" fill="rgb(232,176,20)" rx="2" ry="2" />
<text  x="1048.93" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (556,520,409 samples, 0.04%)</title><rect x="571.8" y="1845" width="0.5" height="15.0" fill="rgb(208,148,7)" rx="2" ry="2" />
<text  x="574.84" y="1855.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (523,056,475 samples, 0.04%)</title><rect x="48.8" y="1781" width="0.4" height="15.0" fill="rgb(247,93,45)" rx="2" ry="2" />
<text  x="51.76" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="373" width="0.2" height="15.0" fill="rgb(235,217,31)" rx="2" ry="2" />
<text  x="1048.93" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,877,634,940 samples, 0.14%)</title><rect x="722.4" y="1797" width="1.6" height="15.0" fill="rgb(250,94,43)" rx="2" ry="2" />
<text  x="725.40" y="1807.5" ></text>
</g>
<g >
<title>MMap::Map (229,494,057 samples, 0.02%)</title><rect x="1052.3" y="1989" width="0.2" height="15.0" fill="rgb(215,79,44)" rx="2" ry="2" />
<text  x="1055.30" y="1999.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (2,846,641,411 samples, 0.21%)</title><rect x="629.6" y="1765" width="2.5" height="15.0" fill="rgb(216,201,43)" rx="2" ry="2" />
<text  x="632.65" y="1775.5" ></text>
</g>
<g >
<title>select_task_rq_fair (797,049,016 samples, 0.06%)</title><rect x="1035.7" y="1893" width="0.6" height="15.0" fill="rgb(221,173,35)" rx="2" ry="2" />
<text  x="1038.66" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::allocate (1,348,088,246 samples, 0.10%)</title><rect x="316.4" y="1573" width="1.2" height="15.0" fill="rgb(248,66,24)" rx="2" ry="2" />
<text  x="319.44" y="1583.5" ></text>
</g>
<g >
<title>__stpcpy_sse2_unaligned (1,553,141,918 samples, 0.11%)</title><rect x="417.6" y="1781" width="1.3" height="15.0" fill="rgb(224,39,52)" rx="2" ry="2" />
<text  x="420.55" y="1791.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (319,405,213 samples, 0.02%)</title><rect x="224.3" y="965" width="0.3" height="15.0" fill="rgb(249,197,33)" rx="2" ry="2" />
<text  x="227.29" y="975.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (988,146,914 samples, 0.07%)</title><rect x="371.5" y="1813" width="0.9" height="15.0" fill="rgb(216,69,22)" rx="2" ry="2" />
<text  x="374.51" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1397" width="0.2" height="15.0" fill="rgb(206,67,28)" rx="2" ry="2" />
<text  x="1048.93" y="1407.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (552,225,486 samples, 0.04%)</title><rect x="1038.0" y="1973" width="0.5" height="15.0" fill="rgb(223,99,1)" rx="2" ry="2" />
<text  x="1041.01" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (420,044,589 samples, 0.03%)</title><rect x="758.4" y="1829" width="0.3" height="15.0" fill="rgb(214,174,54)" rx="2" ry="2" />
<text  x="761.35" y="1839.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::store (153,621,565 samples, 0.01%)</title><rect x="420.9" y="1829" width="0.2" height="15.0" fill="rgb(227,81,49)" rx="2" ry="2" />
<text  x="423.95" y="1839.5" ></text>
</g>
<g >
<title>[snap] (552,934,525 samples, 0.04%)</title><rect x="1163.2" y="2037" width="0.4" height="15.0" fill="rgb(220,193,52)" rx="2" ry="2" />
<text  x="1166.17" y="2047.5" ></text>
</g>
<g >
<title>std::forward&lt;void const* const&amp;&gt; (167,392,756 samples, 0.01%)</title><rect x="1107.6" y="1749" width="0.1" height="15.0" fill="rgb(254,160,30)" rx="2" ry="2" />
<text  x="1110.60" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (4,210,050,560 samples, 0.31%)</title><rect x="222.7" y="1589" width="3.6" height="15.0" fill="rgb(239,62,0)" rx="2" ry="2" />
<text  x="225.67" y="1599.5" ></text>
</g>
<g >
<title>idle_cpu (584,759,421 samples, 0.04%)</title><rect x="1027.3" y="1781" width="0.5" height="15.0" fill="rgb(230,211,52)" rx="2" ry="2" />
<text  x="1030.32" y="1791.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (548,281,817 samples, 0.04%)</title><rect x="424.1" y="1829" width="0.5" height="15.0" fill="rgb(250,51,49)" rx="2" ry="2" />
<text  x="427.15" y="1839.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (158,031,912 samples, 0.01%)</title><rect x="414.0" y="1717" width="0.2" height="15.0" fill="rgb(221,36,26)" rx="2" ry="2" />
<text  x="417.05" y="1727.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (4,193,563,455 samples, 0.31%)</title><rect x="222.7" y="1573" width="3.6" height="15.0" fill="rgb(228,176,42)" rx="2" ry="2" />
<text  x="225.69" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11,499,169,715 samples, 0.85%)</title><rect x="805.2" y="1845" width="10.0" height="15.0" fill="rgb(220,47,14)" rx="2" ry="2" />
<text  x="808.24" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, bool&amp;&amp;&gt; (1,080,148,642 samples, 0.08%)</title><rect x="512.9" y="1845" width="1.0" height="15.0" fill="rgb(250,45,5)" rx="2" ry="2" />
<text  x="515.93" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="533" width="0.2" height="15.0" fill="rgb(229,145,53)" rx="2" ry="2" />
<text  x="1048.93" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (1,206,206,941 samples, 0.09%)</title><rect x="514.8" y="1845" width="1.1" height="15.0" fill="rgb(222,61,47)" rx="2" ry="2" />
<text  x="517.83" y="1855.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (615,454,802 samples, 0.05%)</title><rect x="149.5" y="1701" width="0.6" height="15.0" fill="rgb(243,28,50)" rx="2" ry="2" />
<text  x="152.55" y="1711.5" ></text>
</g>
<g >
<title>__strncasecmp_l_sse2 (2,470,745,526 samples, 0.18%)</title><rect x="414.2" y="1765" width="2.2" height="15.0" fill="rgb(205,23,50)" rx="2" ry="2" />
<text  x="417.23" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="661" width="0.2" height="15.0" fill="rgb(239,181,21)" rx="2" ry="2" />
<text  x="1048.93" y="671.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (510,511,602 samples, 0.04%)</title><rect x="1184.0" y="1925" width="0.4" height="15.0" fill="rgb(212,9,10)" rx="2" ry="2" />
<text  x="1187.01" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, bool&amp;&amp;, false&gt;::_Head_base&lt;bool&gt; (177,791,033 samples, 0.01%)</title><rect x="492.4" y="1845" width="0.1" height="15.0" fill="rgb(218,24,23)" rx="2" ry="2" />
<text  x="495.39" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (46,366,074,435 samples, 3.41%)</title><rect x="228.4" y="1653" width="40.2" height="15.0" fill="rgb(244,30,36)" rx="2" ry="2" />
<text  x="231.43" y="1663.5" >fol..</text>
</g>
<g >
<title>ext4_da_write_begin (314,740,847 samples, 0.02%)</title><rect x="1073.8" y="1829" width="0.3" height="15.0" fill="rgb(229,166,46)" rx="2" ry="2" />
<text  x="1076.85" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (125,934,052 samples, 0.01%)</title><rect x="224.3" y="517" width="0.1" height="15.0" fill="rgb(225,67,40)" rx="2" ry="2" />
<text  x="227.32" y="527.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="229" width="0.2" height="15.0" fill="rgb(237,86,14)" rx="2" ry="2" />
<text  x="1048.93" y="239.5" ></text>
</g>
<g >
<title>[unknown] (149,867,772 samples, 0.01%)</title><rect x="1090.8" y="2005" width="0.1" height="15.0" fill="rgb(236,218,42)" rx="2" ry="2" />
<text  x="1093.79" y="2015.5" ></text>
</g>
<g >
<title>folly::Ignore::Ignore&lt;unsigned long&gt; (434,540,387 samples, 0.03%)</title><rect x="525.8" y="1845" width="0.4" height="15.0" fill="rgb(239,173,28)" rx="2" ry="2" />
<text  x="528.81" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;void const*&gt;::_M_addr (130,761,899 samples, 0.01%)</title><rect x="1105.3" y="1717" width="0.1" height="15.0" fill="rgb(231,96,51)" rx="2" ry="2" />
<text  x="1108.28" y="1727.5" ></text>
</g>
<g >
<title>vfs_read (342,674,394 samples, 0.03%)</title><rect x="1091.9" y="1941" width="0.3" height="15.0" fill="rgb(239,174,54)" rx="2" ry="2" />
<text  x="1094.89" y="1951.5" ></text>
</g>
<g >
<title>update_load_avg (406,343,978 samples, 0.03%)</title><rect x="1022.2" y="1845" width="0.4" height="15.0" fill="rgb(241,95,36)" rx="2" ry="2" />
<text  x="1025.24" y="1855.5" ></text>
</g>
<g >
<title>vfs_write (115,746,976 samples, 0.01%)</title><rect x="1061.2" y="1957" width="0.1" height="15.0" fill="rgb(246,142,3)" rx="2" ry="2" />
<text  x="1064.24" y="1967.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (3,040,742,072 samples, 0.22%)</title><rect x="601.0" y="1797" width="2.6" height="15.0" fill="rgb(227,69,53)" rx="2" ry="2" />
<text  x="603.95" y="1807.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (1,629,971,908 samples, 0.12%)</title><rect x="880.9" y="1829" width="1.4" height="15.0" fill="rgb(205,8,37)" rx="2" ry="2" />
<text  x="883.91" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (121,299,414 samples, 0.01%)</title><rect x="79.1" y="1685" width="0.1" height="15.0" fill="rgb(207,128,43)" rx="2" ry="2" />
<text  x="82.05" y="1695.5" ></text>
</g>
<g >
<title>snap (831,358,827 samples, 0.06%)</title><rect x="1163.2" y="2053" width="0.7" height="15.0" fill="rgb(248,5,23)" rx="2" ry="2" />
<text  x="1166.17" y="2063.5" ></text>
</g>
<g >
<title>apt-config (360,261,329 samples, 0.03%)</title><rect x="1059.6" y="2053" width="0.3" height="15.0" fill="rgb(216,191,12)" rx="2" ry="2" />
<text  x="1062.58" y="2063.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (191,023,243 samples, 0.01%)</title><rect x="1184.5" y="1957" width="0.2" height="15.0" fill="rgb(221,172,43)" rx="2" ry="2" />
<text  x="1187.53" y="1967.5" ></text>
</g>
<g >
<title>bprm_execve (150,260,330 samples, 0.01%)</title><rect x="1081.2" y="1957" width="0.1" height="15.0" fill="rgb(241,134,7)" rx="2" ry="2" />
<text  x="1084.21" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (131,432,591 samples, 0.01%)</title><rect x="572.7" y="1845" width="0.1" height="15.0" fill="rgb(215,93,27)" rx="2" ry="2" />
<text  x="575.70" y="1855.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (696,952,556 samples, 0.05%)</title><rect x="481.9" y="1797" width="0.6" height="15.0" fill="rgb(247,121,49)" rx="2" ry="2" />
<text  x="484.88" y="1807.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4,127,827,180 samples, 0.30%)</title><rect x="497.8" y="1861" width="3.6" height="15.0" fill="rgb(246,50,1)" rx="2" ry="2" />
<text  x="500.81" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (472,136,142 samples, 0.03%)</title><rect x="224.3" y="1157" width="0.4" height="15.0" fill="rgb(220,101,30)" rx="2" ry="2" />
<text  x="227.28" y="1167.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (3,154,030,893 samples, 0.23%)</title><rect x="1025.1" y="1797" width="2.7" height="15.0" fill="rgb(252,7,33)" rx="2" ry="2" />
<text  x="1028.09" y="1807.5" ></text>
</g>
<g >
<title>[snap] (217,105,536 samples, 0.02%)</title><rect x="1163.4" y="1845" width="0.2" height="15.0" fill="rgb(218,139,22)" rx="2" ry="2" />
<text  x="1166.37" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (123,514,605 samples, 0.01%)</title><rect x="283.0" y="1573" width="0.2" height="15.0" fill="rgb(233,91,14)" rx="2" ry="2" />
<text  x="286.05" y="1583.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (428,012,563 samples, 0.03%)</title><rect x="338.2" y="1653" width="0.3" height="15.0" fill="rgb(248,222,38)" rx="2" ry="2" />
<text  x="341.17" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1493" width="0.2" height="15.0" fill="rgb(223,94,28)" rx="2" ry="2" />
<text  x="1048.93" y="1503.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (4,184,762,502 samples, 0.31%)</title><rect x="222.7" y="1557" width="3.6" height="15.0" fill="rgb(244,102,20)" rx="2" ry="2" />
<text  x="225.70" y="1567.5" ></text>
</g>
<g >
<title>begin_new_exec (147,730,585 samples, 0.01%)</title><rect x="1081.2" y="1877" width="0.1" height="15.0" fill="rgb(228,139,4)" rx="2" ry="2" />
<text  x="1084.21" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (15,541,944,047 samples, 1.14%)</title><rect x="270.9" y="1637" width="13.5" height="15.0" fill="rgb(248,169,13)" rx="2" ry="2" />
<text  x="273.94" y="1647.5" ></text>
</g>
<g >
<title>[snap] (537,845,212 samples, 0.04%)</title><rect x="1163.2" y="2005" width="0.4" height="15.0" fill="rgb(224,226,0)" rx="2" ry="2" />
<text  x="1166.17" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1909" width="0.2" height="15.0" fill="rgb(233,66,35)" rx="2" ry="2" />
<text  x="1048.93" y="1919.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (2,470,804,304 samples, 0.18%)</title><rect x="460.1" y="1717" width="2.1" height="15.0" fill="rgb(236,54,25)" rx="2" ry="2" />
<text  x="463.07" y="1727.5" ></text>
</g>
<g >
<title>handle_mm_fault (199,801,692 samples, 0.01%)</title><rect x="1072.8" y="1797" width="0.2" height="15.0" fill="rgb(214,156,9)" rx="2" ry="2" />
<text  x="1075.83" y="1807.5" ></text>
</g>
<g >
<title>folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (1,894,335,783 samples, 0.14%)</title><rect x="1086.3" y="2021" width="1.6" height="15.0" fill="rgb(243,136,36)" rx="2" ry="2" />
<text  x="1089.28" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1285" width="0.2" height="15.0" fill="rgb(207,37,43)" rx="2" ry="2" />
<text  x="1048.93" y="1295.5" ></text>
</g>
<g >
<title>update_load_avg (485,906,947 samples, 0.04%)</title><rect x="1180.8" y="1749" width="0.4" height="15.0" fill="rgb(228,57,13)" rx="2" ry="2" />
<text  x="1183.76" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="917" width="0.2" height="15.0" fill="rgb(223,183,41)" rx="2" ry="2" />
<text  x="1048.93" y="927.5" ></text>
</g>
<g >
<title>do_anonymous_page (140,405,146 samples, 0.01%)</title><rect x="1091.6" y="1909" width="0.2" height="15.0" fill="rgb(210,147,11)" rx="2" ry="2" />
<text  x="1094.63" y="1919.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (140,477,626 samples, 0.01%)</title><rect x="1057.7" y="1925" width="0.2" height="15.0" fill="rgb(207,47,19)" rx="2" ry="2" />
<text  x="1060.75" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (785,746,379 samples, 0.06%)</title><rect x="843.9" y="1861" width="0.6" height="15.0" fill="rgb(226,211,30)" rx="2" ry="2" />
<text  x="846.86" y="1871.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (399,785,568 samples, 0.03%)</title><rect x="636.4" y="1829" width="0.3" height="15.0" fill="rgb(207,176,44)" rx="2" ry="2" />
<text  x="639.39" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (185,250,340 samples, 0.01%)</title><rect x="1045.9" y="53" width="0.2" height="15.0" fill="rgb(241,159,19)" rx="2" ry="2" />
<text  x="1048.93" y="63.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (405,309,839 samples, 0.03%)</title><rect x="1056.8" y="2037" width="0.4" height="15.0" fill="rgb(216,45,54)" rx="2" ry="2" />
<text  x="1059.83" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (125,934,052 samples, 0.01%)</title><rect x="224.3" y="485" width="0.1" height="15.0" fill="rgb(224,107,19)" rx="2" ry="2" />
<text  x="227.32" y="495.5" ></text>
</g>
<g >
<title>__schedule (2,849,564,680 samples, 0.21%)</title><rect x="964.1" y="1925" width="2.5" height="15.0" fill="rgb(235,80,25)" rx="2" ry="2" />
<text  x="967.11" y="1935.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (4,927,026,690 samples, 0.36%)</title><rect x="222.5" y="1685" width="4.2" height="15.0" fill="rgb(254,191,30)" rx="2" ry="2" />
<text  x="225.47" y="1695.5" ></text>
</g>
<g >
<title>operator new (127,058,311 samples, 0.01%)</title><rect x="317.0" y="1557" width="0.1" height="15.0" fill="rgb(227,22,54)" rx="2" ry="2" />
<text  x="320.01" y="1567.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::NodeT (123,762,127 samples, 0.01%)</title><rect x="47.8" y="1797" width="0.1" height="15.0" fill="rgb(222,6,26)" rx="2" ry="2" />
<text  x="50.80" y="1807.5" ></text>
</g>
<g >
<title>open_last_lookups (135,218,250 samples, 0.01%)</title><rect x="1161.6" y="1909" width="0.2" height="15.0" fill="rgb(250,79,35)" rx="2" ry="2" />
<text  x="1164.64" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (368,425,922 samples, 0.03%)</title><rect x="709.7" y="1845" width="0.3" height="15.0" fill="rgb(241,156,11)" rx="2" ry="2" />
<text  x="712.68" y="1855.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (978,266,472 samples, 0.07%)</title><rect x="1031.2" y="1925" width="0.8" height="15.0" fill="rgb(243,195,52)" rx="2" ry="2" />
<text  x="1034.17" y="1935.5" ></text>
</g>
<g >
<title>handle_pte_fault (179,248,840 samples, 0.01%)</title><rect x="1072.8" y="1765" width="0.2" height="15.0" fill="rgb(219,25,38)" rx="2" ry="2" />
<text  x="1075.84" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (24,429,578,676 samples, 1.80%)</title><rect x="583.2" y="1829" width="21.2" height="15.0" fill="rgb(227,207,26)" rx="2" ry="2" />
<text  x="586.20" y="1839.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (1,319,160,690 samples, 0.10%)</title><rect x="307.4" y="1653" width="1.1" height="15.0" fill="rgb(231,95,44)" rx="2" ry="2" />
<text  x="310.35" y="1663.5" ></text>
</g>
<g >
<title>burn_cycles (1,033,893,389,015 samples, 76.00%)</title><rect x="10.1" y="1909" width="896.7" height="15.0" fill="rgb(235,207,50)" rx="2" ry="2" />
<text  x="13.09" y="1919.5" >burn_cycles</text>
</g>
<g >
<title>__x64_sys_write (162,660,798 samples, 0.01%)</title><rect x="1092.4" y="1973" width="0.2" height="15.0" fill="rgb(213,141,44)" rx="2" ry="2" />
<text  x="1095.43" y="1983.5" ></text>
</g>
<g >
<title>getnameinfo (126,720,136 samples, 0.01%)</title><rect x="1097.1" y="1909" width="0.1" height="15.0" fill="rgb(225,223,52)" rx="2" ry="2" />
<text  x="1100.07" y="1919.5" ></text>
</g>
<g >
<title>arch_call_rest_init (1,029,739,981 samples, 0.08%)</title><rect x="1188.9" y="1973" width="0.9" height="15.0" fill="rgb(223,87,28)" rx="2" ry="2" />
<text  x="1191.86" y="1983.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (2,102,904,808 samples, 0.15%)</title><rect x="816.8" y="1829" width="1.8" height="15.0" fill="rgb(233,87,23)" rx="2" ry="2" />
<text  x="819.78" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_tc&lt;std::atomic&gt;::capacity (304,090,839 samples, 0.02%)</title><rect x="906.3" y="1877" width="0.3" height="15.0" fill="rgb(244,81,33)" rx="2" ry="2" />
<text  x="909.34" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (207,580,185 samples, 0.02%)</title><rect x="265.6" y="1525" width="0.2" height="15.0" fill="rgb(234,161,1)" rx="2" ry="2" />
<text  x="268.59" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="2037" width="0.7" height="15.0" fill="rgb(211,39,33)" rx="2" ry="2" />
<text  x="1090.95" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,670,202,691 samples, 0.20%)</title><rect x="884.1" y="1845" width="2.3" height="15.0" fill="rgb(228,4,11)" rx="2" ry="2" />
<text  x="887.10" y="1855.5" ></text>
</g>
<g >
<title>try_charge_memcg (186,253,256 samples, 0.01%)</title><rect x="967.9" y="1877" width="0.1" height="15.0" fill="rgb(221,184,34)" rx="2" ry="2" />
<text  x="970.89" y="1887.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (296,633,599 samples, 0.02%)</title><rect x="788.9" y="1861" width="0.3" height="15.0" fill="rgb(214,175,13)" rx="2" ry="2" />
<text  x="791.94" y="1871.5" ></text>
</g>
<g >
<title>enqueue_task_fair (136,258,230 samples, 0.01%)</title><rect x="1186.5" y="1797" width="0.1" height="15.0" fill="rgb(247,211,27)" rx="2" ry="2" />
<text  x="1189.49" y="1807.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (748,217,613 samples, 0.05%)</title><rect x="264.4" y="1477" width="0.6" height="15.0" fill="rgb(220,139,53)" rx="2" ry="2" />
<text  x="267.37" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="853" width="0.2" height="15.0" fill="rgb(223,86,48)" rx="2" ry="2" />
<text  x="1048.93" y="863.5" ></text>
</g>
<g >
<title>operator new (205,279,270 samples, 0.02%)</title><rect x="511.6" y="1829" width="0.2" height="15.0" fill="rgb(238,67,8)" rx="2" ry="2" />
<text  x="514.60" y="1839.5" ></text>
</g>
<g >
<title>dequeue_task_fair (425,546,905 samples, 0.03%)</title><rect x="412.6" y="1605" width="0.3" height="15.0" fill="rgb(238,216,19)" rx="2" ry="2" />
<text  x="415.58" y="1615.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (216,674,665 samples, 0.02%)</title><rect x="972.5" y="1941" width="0.2" height="15.0" fill="rgb(222,108,41)" rx="2" ry="2" />
<text  x="975.54" y="1951.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (323,897,569 samples, 0.02%)</title><rect x="224.3" y="1013" width="0.3" height="15.0" fill="rgb(213,217,10)" rx="2" ry="2" />
<text  x="227.29" y="1023.5" ></text>
</g>
<g >
<title>security_file_mprotect (172,235,686 samples, 0.01%)</title><rect x="1033.0" y="1957" width="0.1" height="15.0" fill="rgb(230,183,26)" rx="2" ry="2" />
<text  x="1035.95" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (4,832,282,370 samples, 0.36%)</title><rect x="590.5" y="1813" width="4.2" height="15.0" fill="rgb(223,118,1)" rx="2" ry="2" />
<text  x="593.53" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_read (262,770,885 samples, 0.02%)</title><rect x="1161.2" y="1973" width="0.3" height="15.0" fill="rgb(242,145,42)" rx="2" ry="2" />
<text  x="1164.23" y="1983.5" ></text>
</g>
<g >
<title>sched_clock_cpu (140,941,190 samples, 0.01%)</title><rect x="1183.0" y="1909" width="0.1" height="15.0" fill="rgb(247,10,35)" rx="2" ry="2" />
<text  x="1186.00" y="1919.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (271,470,422 samples, 0.02%)</title><rect x="474.4" y="1829" width="0.3" height="15.0" fill="rgb(216,202,50)" rx="2" ry="2" />
<text  x="477.43" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (494,546,825 samples, 0.04%)</title><rect x="862.7" y="1845" width="0.4" height="15.0" fill="rgb(246,105,10)" rx="2" ry="2" />
<text  x="865.66" y="1855.5" ></text>
</g>
<g >
<title>dpkg (7,021,003,927 samples, 0.52%)</title><rect x="1090.7" y="2053" width="6.1" height="15.0" fill="rgb(207,138,46)" rx="2" ry="2" />
<text  x="1093.73" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::LastElementImpl&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::call&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (210,706,618 samples, 0.02%)</title><rect x="526.2" y="1845" width="0.2" height="15.0" fill="rgb(218,120,47)" rx="2" ry="2" />
<text  x="529.19" y="1855.5" ></text>
</g>
<g >
<title>prepare_task_switch (122,996,472 samples, 0.01%)</title><rect x="1187.4" y="1941" width="0.1" height="15.0" fill="rgb(222,82,22)" rx="2" ry="2" />
<text  x="1190.39" y="1951.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::__atomic_base (818,847,774 samples, 0.06%)</title><rect x="485.8" y="1829" width="0.8" height="15.0" fill="rgb(229,45,46)" rx="2" ry="2" />
<text  x="488.85" y="1839.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (213,767,797 samples, 0.02%)</title><rect x="1091.6" y="2021" width="0.2" height="15.0" fill="rgb(205,34,14)" rx="2" ry="2" />
<text  x="1094.58" y="2031.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (453,263,820 samples, 0.03%)</title><rect x="1186.4" y="1909" width="0.4" height="15.0" fill="rgb(251,226,37)" rx="2" ry="2" />
<text  x="1189.40" y="1919.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::set_next (160,771,276 samples, 0.01%)</title><rect x="165.5" y="1717" width="0.1" height="15.0" fill="rgb(234,35,22)" rx="2" ry="2" />
<text  x="168.51" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;void const*, void const*, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_eq (206,503,046 samples, 0.02%)</title><rect x="1107.3" y="1765" width="0.2" height="15.0" fill="rgb(238,185,37)" rx="2" ry="2" />
<text  x="1110.29" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1,036,937,641,690 samples, 76.22%)</title><rect x="10.0" y="2021" width="899.4" height="15.0" fill="rgb(247,99,19)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" >folly::detail::function::FunctionTraits&lt;void </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::construct&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (623,628,613 samples, 0.05%)</title><rect x="297.0" y="1573" width="0.6" height="15.0" fill="rgb(243,180,38)" rx="2" ry="2" />
<text  x="300.05" y="1583.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, bool&amp;&amp;&gt;::_M_head (579,064,309 samples, 0.04%)</title><rect x="513.4" y="1813" width="0.5" height="15.0" fill="rgb(217,69,31)" rx="2" ry="2" />
<text  x="516.37" y="1823.5" ></text>
</g>
<g >
<title>MMap::Map (137,367,472 samples, 0.01%)</title><rect x="1065.8" y="2005" width="0.2" height="15.0" fill="rgb(240,108,13)" rx="2" ry="2" />
<text  x="1068.84" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (877,559,622 samples, 0.06%)</title><rect x="1073.7" y="1973" width="0.8" height="15.0" fill="rgb(218,227,24)" rx="2" ry="2" />
<text  x="1076.71" y="1983.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (155,945,808 samples, 0.01%)</title><rect x="892.7" y="1877" width="0.2" height="15.0" fill="rgb(250,211,18)" rx="2" ry="2" />
<text  x="895.72" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (179,688,938 samples, 0.01%)</title><rect x="1021.1" y="1893" width="0.2" height="15.0" fill="rgb(230,32,1)" rx="2" ry="2" />
<text  x="1024.14" y="1903.5" ></text>
</g>
<g >
<title>up_read (809,414,505 samples, 0.06%)</title><rect x="971.5" y="1973" width="0.7" height="15.0" fill="rgb(232,170,44)" rx="2" ry="2" />
<text  x="974.50" y="1983.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (925,086,813 samples, 0.07%)</title><rect x="603.6" y="1813" width="0.8" height="15.0" fill="rgb(236,12,31)" rx="2" ry="2" />
<text  x="606.59" y="1823.5" ></text>
</g>
<g >
<title>schedule (550,932,664 samples, 0.04%)</title><rect x="1160.4" y="1893" width="0.5" height="15.0" fill="rgb(228,5,36)" rx="2" ry="2" />
<text  x="1163.39" y="1903.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (184,971,641 samples, 0.01%)</title><rect x="1035.5" y="1861" width="0.1" height="15.0" fill="rgb(250,118,0)" rx="2" ry="2" />
<text  x="1038.48" y="1871.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (121,683,262 samples, 0.01%)</title><rect x="84.6" y="1701" width="0.1" height="15.0" fill="rgb(217,78,50)" rx="2" ry="2" />
<text  x="87.62" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (514,154,616 samples, 0.04%)</title><rect x="501.7" y="1861" width="0.5" height="15.0" fill="rgb(240,109,4)" rx="2" ry="2" />
<text  x="504.71" y="1871.5" ></text>
</g>
<g >
<title>http (365,909,751 samples, 0.03%)</title><rect x="1162.0" y="2053" width="0.4" height="15.0" fill="rgb(252,114,49)" rx="2" ry="2" />
<text  x="1165.03" y="2063.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,387,042,921 samples, 0.18%)</title><rect x="969.1" y="1909" width="2.0" height="15.0" fill="rgb(246,153,0)" rx="2" ry="2" />
<text  x="972.06" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1733" width="0.2" height="15.0" fill="rgb(212,51,30)" rx="2" ry="2" />
<text  x="1048.93" y="1743.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::check_count_threshold (215,035,258 samples, 0.02%)</title><rect x="184.6" y="1669" width="0.2" height="15.0" fill="rgb(241,39,11)" rx="2" ry="2" />
<text  x="187.59" y="1679.5" ></text>
</g>
<g >
<title>__switch_to (216,930,541 samples, 0.02%)</title><rect x="1164.3" y="2037" width="0.2" height="15.0" fill="rgb(246,219,0)" rx="2" ry="2" />
<text  x="1167.27" y="2047.5" ></text>
</g>
<g >
<title>wake_q_add (421,927,340 samples, 0.03%)</title><rect x="1034.3" y="1925" width="0.3" height="15.0" fill="rgb(210,180,40)" rx="2" ry="2" />
<text  x="1037.27" y="1935.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (132,337,118 samples, 0.01%)</title><rect x="330.0" y="1557" width="0.1" height="15.0" fill="rgb(216,22,20)" rx="2" ry="2" />
<text  x="333.02" y="1567.5" ></text>
</g>
<g >
<title>wake_up_q (497,186,875 samples, 0.04%)</title><rect x="971.8" y="1941" width="0.4" height="15.0" fill="rgb(214,136,32)" rx="2" ry="2" />
<text  x="974.77" y="1951.5" ></text>
</g>
<g >
<title>unmap_page_range (706,223,322 samples, 0.05%)</title><rect x="1088.0" y="1877" width="0.6" height="15.0" fill="rgb(227,73,12)" rx="2" ry="2" />
<text  x="1090.95" y="1887.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::store (582,761,581 samples, 0.04%)</title><rect x="99.7" y="1685" width="0.5" height="15.0" fill="rgb(211,178,7)" rx="2" ry="2" />
<text  x="102.70" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (500,325,082 samples, 0.04%)</title><rect x="856.5" y="1845" width="0.5" height="15.0" fill="rgb(210,42,42)" rx="2" ry="2" />
<text  x="859.53" y="1855.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (118,545,166 samples, 0.01%)</title><rect x="408.5" y="1781" width="0.1" height="15.0" fill="rgb(213,91,53)" rx="2" ry="2" />
<text  x="411.49" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (367,914,555 samples, 0.03%)</title><rect x="861.3" y="1813" width="0.3" height="15.0" fill="rgb(222,121,50)" rx="2" ry="2" />
<text  x="864.33" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,158,913,848 samples, 0.16%)</title><rect x="412.3" y="1749" width="1.9" height="15.0" fill="rgb(218,208,38)" rx="2" ry="2" />
<text  x="415.31" y="1759.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (401,621,257 samples, 0.03%)</title><rect x="1088.2" y="1797" width="0.3" height="15.0" fill="rgb(245,5,38)" rx="2" ry="2" />
<text  x="1091.19" y="1807.5" ></text>
</g>
<g >
<title>std::pair&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (15,788,580,495 samples, 1.16%)</title><rect x="893.1" y="1893" width="13.7" height="15.0" fill="rgb(218,12,31)" rx="2" ry="2" />
<text  x="896.15" y="1903.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (205,668,804 samples, 0.02%)</title><rect x="1162.8" y="1957" width="0.1" height="15.0" fill="rgb(213,205,1)" rx="2" ry="2" />
<text  x="1165.76" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (511,754,965 samples, 0.04%)</title><rect x="1072.6" y="2005" width="0.4" height="15.0" fill="rgb(225,5,5)" rx="2" ry="2" />
<text  x="1075.60" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (2,981,658,492 samples, 0.22%)</title><rect x="775.8" y="1813" width="2.5" height="15.0" fill="rgb(232,18,29)" rx="2" ry="2" />
<text  x="778.76" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (495,327,500 samples, 0.04%)</title><rect x="514.4" y="1797" width="0.4" height="15.0" fill="rgb(239,165,15)" rx="2" ry="2" />
<text  x="517.40" y="1807.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,182,629,770 samples, 0.09%)</title><rect x="902.7" y="1861" width="1.0" height="15.0" fill="rgb(212,29,3)" rx="2" ry="2" />
<text  x="905.70" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="389" width="0.2" height="15.0" fill="rgb(224,178,14)" rx="2" ry="2" />
<text  x="1048.93" y="399.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::releaseLink (7,477,656,833 samples, 0.55%)</title><rect x="233.4" y="1589" width="6.5" height="15.0" fill="rgb(225,130,20)" rx="2" ry="2" />
<text  x="236.38" y="1599.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::cas_count (1,093,266,887 samples, 0.08%)</title><rect x="195.7" y="1717" width="1.0" height="15.0" fill="rgb(238,220,28)" rx="2" ry="2" />
<text  x="198.75" y="1727.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (6,387,097,622 samples, 0.47%)</title><rect x="410.9" y="1797" width="5.5" height="15.0" fill="rgb(248,5,30)" rx="2" ry="2" />
<text  x="413.86" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (147,741,219,882 samples, 10.86%)</title><rect x="211.5" y="1717" width="128.2" height="15.0" fill="rgb(230,227,31)" rx="2" ry="2" />
<text  x="214.54" y="1727.5" >folly::hazptr_ob..</text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (127,849,887 samples, 0.01%)</title><rect x="353.3" y="1781" width="0.1" height="15.0" fill="rgb(205,217,10)" rx="2" ry="2" />
<text  x="356.32" y="1791.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (161,438,716 samples, 0.01%)</title><rect x="1074.2" y="1749" width="0.2" height="15.0" fill="rgb(248,72,27)" rx="2" ry="2" />
<text  x="1077.24" y="1759.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,596,023,543 samples, 0.12%)</title><rect x="29.5" y="1861" width="1.4" height="15.0" fill="rgb(218,167,40)" rx="2" ry="2" />
<text  x="32.52" y="1871.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (241,713,112 samples, 0.02%)</title><rect x="496.7" y="1829" width="0.2" height="15.0" fill="rgb(230,105,3)" rx="2" ry="2" />
<text  x="499.69" y="1839.5" ></text>
</g>
<g >
<title>change_pmd_range.isra.0 (361,147,849 samples, 0.03%)</title><rect x="1030.4" y="1909" width="0.3" height="15.0" fill="rgb(253,191,29)" rx="2" ry="2" />
<text  x="1033.42" y="1919.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (4,927,026,690 samples, 0.36%)</title><rect x="222.5" y="1669" width="4.2" height="15.0" fill="rgb(220,11,35)" rx="2" ry="2" />
<text  x="225.47" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1845" width="0.2" height="15.0" fill="rgb(231,192,46)" rx="2" ry="2" />
<text  x="1048.93" y="1855.5" ></text>
</g>
<g >
<title>__dentry_kill (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1829" width="0.1" height="15.0" fill="rgb(217,187,54)" rx="2" ry="2" />
<text  x="1080.14" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink_and_reclaim_unchecked (1,044,807,664 samples, 0.08%)</title><rect x="1086.4" y="1957" width="0.9" height="15.0" fill="rgb(219,139,48)" rx="2" ry="2" />
<text  x="1089.35" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (558,483,768 samples, 0.04%)</title><rect x="1186.3" y="1941" width="0.5" height="15.0" fill="rgb(254,196,22)" rx="2" ry="2" />
<text  x="1189.32" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1205" width="0.2" height="15.0" fill="rgb(249,73,11)" rx="2" ry="2" />
<text  x="1048.93" y="1215.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned long&amp;&gt;::_Tuple_impl (635,342,092 samples, 0.05%)</title><rect x="496.1" y="1829" width="0.6" height="15.0" fill="rgb(216,189,53)" rx="2" ry="2" />
<text  x="499.14" y="1839.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (131,322,321 samples, 0.01%)</title><rect x="225.6" y="1461" width="0.1" height="15.0" fill="rgb(213,229,27)" rx="2" ry="2" />
<text  x="228.56" y="1471.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (508,853,963 samples, 0.04%)</title><rect x="225.1" y="1461" width="0.4" height="15.0" fill="rgb(251,76,31)" rx="2" ry="2" />
<text  x="228.10" y="1471.5" ></text>
</g>
<g >
<title>__schedule (10,352,728,206 samples, 0.76%)</title><rect x="1020.7" y="1909" width="8.9" height="15.0" fill="rgb(240,92,40)" rx="2" ry="2" />
<text  x="1023.67" y="1919.5" ></text>
</g>
<g >
<title>exec_binprm (150,260,330 samples, 0.01%)</title><rect x="1081.2" y="1925" width="0.1" height="15.0" fill="rgb(214,107,23)" rx="2" ry="2" />
<text  x="1084.21" y="1935.5" ></text>
</g>
<g >
<title>getloadavg (127,145,449 samples, 0.01%)</title><rect x="1058.3" y="2037" width="0.2" height="15.0" fill="rgb(215,63,14)" rx="2" ry="2" />
<text  x="1061.34" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="613" width="0.2" height="15.0" fill="rgb(216,93,0)" rx="2" ry="2" />
<text  x="1048.93" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_initialize_map (14,608,815,575 samples, 1.07%)</title><rect x="67.8" y="1717" width="12.7" height="15.0" fill="rgb(231,79,21)" rx="2" ry="2" />
<text  x="70.82" y="1727.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (292,411,322 samples, 0.02%)</title><rect x="283.9" y="1589" width="0.3" height="15.0" fill="rgb(220,69,36)" rx="2" ry="2" />
<text  x="286.95" y="1599.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (716,213,856 samples, 0.05%)</title><rect x="514.2" y="1813" width="0.6" height="15.0" fill="rgb(212,6,34)" rx="2" ry="2" />
<text  x="517.21" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (545,943,581 samples, 0.04%)</title><rect x="323.5" y="1621" width="0.4" height="15.0" fill="rgb(226,69,36)" rx="2" ry="2" />
<text  x="326.47" y="1631.5" ></text>
</g>
<g >
<title>pkgPackageManager::SmartUnPack (134,837,913 samples, 0.01%)</title><rect x="1076.4" y="1989" width="0.2" height="15.0" fill="rgb(235,159,9)" rx="2" ry="2" />
<text  x="1079.45" y="1999.5" ></text>
</g>
<g >
<title>trigdef_parse.isra.0 (546,374,616 samples, 0.04%)</title><rect x="1096.3" y="2037" width="0.5" height="15.0" fill="rgb(215,142,12)" rx="2" ry="2" />
<text  x="1099.34" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (356,225,702 samples, 0.03%)</title><rect x="1064.4" y="2005" width="0.3" height="15.0" fill="rgb(229,44,14)" rx="2" ry="2" />
<text  x="1067.36" y="2015.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_create_nodes (2,443,529,385 samples, 0.18%)</title><rect x="279.1" y="1589" width="2.1" height="15.0" fill="rgb(213,48,39)" rx="2" ry="2" />
<text  x="282.05" y="1599.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (328,397,089 samples, 0.02%)</title><rect x="224.3" y="1109" width="0.3" height="15.0" fill="rgb(229,133,30)" rx="2" ry="2" />
<text  x="227.29" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;void const*, void const*, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_equals (1,970,355,429 samples, 0.14%)</title><rect x="1106.4" y="1797" width="1.7" height="15.0" fill="rgb(253,117,39)" rx="2" ry="2" />
<text  x="1109.37" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1349" width="0.2" height="15.0" fill="rgb(246,38,11)" rx="2" ry="2" />
<text  x="1048.93" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~deque (120,342,922 samples, 0.01%)</title><rect x="226.0" y="1445" width="0.1" height="15.0" fill="rgb(211,11,19)" rx="2" ry="2" />
<text  x="229.04" y="1455.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,413,003,561 samples, 0.18%)</title><rect x="946.4" y="2005" width="2.1" height="15.0" fill="rgb(249,25,8)" rx="2" ry="2" />
<text  x="949.45" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrTableDeleter::operator (4,927,026,690 samples, 0.36%)</title><rect x="222.5" y="1653" width="4.2" height="15.0" fill="rgb(222,179,27)" rx="2" ry="2" />
<text  x="225.47" y="1663.5" ></text>
</g>
<g >
<title>vma_alloc_folio (478,721,195 samples, 0.04%)</title><rect x="947.7" y="1893" width="0.4" height="15.0" fill="rgb(236,222,50)" rx="2" ry="2" />
<text  x="950.71" y="1903.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (316,957,099 samples, 0.02%)</title><rect x="266.8" y="1605" width="0.3" height="15.0" fill="rgb(245,162,19)" rx="2" ry="2" />
<text  x="269.81" y="1615.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1221" width="0.4" height="15.0" fill="rgb(218,82,1)" rx="2" ry="2" />
<text  x="227.27" y="1231.5" ></text>
</g>
<g >
<title>std::mutex::unlock (3,163,651,391 samples, 0.23%)</title><rect x="417.1" y="1797" width="2.7" height="15.0" fill="rgb(232,64,47)" rx="2" ry="2" />
<text  x="420.07" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (169,470,088 samples, 0.01%)</title><rect x="618.9" y="1829" width="0.2" height="15.0" fill="rgb(250,18,48)" rx="2" ry="2" />
<text  x="621.92" y="1839.5" ></text>
</g>
<g >
<title>do_sched_yield (609,436,314 samples, 0.04%)</title><rect x="1160.3" y="1909" width="0.6" height="15.0" fill="rgb(226,18,35)" rx="2" ry="2" />
<text  x="1163.34" y="1919.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (115,309,518 samples, 0.01%)</title><rect x="831.2" y="1797" width="0.1" height="15.0" fill="rgb(212,160,14)" rx="2" ry="2" />
<text  x="834.19" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (379,035,543 samples, 0.03%)</title><rect x="760.2" y="1861" width="0.4" height="15.0" fill="rgb(252,220,50)" rx="2" ry="2" />
<text  x="763.23" y="1871.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::__atomic_base (281,422,639 samples, 0.02%)</title><rect x="484.7" y="1797" width="0.3" height="15.0" fill="rgb(237,21,39)" rx="2" ry="2" />
<text  x="487.71" y="1807.5" ></text>
</g>
<g >
<title>call_cpuidle (20,817,079,776 samples, 1.53%)</title><rect x="1165.2" y="1957" width="18.0" height="15.0" fill="rgb(206,123,1)" rx="2" ry="2" />
<text  x="1168.16" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="341" width="0.2" height="15.0" fill="rgb(229,127,11)" rx="2" ry="2" />
<text  x="1048.93" y="351.5" ></text>
</g>
<g >
<title>ReadConfigFile (356,225,702 samples, 0.03%)</title><rect x="1064.4" y="2021" width="0.3" height="15.0" fill="rgb(238,90,5)" rx="2" ry="2" />
<text  x="1067.36" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (3,095,856,167 samples, 0.23%)</title><rect x="632.8" y="1829" width="2.7" height="15.0" fill="rgb(214,198,20)" rx="2" ry="2" />
<text  x="635.81" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (687,609,450 samples, 0.05%)</title><rect x="321.7" y="1589" width="0.6" height="15.0" fill="rgb(240,225,52)" rx="2" ry="2" />
<text  x="324.66" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (385,153,016 samples, 0.03%)</title><rect x="1064.7" y="2005" width="0.3" height="15.0" fill="rgb(254,99,41)" rx="2" ry="2" />
<text  x="1067.67" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (177,615,565 samples, 0.01%)</title><rect x="496.9" y="1829" width="0.2" height="15.0" fill="rgb(220,173,35)" rx="2" ry="2" />
<text  x="499.90" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, bool&amp;&amp;, false&gt;::_M_head (405,319,537 samples, 0.03%)</title><rect x="513.5" y="1797" width="0.4" height="15.0" fill="rgb(246,134,43)" rx="2" ry="2" />
<text  x="516.52" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,160,887,130 samples, 0.16%)</title><rect x="626.1" y="1797" width="1.9" height="15.0" fill="rgb(228,160,51)" rx="2" ry="2" />
<text  x="629.09" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (510,622,583 samples, 0.04%)</title><rect x="907.8" y="1909" width="0.4" height="15.0" fill="rgb(240,45,51)" rx="2" ry="2" />
<text  x="910.80" y="1919.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (269,908,043 samples, 0.02%)</title><rect x="224.3" y="853" width="0.2" height="15.0" fill="rgb(244,188,8)" rx="2" ry="2" />
<text  x="227.30" y="863.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::getItem (128,318,062 samples, 0.01%)</title><rect x="60.0" y="1781" width="0.1" height="15.0" fill="rgb(217,13,50)" rx="2" ry="2" />
<text  x="63.00" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1,036,931,055,052 samples, 76.22%)</title><rect x="10.0" y="1973" width="899.4" height="15.0" fill="rgb(237,182,9)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" >folly::detail::function::FunctionTraits&lt;void </text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::~_Deque_impl (270,120,417 samples, 0.02%)</title><rect x="286.4" y="1605" width="0.2" height="15.0" fill="rgb(214,3,50)" rx="2" ry="2" />
<text  x="289.38" y="1615.5" ></text>
</g>
<g >
<title>pkg_name_is_illegal (1,841,321,349 samples, 0.14%)</title><rect x="1093.7" y="2021" width="1.6" height="15.0" fill="rgb(206,229,16)" rx="2" ry="2" />
<text  x="1096.72" y="2031.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (278,468,635 samples, 0.02%)</title><rect x="1078.6" y="2037" width="0.3" height="15.0" fill="rgb(209,1,26)" rx="2" ry="2" />
<text  x="1081.61" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (56,525,230,373 samples, 4.15%)</title><rect x="710.3" y="1845" width="49.0" height="15.0" fill="rgb(217,67,52)" rx="2" ry="2" />
<text  x="713.29" y="1855.5" >std:..</text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1157" width="0.2" height="15.0" fill="rgb(222,5,26)" rx="2" ry="2" />
<text  x="1048.93" y="1167.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::linked_list&lt;folly::hazptr_obj&lt;std::atomic&gt; &gt;::push (1,529,869,563 samples, 0.11%)</title><rect x="1128.6" y="1877" width="1.3" height="15.0" fill="rgb(207,190,48)" rx="2" ry="2" />
<text  x="1131.55" y="1887.5" ></text>
</g>
<g >
<title>update_curr (555,515,088 samples, 0.04%)</title><rect x="1021.8" y="1845" width="0.4" height="15.0" fill="rgb(229,154,41)" rx="2" ry="2" />
<text  x="1024.76" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count (960,982,249 samples, 0.07%)</title><rect x="478.6" y="1797" width="0.8" height="15.0" fill="rgb(253,93,46)" rx="2" ry="2" />
<text  x="481.56" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1429" width="0.2" height="15.0" fill="rgb(239,129,39)" rx="2" ry="2" />
<text  x="1048.93" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (18,657,154,505 samples, 1.37%)</title><rect x="243.3" y="1525" width="16.1" height="15.0" fill="rgb(225,93,16)" rx="2" ry="2" />
<text  x="246.26" y="1535.5" ></text>
</g>
<g >
<title>pkgSourceList::Type::ParseStanza (377,941,638 samples, 0.03%)</title><rect x="1039.2" y="2005" width="0.4" height="15.0" fill="rgb(227,219,36)" rx="2" ry="2" />
<text  x="1042.22" y="2015.5" ></text>
</g>
<g >
<title>__free_one_page (133,881,500 samples, 0.01%)</title><rect x="1088.4" y="1717" width="0.1" height="15.0" fill="rgb(238,42,14)" rx="2" ry="2" />
<text  x="1091.39" y="1727.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (118,671,450 samples, 0.01%)</title><rect x="446.8" y="1733" width="0.1" height="15.0" fill="rgb(217,158,38)" rx="2" ry="2" />
<text  x="449.76" y="1743.5" ></text>
</g>
<g >
<title>XXH3_64bits_update (265,536,409 samples, 0.02%)</title><rect x="1043.3" y="2021" width="0.2" height="15.0" fill="rgb(238,63,50)" rx="2" ry="2" />
<text  x="1046.32" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1573" width="0.2" height="15.0" fill="rgb(239,79,41)" rx="2" ry="2" />
<text  x="1048.93" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (34,860,098,692 samples, 2.56%)</title><rect x="1007.6" y="1989" width="30.2" height="15.0" fill="rgb(226,46,21)" rx="2" ry="2" />
<text  x="1010.60" y="1999.5" >__..</text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (179,920,794 samples, 0.01%)</title><rect x="224.3" y="629" width="0.2" height="15.0" fill="rgb(244,157,29)" rx="2" ry="2" />
<text  x="227.32" y="639.5" ></text>
</g>
<g >
<title>[unknown] (977,314,166 samples, 0.07%)</title><rect x="1089.4" y="2021" width="0.9" height="15.0" fill="rgb(233,147,6)" rx="2" ry="2" />
<text  x="1092.45" y="2031.5" ></text>
</g>
<g >
<title>operator new (133,216,519 samples, 0.01%)</title><rect x="319.0" y="1541" width="0.2" height="15.0" fill="rgb(238,185,21)" rx="2" ry="2" />
<text  x="322.04" y="1551.5" ></text>
</g>
<g >
<title>rest_init (1,029,739,981 samples, 0.08%)</title><rect x="1188.9" y="1957" width="0.9" height="15.0" fill="rgb(248,50,51)" rx="2" ry="2" />
<text  x="1191.86" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (285,535,191 samples, 0.02%)</title><rect x="225.3" y="1349" width="0.2" height="15.0" fill="rgb(215,161,7)" rx="2" ry="2" />
<text  x="228.28" y="1359.5" ></text>
</g>
<g >
<title>std::mutex::lock (5,603,183,028 samples, 0.41%)</title><rect x="411.5" y="1781" width="4.9" height="15.0" fill="rgb(225,208,33)" rx="2" ry="2" />
<text  x="414.54" y="1791.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,535,493,926 samples, 0.11%)</title><rect x="630.8" y="1749" width="1.3" height="15.0" fill="rgb(219,72,18)" rx="2" ry="2" />
<text  x="633.79" y="1759.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (276,572,896 samples, 0.02%)</title><rect x="266.5" y="1589" width="0.2" height="15.0" fill="rgb(251,216,31)" rx="2" ry="2" />
<text  x="269.47" y="1599.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (487,142,152 samples, 0.04%)</title><rect x="225.1" y="1413" width="0.4" height="15.0" fill="rgb(245,106,23)" rx="2" ry="2" />
<text  x="228.11" y="1423.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::hazptr_obj (743,780,987 samples, 0.05%)</title><rect x="483.8" y="1813" width="0.7" height="15.0" fill="rgb(236,35,1)" rx="2" ry="2" />
<text  x="486.84" y="1823.5" ></text>
</g>
<g >
<title>__do_sys_clone (138,302,560 samples, 0.01%)</title><rect x="1081.1" y="1973" width="0.1" height="15.0" fill="rgb(240,223,30)" rx="2" ry="2" />
<text  x="1084.09" y="1983.5" ></text>
</g>
<g >
<title>mmput (118,035,182 samples, 0.01%)</title><rect x="1096.0" y="1941" width="0.1" height="15.0" fill="rgb(224,167,33)" rx="2" ry="2" />
<text  x="1099.04" y="1951.5" ></text>
</g>
<g >
<title>__alloc_pages (418,461,966 samples, 0.03%)</title><rect x="947.7" y="1861" width="0.4" height="15.0" fill="rgb(209,127,11)" rx="2" ry="2" />
<text  x="950.73" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1301" width="0.4" height="15.0" fill="rgb(210,3,17)" rx="2" ry="2" />
<text  x="227.27" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (33,840,188,401 samples, 2.49%)</title><rect x="863.5" y="1893" width="29.4" height="15.0" fill="rgb(227,84,19)" rx="2" ry="2" />
<text  x="866.51" y="1903.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (2,658,469,339 samples, 0.20%)</title><rect x="580.9" y="1829" width="2.3" height="15.0" fill="rgb(245,178,31)" rx="2" ry="2" />
<text  x="583.90" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="981" width="0.2" height="15.0" fill="rgb(216,134,17)" rx="2" ry="2" />
<text  x="1048.93" y="991.5" ></text>
</g>
<g >
<title>[[vdso]] (163,706,572 samples, 0.01%)</title><rect x="185.2" y="1653" width="0.1" height="15.0" fill="rgb(250,201,16)" rx="2" ry="2" />
<text  x="188.15" y="1663.5" ></text>
</g>
<g >
<title>irqentry_enter (242,690,338 samples, 0.02%)</title><rect x="1179.3" y="1893" width="0.2" height="15.0" fill="rgb(217,195,6)" rx="2" ry="2" />
<text  x="1182.29" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::LastElementImpl&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::call&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (2,447,368,827 samples, 0.18%)</title><rect x="567.3" y="1829" width="2.1" height="15.0" fill="rgb(243,142,47)" rx="2" ry="2" />
<text  x="570.26" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (125,934,052 samples, 0.01%)</title><rect x="224.3" y="549" width="0.1" height="15.0" fill="rgb(208,168,15)" rx="2" ry="2" />
<text  x="227.32" y="559.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="645" width="0.2" height="15.0" fill="rgb(244,204,37)" rx="2" ry="2" />
<text  x="1048.93" y="655.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (116,946,721 samples, 0.01%)</title><rect x="224.3" y="405" width="0.1" height="15.0" fill="rgb(252,175,2)" rx="2" ry="2" />
<text  x="227.33" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator* (174,933,390 samples, 0.01%)</title><rect x="297.8" y="1557" width="0.1" height="15.0" fill="rgb(253,86,16)" rx="2" ry="2" />
<text  x="300.77" y="1567.5" ></text>
</g>
<g >
<title>folly::estimateSpaceNeeded&lt;unsigned long&gt; (440,063,984 samples, 0.03%)</title><rect x="569.5" y="1845" width="0.4" height="15.0" fill="rgb(239,28,9)" rx="2" ry="2" />
<text  x="572.52" y="1855.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (120,774,468 samples, 0.01%)</title><rect x="245.2" y="1509" width="0.1" height="15.0" fill="rgb(242,82,36)" rx="2" ry="2" />
<text  x="248.17" y="1519.5" ></text>
</g>
<g >
<title>__sysvec_call_function_single (142,620,206 samples, 0.01%)</title><rect x="1189.3" y="1813" width="0.1" height="15.0" fill="rgb(233,150,44)" rx="2" ry="2" />
<text  x="1192.32" y="1823.5" ></text>
</g>
<g >
<title>new_sync_write (163,017,616 samples, 0.01%)</title><rect x="1078.9" y="1941" width="0.2" height="15.0" fill="rgb(239,123,44)" rx="2" ry="2" />
<text  x="1081.93" y="1951.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (228,527,226 samples, 0.02%)</title><rect x="279.8" y="1557" width="0.2" height="15.0" fill="rgb(221,149,34)" rx="2" ry="2" />
<text  x="282.84" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::begin (1,219,139,165 samples, 0.09%)</title><rect x="331.0" y="1621" width="1.1" height="15.0" fill="rgb(247,209,27)" rx="2" ry="2" />
<text  x="334.04" y="1631.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,358,466,006 samples, 0.17%)</title><rect x="726.8" y="1797" width="2.0" height="15.0" fill="rgb(216,64,9)" rx="2" ry="2" />
<text  x="729.76" y="1807.5" ></text>
</g>
<g >
<title>std::pair&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (379,094,769 samples, 0.03%)</title><rect x="909.1" y="1909" width="0.3" height="15.0" fill="rgb(234,58,22)" rx="2" ry="2" />
<text  x="912.06" y="1919.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::safe_list_top (8,732,785,265 samples, 0.64%)</title><rect x="344.0" y="1733" width="7.6" height="15.0" fill="rgb(209,228,29)" rx="2" ry="2" />
<text  x="347.00" y="1743.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (160,901,992 samples, 0.01%)</title><rect x="75.7" y="1653" width="0.1" height="15.0" fill="rgb(221,127,5)" rx="2" ry="2" />
<text  x="78.66" y="1663.5" ></text>
</g>
<g >
<title>charge_memcg (337,381,855 samples, 0.02%)</title><rect x="967.8" y="1893" width="0.2" height="15.0" fill="rgb(238,160,15)" rx="2" ry="2" />
<text  x="970.75" y="1903.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::cohort (513,202,244 samples, 0.04%)</title><rect x="1130.5" y="1909" width="0.4" height="15.0" fill="rgb(243,94,30)" rx="2" ry="2" />
<text  x="1133.45" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (483,749,165 samples, 0.04%)</title><rect x="571.4" y="1845" width="0.4" height="15.0" fill="rgb(252,177,35)" rx="2" ry="2" />
<text  x="574.42" y="1855.5" ></text>
</g>
<g >
<title>free_unref_page_list (235,362,664 samples, 0.02%)</title><rect x="1088.3" y="1765" width="0.2" height="15.0" fill="rgb(241,198,49)" rx="2" ry="2" />
<text  x="1091.31" y="1775.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (319,405,213 samples, 0.02%)</title><rect x="224.3" y="949" width="0.3" height="15.0" fill="rgb(208,169,37)" rx="2" ry="2" />
<text  x="227.29" y="959.5" ></text>
</g>
<g >
<title>pkgPolicy::pkgPolicy (194,206,100 samples, 0.01%)</title><rect x="1054.5" y="1989" width="0.1" height="15.0" fill="rgb(235,115,52)" rx="2" ry="2" />
<text  x="1057.45" y="1999.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (7,082,359,824 samples, 0.52%)</title><rect x="1153.7" y="1877" width="6.2" height="15.0" fill="rgb(242,69,32)" rx="2" ry="2" />
<text  x="1156.73" y="1887.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::~allocator (205,191,944 samples, 0.02%)</title><rect x="490.9" y="1877" width="0.1" height="15.0" fill="rgb(208,95,16)" rx="2" ry="2" />
<text  x="493.87" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (218,955,138 samples, 0.02%)</title><rect x="368.4" y="1781" width="0.2" height="15.0" fill="rgb(252,0,22)" rx="2" ry="2" />
<text  x="371.42" y="1791.5" ></text>
</g>
<g >
<title>load_balance (449,020,573 samples, 0.03%)</title><rect x="413.1" y="1573" width="0.4" height="15.0" fill="rgb(236,2,19)" rx="2" ry="2" />
<text  x="416.11" y="1583.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (8,241,222,845 samples, 0.61%)</title><rect x="344.4" y="1717" width="7.1" height="15.0" fill="rgb(249,84,33)" rx="2" ry="2" />
<text  x="347.37" y="1727.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (650,210,750 samples, 0.05%)</title><rect x="419.8" y="1813" width="0.6" height="15.0" fill="rgb(231,218,15)" rx="2" ry="2" />
<text  x="422.81" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (158,842,613 samples, 0.01%)</title><rect x="431.8" y="1781" width="0.1" height="15.0" fill="rgb(224,171,24)" rx="2" ry="2" />
<text  x="434.79" y="1791.5" ></text>
</g>
<g >
<title>new_sync_read (498,303,155 samples, 0.04%)</title><rect x="1072.6" y="1925" width="0.4" height="15.0" fill="rgb(219,142,38)" rx="2" ry="2" />
<text  x="1075.61" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1333" width="0.2" height="15.0" fill="rgb(244,81,29)" rx="2" ry="2" />
<text  x="1048.93" y="1343.5" ></text>
</g>
<g >
<title>__addtf3 (162,383,913 samples, 0.01%)</title><rect x="1050.1" y="2021" width="0.2" height="15.0" fill="rgb(249,217,25)" rx="2" ry="2" />
<text  x="1053.13" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (284,509,526 samples, 0.02%)</title><rect x="489.3" y="1861" width="0.3" height="15.0" fill="rgb(239,43,18)" rx="2" ry="2" />
<text  x="492.34" y="1871.5" ></text>
</g>
<g >
<title>exit_mmap (118,035,182 samples, 0.01%)</title><rect x="1096.0" y="1925" width="0.1" height="15.0" fill="rgb(206,56,20)" rx="2" ry="2" />
<text  x="1099.04" y="1935.5" ></text>
</g>
<g >
<title>GlobalCPUThread (1,186,112,190,318 samples, 87.18%)</title><rect x="10.0" y="2053" width="1028.8" height="15.0" fill="rgb(250,141,53)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >GlobalCPUThread</text>
</g>
<g >
<title>copy_process (138,302,560 samples, 0.01%)</title><rect x="1081.1" y="1941" width="0.1" height="15.0" fill="rgb(234,148,48)" rx="2" ry="2" />
<text  x="1084.09" y="1951.5" ></text>
</g>
<g >
<title>lzma_lz_decoder_init (288,672,095 samples, 0.02%)</title><rect x="1083.9" y="2037" width="0.3" height="15.0" fill="rgb(254,95,22)" rx="2" ry="2" />
<text  x="1086.94" y="2047.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (2,140,196,240 samples, 0.16%)</title><rect x="97.8" y="1685" width="1.9" height="15.0" fill="rgb(220,75,19)" rx="2" ry="2" />
<text  x="100.80" y="1695.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints (1,217,973,414 samples, 0.09%)</title><rect x="1177.7" y="1877" width="1.1" height="15.0" fill="rgb(227,18,35)" rx="2" ry="2" />
<text  x="1180.69" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_node (1,358,466,504 samples, 0.10%)</title><rect x="289.4" y="1589" width="1.2" height="15.0" fill="rgb(235,216,3)" rx="2" ry="2" />
<text  x="292.39" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35,756,738,478 samples, 2.63%)</title><rect x="1007.5" y="2021" width="31.0" height="15.0" fill="rgb(232,21,7)" rx="2" ry="2" />
<text  x="1010.51" y="2031.5" >en..</text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (46,740,697,249 samples, 3.44%)</title><rect x="228.1" y="1669" width="40.5" height="15.0" fill="rgb(239,73,30)" rx="2" ry="2" />
<text  x="231.11" y="1679.5" >fol..</text>
</g>
<g >
<title>load_balance (5,502,589,805 samples, 0.40%)</title><rect x="1023.4" y="1845" width="4.8" height="15.0" fill="rgb(241,185,21)" rx="2" ry="2" />
<text  x="1026.40" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::list_match_condition&lt;folly::hazptr_domain&lt;std::atomic&gt;::match_tagged (37,104,129,207 samples, 2.73%)</title><rect x="1098.2" y="1909" width="32.2" height="15.0" fill="rgb(222,25,15)" rx="2" ry="2" />
<text  x="1101.21" y="1919.5" >fo..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (129,859,064 samples, 0.01%)</title><rect x="1096.0" y="2037" width="0.2" height="15.0" fill="rgb(231,67,29)" rx="2" ry="2" />
<text  x="1099.04" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (212,923,928 samples, 0.02%)</title><rect x="225.3" y="1333" width="0.2" height="15.0" fill="rgb(245,213,23)" rx="2" ry="2" />
<text  x="228.28" y="1343.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_list&lt;std::atomic&gt;::empty (188,045,544 samples, 0.01%)</title><rect x="339.4" y="1701" width="0.2" height="15.0" fill="rgb(216,62,44)" rx="2" ry="2" />
<text  x="342.39" y="1711.5" ></text>
</g>
<g >
<title>htop (1,115,430,661 samples, 0.08%)</title><rect x="1161.1" y="2053" width="0.9" height="15.0" fill="rgb(231,170,19)" rx="2" ry="2" />
<text  x="1164.07" y="2063.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (272,274,193 samples, 0.02%)</title><rect x="71.3" y="1669" width="0.3" height="15.0" fill="rgb(242,28,44)" rx="2" ry="2" />
<text  x="74.33" y="1679.5" ></text>
</g>
<g >
<title>exit_mm (118,035,182 samples, 0.01%)</title><rect x="1096.0" y="1957" width="0.1" height="15.0" fill="rgb(243,54,3)" rx="2" ry="2" />
<text  x="1099.04" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="949" width="0.2" height="15.0" fill="rgb(213,151,16)" rx="2" ry="2" />
<text  x="1048.93" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (12,397,220,119 samples, 0.91%)</title><rect x="735.2" y="1813" width="10.7" height="15.0" fill="rgb(245,223,25)" rx="2" ry="2" />
<text  x="738.16" y="1823.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (204,863,956 samples, 0.02%)</title><rect x="773.4" y="1829" width="0.1" height="15.0" fill="rgb(225,83,49)" rx="2" ry="2" />
<text  x="776.36" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_map (2,417,315,160 samples, 0.18%)</title><rect x="286.6" y="1605" width="2.1" height="15.0" fill="rgb(233,52,41)" rx="2" ry="2" />
<text  x="289.62" y="1615.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (156,513,840 samples, 0.01%)</title><rect x="327.1" y="1573" width="0.1" height="15.0" fill="rgb(215,195,33)" rx="2" ry="2" />
<text  x="330.10" y="1583.5" ></text>
</g>
<g >
<title>google::Check_GTImpl&lt;unsigned int, unsigned int&gt; (173,608,237 samples, 0.01%)</title><rect x="306.8" y="1637" width="0.1" height="15.0" fill="rgb(248,181,36)" rx="2" ry="2" />
<text  x="309.75" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_node (1,893,857,469 samples, 0.14%)</title><rect x="86.7" y="1701" width="1.6" height="15.0" fill="rgb(227,107,52)" rx="2" ry="2" />
<text  x="89.70" y="1711.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (262,029,144 samples, 0.02%)</title><rect x="1052.5" y="1989" width="0.2" height="15.0" fill="rgb(227,165,16)" rx="2" ry="2" />
<text  x="1055.50" y="1999.5" ></text>
</g>
<g >
<title>down_read (3,808,382,900 samples, 0.28%)</title><rect x="963.4" y="1973" width="3.3" height="15.0" fill="rgb(209,154,44)" rx="2" ry="2" />
<text  x="966.39" y="1983.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (8,641,295,479 samples, 0.64%)</title><rect x="770.9" y="1845" width="7.4" height="15.0" fill="rgb(218,192,36)" rx="2" ry="2" />
<text  x="773.85" y="1855.5" ></text>
</g>
<g >
<title>operator delete (128,045,273 samples, 0.01%)</title><rect x="85.6" y="1685" width="0.1" height="15.0" fill="rgb(245,211,50)" rx="2" ry="2" />
<text  x="88.62" y="1695.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (38,900,066,486 samples, 2.86%)</title><rect x="101.8" y="1685" width="33.8" height="15.0" fill="rgb(210,178,10)" rx="2" ry="2" />
<text  x="104.84" y="1695.5" >st..</text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (250,288,515 samples, 0.02%)</title><rect x="326.8" y="1573" width="0.3" height="15.0" fill="rgb(249,221,34)" rx="2" ry="2" />
<text  x="329.84" y="1583.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (14,840,810,076 samples, 1.09%)</title><rect x="246.0" y="1493" width="12.9" height="15.0" fill="rgb(225,77,34)" rx="2" ry="2" />
<text  x="249.02" y="1503.5" ></text>
</g>
<g >
<title>ksys_write (188,103,881 samples, 0.01%)</title><rect x="1162.8" y="1845" width="0.1" height="15.0" fill="rgb(227,11,3)" rx="2" ry="2" />
<text  x="1165.78" y="1855.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (166,494,392 samples, 0.01%)</title><rect x="225.9" y="1461" width="0.1" height="15.0" fill="rgb(236,20,7)" rx="2" ry="2" />
<text  x="228.88" y="1471.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (848,388,198 samples, 0.06%)</title><rect x="1184.8" y="1973" width="0.7" height="15.0" fill="rgb(227,169,47)" rx="2" ry="2" />
<text  x="1187.78" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (17,727,534,891 samples, 1.30%)</title><rect x="150.1" y="1701" width="15.4" height="15.0" fill="rgb(244,135,25)" rx="2" ry="2" />
<text  x="153.08" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="2021" width="0.7" height="15.0" fill="rgb(234,5,4)" rx="2" ry="2" />
<text  x="1090.95" y="2031.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_max_size (179,122,212 samples, 0.01%)</title><rect x="73.0" y="1669" width="0.1" height="15.0" fill="rgb(218,220,34)" rx="2" ry="2" />
<text  x="75.97" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, unsigned long&amp;&gt; (992,597,195 samples, 0.07%)</title><rect x="515.0" y="1829" width="0.9" height="15.0" fill="rgb(239,131,35)" rx="2" ry="2" />
<text  x="518.02" y="1839.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (139,079,403 samples, 0.01%)</title><rect x="1180.9" y="1733" width="0.2" height="15.0" fill="rgb(216,217,50)" rx="2" ry="2" />
<text  x="1183.94" y="1743.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (538,342,128 samples, 0.04%)</title><rect x="1178.8" y="1909" width="0.5" height="15.0" fill="rgb(236,180,17)" rx="2" ry="2" />
<text  x="1181.82" y="1919.5" ></text>
</g>
<g >
<title>dequeue_task_fair (195,949,709 samples, 0.01%)</title><rect x="946.7" y="1877" width="0.2" height="15.0" fill="rgb(214,116,46)" rx="2" ry="2" />
<text  x="949.74" y="1887.5" ></text>
</g>
<g >
<title>exc_page_fault (156,381,687 samples, 0.01%)</title><rect x="1091.6" y="1989" width="0.2" height="15.0" fill="rgb(240,227,49)" rx="2" ry="2" />
<text  x="1094.62" y="1999.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (232,173,545 samples, 0.02%)</title><rect x="1074.2" y="1765" width="0.2" height="15.0" fill="rgb(211,145,28)" rx="2" ry="2" />
<text  x="1077.24" y="1775.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (226,403,531 samples, 0.02%)</title><rect x="329.4" y="1573" width="0.2" height="15.0" fill="rgb(223,194,28)" rx="2" ry="2" />
<text  x="332.38" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="325" width="0.2" height="15.0" fill="rgb(232,80,18)" rx="2" ry="2" />
<text  x="1048.93" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,948,363,576 samples, 0.14%)</title><rect x="755.1" y="1813" width="1.7" height="15.0" fill="rgb(224,129,31)" rx="2" ry="2" />
<text  x="758.08" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (131,322,321 samples, 0.01%)</title><rect x="225.6" y="1445" width="0.1" height="15.0" fill="rgb(254,145,12)" rx="2" ry="2" />
<text  x="228.56" y="1455.5" ></text>
</g>
<g >
<title>exec_mmap (140,559,791 samples, 0.01%)</title><rect x="1081.2" y="1861" width="0.1" height="15.0" fill="rgb(236,209,49)" rx="2" ry="2" />
<text  x="1084.22" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (10,836,924,761 samples, 0.80%)</title><rect x="778.5" y="1861" width="9.4" height="15.0" fill="rgb(212,147,37)" rx="2" ry="2" />
<text  x="781.53" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (306,613,243 samples, 0.02%)</title><rect x="848.3" y="1861" width="0.3" height="15.0" fill="rgb(225,24,5)" rx="2" ry="2" />
<text  x="851.31" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1,957,071,208 samples, 0.14%)</title><rect x="866.1" y="1877" width="1.7" height="15.0" fill="rgb(233,192,26)" rx="2" ry="2" />
<text  x="869.12" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (121,562,360 samples, 0.01%)</title><rect x="184.9" y="1653" width="0.1" height="15.0" fill="rgb(243,70,2)" rx="2" ry="2" />
<text  x="187.88" y="1663.5" ></text>
</g>
<g >
<title>[snap] (356,723,370 samples, 0.03%)</title><rect x="1163.3" y="1893" width="0.3" height="15.0" fill="rgb(215,133,33)" rx="2" ry="2" />
<text  x="1166.28" y="1903.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (138,146,015 samples, 0.01%)</title><rect x="420.7" y="1829" width="0.1" height="15.0" fill="rgb(242,78,25)" rx="2" ry="2" />
<text  x="423.68" y="1839.5" ></text>
</g>
<g >
<title>tick_sched_handle (234,302,543 samples, 0.02%)</title><rect x="1178.9" y="1813" width="0.2" height="15.0" fill="rgb(226,116,52)" rx="2" ry="2" />
<text  x="1181.86" y="1823.5" ></text>
</g>
<g >
<title>[perl] (119,342,513 samples, 0.01%)</title><rect x="1089.0" y="2037" width="0.1" height="15.0" fill="rgb(244,44,11)" rx="2" ry="2" />
<text  x="1092.03" y="2047.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (190,270,752 samples, 0.01%)</title><rect x="327.9" y="1573" width="0.2" height="15.0" fill="rgb(249,174,34)" rx="2" ry="2" />
<text  x="330.90" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (180,762,052 samples, 0.01%)</title><rect x="1045.9" y="37" width="0.2" height="15.0" fill="rgb(223,22,1)" rx="2" ry="2" />
<text  x="1048.93" y="47.5" ></text>
</g>
<g >
<title>[unknown] (185,250,340 samples, 0.01%)</title><rect x="1045.9" y="133" width="0.2" height="15.0" fill="rgb(253,141,9)" rx="2" ry="2" />
<text  x="1048.93" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (147,463,044 samples, 0.01%)</title><rect x="1091.6" y="1957" width="0.2" height="15.0" fill="rgb(248,152,24)" rx="2" ry="2" />
<text  x="1094.63" y="1967.5" ></text>
</g>
<g >
<title>dup_mmap (132,253,397 samples, 0.01%)</title><rect x="1081.1" y="1909" width="0.1" height="15.0" fill="rgb(207,71,37)" rx="2" ry="2" />
<text  x="1084.10" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (381,556,942 samples, 0.03%)</title><rect x="857.8" y="1829" width="0.3" height="15.0" fill="rgb(216,16,15)" rx="2" ry="2" />
<text  x="860.77" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::hazptr_obj_base_linked (1,798,198,213 samples, 0.13%)</title><rect x="483.5" y="1845" width="1.5" height="15.0" fill="rgb(218,139,49)" rx="2" ry="2" />
<text  x="486.47" y="1855.5" ></text>
</g>
<g >
<title>cpuidle_select (1,461,846,635 samples, 0.11%)</title><rect x="1183.2" y="1957" width="1.3" height="15.0" fill="rgb(242,126,35)" rx="2" ry="2" />
<text  x="1186.24" y="1967.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,575,556,116 samples, 0.12%)</title><rect x="1021.3" y="1877" width="1.4" height="15.0" fill="rgb(207,47,21)" rx="2" ry="2" />
<text  x="1024.31" y="1887.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (123,941,357 samples, 0.01%)</title><rect x="1073.6" y="1989" width="0.1" height="15.0" fill="rgb(249,135,10)" rx="2" ry="2" />
<text  x="1076.60" y="1999.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_set_node (2,843,346,616 samples, 0.21%)</title><rect x="76.7" y="1701" width="2.5" height="15.0" fill="rgb(206,169,7)" rx="2" ry="2" />
<text  x="79.69" y="1711.5" ></text>
</g>
<g >
<title>perf (236,204,218 samples, 0.02%)</title><rect x="1162.7" y="2053" width="0.2" height="15.0" fill="rgb(231,28,34)" rx="2" ry="2" />
<text  x="1165.74" y="2063.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::load (834,083,546 samples, 0.06%)</title><rect x="295.6" y="1621" width="0.7" height="15.0" fill="rgb(226,149,49)" rx="2" ry="2" />
<text  x="298.59" y="1631.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::push_obj (1,033,204,238 samples, 0.08%)</title><rect x="224.2" y="1381" width="0.8" height="15.0" fill="rgb(243,156,31)" rx="2" ry="2" />
<text  x="227.15" y="1391.5" ></text>
</g>
<g >
<title>folly::resumeCoroutineWithNewAsyncStackRoot&lt;folly::coro::detail::TaskPromise&lt;void&gt; &gt; (1,036,931,055,052 samples, 76.22%)</title><rect x="10.0" y="1941" width="899.4" height="15.0" fill="rgb(208,73,37)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" >folly::resumeCoroutineWithNewAsyncStackRoot&lt;folly::coro::detail::TaskPromise&lt;void&gt; &gt;</text>
</g>
<g >
<title>do_idle (1,022,672,278 samples, 0.08%)</title><rect x="1188.9" y="1925" width="0.9" height="15.0" fill="rgb(223,5,18)" rx="2" ry="2" />
<text  x="1191.87" y="1935.5" ></text>
</g>
<g >
<title>folly::to_ascii_size&lt;10ul&gt; (263,263,019 samples, 0.02%)</title><rect x="533.0" y="1813" width="0.2" height="15.0" fill="rgb(235,78,35)" rx="2" ry="2" />
<text  x="536.01" y="1823.5" ></text>
</g>
<g >
<title>lru_cache_add (572,655,577 samples, 0.04%)</title><rect x="968.2" y="1893" width="0.5" height="15.0" fill="rgb(213,125,27)" rx="2" ry="2" />
<text  x="971.18" y="1903.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (485,638,788 samples, 0.04%)</title><rect x="224.3" y="1237" width="0.4" height="15.0" fill="rgb(244,36,1)" rx="2" ry="2" />
<text  x="227.27" y="1247.5" ></text>
</g>
<g >
<title>folly::toAppend&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (222,942,207 samples, 0.02%)</title><rect x="518.8" y="1877" width="0.2" height="15.0" fill="rgb(205,58,13)" rx="2" ry="2" />
<text  x="521.79" y="1887.5" ></text>
</g>
<g >
<title>std::operator&amp; (222,209,541 samples, 0.02%)</title><rect x="372.2" y="1797" width="0.2" height="15.0" fill="rgb(240,228,15)" rx="2" ry="2" />
<text  x="375.17" y="1807.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::atomic (1,101,049,844 samples, 0.08%)</title><rect x="485.6" y="1845" width="1.0" height="15.0" fill="rgb(228,197,15)" rx="2" ry="2" />
<text  x="488.60" y="1855.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (11,617,183,903 samples, 0.85%)</title><rect x="963.1" y="2021" width="10.1" height="15.0" fill="rgb(212,96,54)" rx="2" ry="2" />
<text  x="966.08" y="2031.5" ></text>
</g>
<g >
<title>mmput (140,559,791 samples, 0.01%)</title><rect x="1081.2" y="1845" width="0.1" height="15.0" fill="rgb(232,66,16)" rx="2" ry="2" />
<text  x="1084.22" y="1855.5" ></text>
</g>
<g >
<title>vfs_write (188,103,881 samples, 0.01%)</title><rect x="1162.8" y="1829" width="0.1" height="15.0" fill="rgb(228,26,50)" rx="2" ry="2" />
<text  x="1165.78" y="1839.5" ></text>
</g>
<g >
<title>operator delete (738,614,601 samples, 0.05%)</title><rect x="880.2" y="1829" width="0.7" height="15.0" fill="rgb(212,42,34)" rx="2" ry="2" />
<text  x="883.22" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1013" width="0.2" height="15.0" fill="rgb(223,162,6)" rx="2" ry="2" />
<text  x="1048.93" y="1023.5" ></text>
</g>
<g >
<title>rwsem_down_write_slowpath (24,638,373,155 samples, 1.81%)</title><rect x="1008.3" y="1941" width="21.4" height="15.0" fill="rgb(240,201,33)" rx="2" ry="2" />
<text  x="1011.33" y="1951.5" >r..</text>
</g>
<g >
<title>generic_perform_write (821,510,982 samples, 0.06%)</title><rect x="1073.7" y="1845" width="0.8" height="15.0" fill="rgb(227,76,25)" rx="2" ry="2" />
<text  x="1076.75" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (118,117,832 samples, 0.01%)</title><rect x="907.7" y="1909" width="0.1" height="15.0" fill="rgb(225,19,47)" rx="2" ry="2" />
<text  x="910.70" y="1919.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (19,652,038,392 samples, 1.44%)</title><rect x="63.8" y="1765" width="17.1" height="15.0" fill="rgb(252,227,35)" rx="2" ry="2" />
<text  x="66.84" y="1775.5" ></text>
</g>
<g >
<title>[libapt-pkg.so.6.0.0] (1,604,848,827 samples, 0.12%)</title><rect x="1044.5" y="2005" width="1.4" height="15.0" fill="rgb(225,149,39)" rx="2" ry="2" />
<text  x="1047.51" y="2015.5" ></text>
</g>
<g >
<title>folly::hazptr_obj&lt;std::atomic&gt;::tagged (266,315,506 samples, 0.02%)</title><rect x="195.5" y="1717" width="0.2" height="15.0" fill="rgb(227,173,34)" rx="2" ry="2" />
<text  x="198.52" y="1727.5" ></text>
</g>
<g >
<title>exc_page_fault (2,405,649,178 samples, 0.18%)</title><rect x="946.5" y="1989" width="2.0" height="15.0" fill="rgb(222,177,8)" rx="2" ry="2" />
<text  x="949.46" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (214,484,423 samples, 0.02%)</title><rect x="201.1" y="1717" width="0.2" height="15.0" fill="rgb(218,201,52)" rx="2" ry="2" />
<text  x="204.09" y="1727.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::tail (312,217,593 samples, 0.02%)</title><rect x="223.4" y="1525" width="0.3" height="15.0" fill="rgb(225,42,27)" rx="2" ry="2" />
<text  x="226.44" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (272,643,685 samples, 0.02%)</title><rect x="1057.6" y="2021" width="0.3" height="15.0" fill="rgb(226,141,47)" rx="2" ry="2" />
<text  x="1060.64" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocator (263,600,317 samples, 0.02%)</title><rect x="273.8" y="1589" width="0.3" height="15.0" fill="rgb(230,222,28)" rx="2" ry="2" />
<text  x="276.83" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="181" width="0.2" height="15.0" fill="rgb(205,199,40)" rx="2" ry="2" />
<text  x="1048.93" y="191.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="597" width="0.2" height="15.0" fill="rgb(247,31,12)" rx="2" ry="2" />
<text  x="1048.93" y="607.5" ></text>
</g>
<g >
<title>run_rebalance_domains (118,518,295 samples, 0.01%)</title><rect x="1189.5" y="1765" width="0.1" height="15.0" fill="rgb(223,89,17)" rx="2" ry="2" />
<text  x="1192.46" y="1775.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (333,825,184 samples, 0.02%)</title><rect x="74.5" y="1669" width="0.3" height="15.0" fill="rgb(230,148,11)" rx="2" ry="2" />
<text  x="77.46" y="1679.5" ></text>
</g>
<g >
<title>perf_event_mmap (1,223,964,158 samples, 0.09%)</title><rect x="1031.0" y="1941" width="1.1" height="15.0" fill="rgb(223,106,27)" rx="2" ry="2" />
<text  x="1034.00" y="1951.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (152,765,370 samples, 0.01%)</title><rect x="1092.4" y="1909" width="0.2" height="15.0" fill="rgb(238,57,37)" rx="2" ry="2" />
<text  x="1095.43" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,681,291,224 samples, 0.12%)</title><rect x="829.7" y="1765" width="1.5" height="15.0" fill="rgb(246,58,9)" rx="2" ry="2" />
<text  x="832.73" y="1775.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (267,675,328 samples, 0.02%)</title><rect x="494.3" y="1861" width="0.2" height="15.0" fill="rgb(242,158,35)" rx="2" ry="2" />
<text  x="497.26" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::head (15,122,030,754 samples, 1.11%)</title><rect x="135.6" y="1701" width="13.1" height="15.0" fill="rgb(228,67,29)" rx="2" ry="2" />
<text  x="138.58" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2,748,069,157 samples, 0.20%)</title><rect x="783.1" y="1845" width="2.4" height="15.0" fill="rgb(206,157,33)" rx="2" ry="2" />
<text  x="786.11" y="1855.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (400,258,663 samples, 0.03%)</title><rect x="858.6" y="1829" width="0.4" height="15.0" fill="rgb(211,195,27)" rx="2" ry="2" />
<text  x="861.64" y="1839.5" ></text>
</g>
<g >
<title>MMap::Map (341,779,397 samples, 0.03%)</title><rect x="1042.2" y="2021" width="0.3" height="15.0" fill="rgb(230,179,30)" rx="2" ry="2" />
<text  x="1045.16" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (72,730,131,697 samples, 5.35%)</title><rect x="1097.1" y="1973" width="63.0" height="15.0" fill="rgb(218,124,45)" rx="2" ry="2" />
<text  x="1100.06" y="1983.5" >folly:..</text>
</g>
<g >
<title>round_and_return (2,953,336,148 samples, 0.22%)</title><rect x="948.7" y="2021" width="2.6" height="15.0" fill="rgb(207,119,6)" rx="2" ry="2" />
<text  x="951.71" y="2031.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (2,474,765,626 samples, 0.18%)</title><rect x="310.3" y="1589" width="2.2" height="15.0" fill="rgb(235,121,38)" rx="2" ry="2" />
<text  x="313.31" y="1599.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (167,836,945 samples, 0.01%)</title><rect x="283.8" y="1589" width="0.1" height="15.0" fill="rgb(211,158,5)" rx="2" ry="2" />
<text  x="286.76" y="1599.5" ></text>
</g>
<g >
<title>__schedule (474,024,768 samples, 0.03%)</title><rect x="1160.4" y="1877" width="0.4" height="15.0" fill="rgb(250,70,6)" rx="2" ry="2" />
<text  x="1163.43" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (8,834,574,024 samples, 0.65%)</title><rect x="749.7" y="1829" width="7.6" height="15.0" fill="rgb(254,65,14)" rx="2" ry="2" />
<text  x="752.67" y="1839.5" ></text>
</g>
<g >
<title>____wcstod_l_internal (1,505,454,313 samples, 0.11%)</title><rect x="1085.0" y="2037" width="1.3" height="15.0" fill="rgb(230,114,45)" rx="2" ry="2" />
<text  x="1087.95" y="2047.5" ></text>
</g>
<g >
<title>rmqueue (370,491,546 samples, 0.03%)</title><rect x="970.6" y="1845" width="0.4" height="15.0" fill="rgb(249,183,14)" rx="2" ry="2" />
<text  x="973.64" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (6,042,333,472 samples, 0.44%)</title><rect x="1065.8" y="2021" width="5.3" height="15.0" fill="rgb(234,159,11)" rx="2" ry="2" />
<text  x="1068.83" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (62,654,378,146 samples, 4.61%)</title><rect x="792.8" y="1893" width="54.4" height="15.0" fill="rgb(208,189,30)" rx="2" ry="2" />
<text  x="795.83" y="1903.5" >std::..</text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1925" width="0.2" height="15.0" fill="rgb(224,44,16)" rx="2" ry="2" />
<text  x="1048.93" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (660,419,401 samples, 0.05%)</title><rect x="201.6" y="1717" width="0.5" height="15.0" fill="rgb(228,34,24)" rx="2" ry="2" />
<text  x="204.57" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (146,161,161 samples, 0.01%)</title><rect x="768.5" y="1861" width="0.1" height="15.0" fill="rgb(238,63,52)" rx="2" ry="2" />
<text  x="771.45" y="1871.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (252,777,005 samples, 0.02%)</title><rect x="1050.5" y="2021" width="0.3" height="15.0" fill="rgb(213,195,17)" rx="2" ry="2" />
<text  x="1053.55" y="2031.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (1,049,550,843 samples, 0.08%)</title><rect x="269.8" y="1653" width="0.9" height="15.0" fill="rgb(223,109,44)" rx="2" ry="2" />
<text  x="272.76" y="1663.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::_M_max_size (163,719,564 samples, 0.01%)</title><rect x="75.9" y="1653" width="0.2" height="15.0" fill="rgb(242,29,20)" rx="2" ry="2" />
<text  x="78.93" y="1663.5" ></text>
</g>
<g >
<title>do_group_exit (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="1989" width="0.7" height="15.0" fill="rgb(209,180,15)" rx="2" ry="2" />
<text  x="1090.95" y="1999.5" ></text>
</g>
<g >
<title>__wmemset_chk (401,627,195 samples, 0.03%)</title><rect x="1092.6" y="2021" width="0.3" height="15.0" fill="rgb(245,49,36)" rx="2" ry="2" />
<text  x="1095.57" y="2031.5" ></text>
</g>
<g >
<title>__strncmp_sse42 (978,897,923 samples, 0.07%)</title><rect x="859.3" y="1829" width="0.8" height="15.0" fill="rgb(250,162,12)" rx="2" ry="2" />
<text  x="862.26" y="1839.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (348,261,594 samples, 0.03%)</title><rect x="1071.2" y="2021" width="0.3" height="15.0" fill="rgb(224,13,13)" rx="2" ry="2" />
<text  x="1074.24" y="2031.5" ></text>
</g>
<g >
<title>operator new (123,416,016 samples, 0.01%)</title><rect x="72.9" y="1669" width="0.1" height="15.0" fill="rgb(249,120,20)" rx="2" ry="2" />
<text  x="75.85" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (42,742,244,438 samples, 3.14%)</title><rect x="798.7" y="1861" width="37.0" height="15.0" fill="rgb(228,0,12)" rx="2" ry="2" />
<text  x="801.67" y="1871.5" >std..</text>
</g>
<g >
<title>_raw_spin_lock_irq (217,384,146 samples, 0.02%)</title><rect x="963.8" y="1941" width="0.2" height="15.0" fill="rgb(248,126,15)" rx="2" ry="2" />
<text  x="966.84" y="1951.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::deallocate (192,665,933 samples, 0.01%)</title><rect x="290.4" y="1557" width="0.2" height="15.0" fill="rgb(213,153,0)" rx="2" ry="2" />
<text  x="293.40" y="1567.5" ></text>
</g>
<g >
<title>folly::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::operator (475,965,420 samples, 0.03%)</title><rect x="368.7" y="1813" width="0.4" height="15.0" fill="rgb(213,128,8)" rx="2" ry="2" />
<text  x="371.70" y="1823.5" ></text>
</g>
<g >
<title>_fini (719,135,536 samples, 0.05%)</title><rect x="1067.6" y="2005" width="0.6" height="15.0" fill="rgb(243,87,37)" rx="2" ry="2" />
<text  x="1070.60" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::getItem (233,116,039 samples, 0.02%)</title><rect x="488.0" y="1829" width="0.2" height="15.0" fill="rgb(225,224,12)" rx="2" ry="2" />
<text  x="491.00" y="1839.5" ></text>
</g>
<g >
<title>__divtf3 (993,530,434 samples, 0.07%)</title><rect x="1071.7" y="2021" width="0.9" height="15.0" fill="rgb(240,11,49)" rx="2" ry="2" />
<text  x="1074.73" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (366,672,450 samples, 0.03%)</title><rect x="745.6" y="1797" width="0.3" height="15.0" fill="rgb(232,111,0)" rx="2" ry="2" />
<text  x="748.59" y="1807.5" ></text>
</g>
<g >
<title>[snap] (162,064,143 samples, 0.01%)</title><rect x="1163.4" y="1829" width="0.1" height="15.0" fill="rgb(219,29,40)" rx="2" ry="2" />
<text  x="1166.41" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (776,865,594 samples, 0.06%)</title><rect x="761.0" y="1877" width="0.7" height="15.0" fill="rgb(231,130,33)" rx="2" ry="2" />
<text  x="764.04" y="1887.5" ></text>
</g>
<g >
<title>acpi_idle_enter (14,653,537,706 samples, 1.08%)</title><rect x="1166.0" y="1909" width="12.8" height="15.0" fill="rgb(253,226,29)" rx="2" ry="2" />
<text  x="1169.04" y="1919.5" ></text>
</g>
<g >
<title>find_busiest_queue (230,330,373 samples, 0.02%)</title><rect x="1027.9" y="1829" width="0.2" height="15.0" fill="rgb(247,150,28)" rx="2" ry="2" />
<text  x="1030.86" y="1839.5" ></text>
</g>
<g >
<title>folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (2,803,244,398 samples, 0.21%)</title><rect x="28.5" y="1877" width="2.4" height="15.0" fill="rgb(210,131,49)" rx="2" ry="2" />
<text  x="31.49" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (2,465,304,683 samples, 0.18%)</title><rect x="65.1" y="1701" width="2.1" height="15.0" fill="rgb(249,223,31)" rx="2" ry="2" />
<text  x="68.06" y="1711.5" ></text>
</g>
<g >
<title>DoAutomaticRemove (495,189,599 samples, 0.04%)</title><rect x="1063.0" y="2021" width="0.4" height="15.0" fill="rgb(219,79,39)" rx="2" ry="2" />
<text  x="1065.97" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="213" width="0.2" height="15.0" fill="rgb(220,16,28)" rx="2" ry="2" />
<text  x="1048.93" y="223.5" ></text>
</g>
<g >
<title>apt-extracttemp (1,856,942,561 samples, 0.14%)</title><rect x="1059.9" y="2053" width="1.6" height="15.0" fill="rgb(232,9,15)" rx="2" ry="2" />
<text  x="1062.90" y="2063.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (22,609,727,151 samples, 1.66%)</title><rect x="1165.1" y="1973" width="19.6" height="15.0" fill="rgb(236,89,6)" rx="2" ry="2" />
<text  x="1168.10" y="1983.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned int, int&gt; (376,971,375 samples, 0.03%)</title><rect x="239.1" y="1573" width="0.3" height="15.0" fill="rgb(237,152,11)" rx="2" ry="2" />
<text  x="242.11" y="1583.5" ></text>
</g>
<g >
<title>folly::UnboundedBlockingQueue&lt;folly::CPUThreadPoolExecutor::CPUTask, folly::LifoSemImpl&lt;std::atomic, folly::SaturatingSemaphore&lt;true, std::atomic&gt; &gt; &gt;::try_take_for (987,832,625 samples, 0.07%)</title><rect x="1160.1" y="1989" width="0.9" height="15.0" fill="rgb(219,21,46)" rx="2" ry="2" />
<text  x="1163.15" y="1999.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (780,541,478 samples, 0.06%)</title><rect x="1188.9" y="1861" width="0.7" height="15.0" fill="rgb(210,204,51)" rx="2" ry="2" />
<text  x="1191.90" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::getItem (11,655,659,740 samples, 0.86%)</title><rect x="50.0" y="1797" width="10.1" height="15.0" fill="rgb(208,49,14)" rx="2" ry="2" />
<text  x="53.00" y="1807.5" ></text>
</g>
<g >
<title>pagecache_get_page (190,233,786 samples, 0.01%)</title><rect x="1074.0" y="1797" width="0.1" height="15.0" fill="rgb(219,111,51)" rx="2" ry="2" />
<text  x="1076.95" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (5,540,253,183 samples, 0.41%)</title><rect x="740.5" y="1781" width="4.8" height="15.0" fill="rgb(243,40,54)" rx="2" ry="2" />
<text  x="743.45" y="1791.5" ></text>
</g>
<g >
<title>futex_wait_queue (1,617,492,548 samples, 0.12%)</title><rect x="412.4" y="1669" width="1.4" height="15.0" fill="rgb(207,23,14)" rx="2" ry="2" />
<text  x="415.40" y="1679.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1,894,335,783 samples, 0.14%)</title><rect x="1086.3" y="2037" width="1.6" height="15.0" fill="rgb(238,56,27)" rx="2" ry="2" />
<text  x="1089.28" y="2047.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,216,025,488 samples, 0.31%)</title><rect x="967.5" y="1925" width="3.6" height="15.0" fill="rgb(210,16,49)" rx="2" ry="2" />
<text  x="970.47" y="1935.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;unsigned char&gt;::allocate (611,729,614 samples, 0.04%)</title><rect x="488.8" y="1861" width="0.5" height="15.0" fill="rgb(239,72,37)" rx="2" ry="2" />
<text  x="491.81" y="1871.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (765,975,331 samples, 0.06%)</title><rect x="1184.8" y="1941" width="0.7" height="15.0" fill="rgb(249,80,45)" rx="2" ry="2" />
<text  x="1187.80" y="1951.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (260,918,776 samples, 0.02%)</title><rect x="224.3" y="821" width="0.2" height="15.0" fill="rgb(242,155,43)" rx="2" ry="2" />
<text  x="227.30" y="831.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (226,538,761 samples, 0.02%)</title><rect x="1179.1" y="1861" width="0.2" height="15.0" fill="rgb(211,148,49)" rx="2" ry="2" />
<text  x="1182.09" y="1871.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (902,651,879 samples, 0.07%)</title><rect x="48.8" y="1797" width="0.7" height="15.0" fill="rgb(221,15,39)" rx="2" ry="2" />
<text  x="51.75" y="1807.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,104,570,987 samples, 0.15%)</title><rect x="621.2" y="1813" width="1.8" height="15.0" fill="rgb(207,39,28)" rx="2" ry="2" />
<text  x="624.22" y="1823.5" ></text>
</g>
<g >
<title>pick_next_task_idle (173,877,504 samples, 0.01%)</title><rect x="1028.8" y="1877" width="0.1" height="15.0" fill="rgb(237,110,31)" rx="2" ry="2" />
<text  x="1031.76" y="1887.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (488,660,365 samples, 0.04%)</title><rect x="486.6" y="1845" width="0.4" height="15.0" fill="rgb(243,71,47)" rx="2" ry="2" />
<text  x="489.56" y="1855.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (204,958,005 samples, 0.02%)</title><rect x="1184.3" y="1909" width="0.1" height="15.0" fill="rgb(225,27,22)" rx="2" ry="2" />
<text  x="1187.26" y="1919.5" ></text>
</g>
<g >
<title>__fwprintf_chk (267,156,434 samples, 0.02%)</title><rect x="1161.2" y="2021" width="0.3" height="15.0" fill="rgb(207,120,40)" rx="2" ry="2" />
<text  x="1164.23" y="2031.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (495,444,739 samples, 0.04%)</title><rect x="321.1" y="1557" width="0.4" height="15.0" fill="rgb(228,154,52)" rx="2" ry="2" />
<text  x="324.06" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (145,209,652 samples, 0.01%)</title><rect x="1090.1" y="1989" width="0.1" height="15.0" fill="rgb(251,130,41)" rx="2" ry="2" />
<text  x="1093.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1717" width="0.2" height="15.0" fill="rgb(240,105,13)" rx="2" ry="2" />
<text  x="1048.93" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (1,204,477,060 samples, 0.09%)</title><rect x="292.4" y="1621" width="1.0" height="15.0" fill="rgb(250,138,25)" rx="2" ry="2" />
<text  x="295.38" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (1,069,201,697 samples, 0.08%)</title><rect x="90.7" y="1717" width="0.9" height="15.0" fill="rgb(244,220,2)" rx="2" ry="2" />
<text  x="93.72" y="1727.5" ></text>
</g>
<g >
<title>ksys_write (162,660,798 samples, 0.01%)</title><rect x="1092.4" y="1957" width="0.2" height="15.0" fill="rgb(226,153,39)" rx="2" ry="2" />
<text  x="1095.43" y="1967.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (146,301,942 samples, 0.01%)</title><rect x="87.2" y="1685" width="0.1" height="15.0" fill="rgb(205,112,15)" rx="2" ry="2" />
<text  x="90.17" y="1695.5" ></text>
</g>
<g >
<title>membarrier_private_expedited (117,815,369 samples, 0.01%)</title><rect x="1097.1" y="1845" width="0.1" height="15.0" fill="rgb(239,132,27)" rx="2" ry="2" />
<text  x="1100.07" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (166,580,662 samples, 0.01%)</title><rect x="717.9" y="1813" width="0.1" height="15.0" fill="rgb(235,185,29)" rx="2" ry="2" />
<text  x="720.87" y="1823.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (118,441,299 samples, 0.01%)</title><rect x="709.3" y="1781" width="0.1" height="15.0" fill="rgb(252,30,18)" rx="2" ry="2" />
<text  x="712.28" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (217,559,854 samples, 0.02%)</title><rect x="1078.9" y="2021" width="0.2" height="15.0" fill="rgb(250,115,6)" rx="2" ry="2" />
<text  x="1081.88" y="2031.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (457,702,900 samples, 0.03%)</title><rect x="594.7" y="1813" width="0.4" height="15.0" fill="rgb(230,121,1)" rx="2" ry="2" />
<text  x="597.72" y="1823.5" ></text>
</g>
<g >
<title>PipedFileFdPrivate::~PipedFileFdPrivate (307,136,550 samples, 0.02%)</title><rect x="1064.1" y="2021" width="0.3" height="15.0" fill="rgb(219,128,28)" rx="2" ry="2" />
<text  x="1067.09" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::getItem (11,932,663,960 samples, 0.88%)</title><rect x="49.8" y="1813" width="10.3" height="15.0" fill="rgb(238,90,21)" rx="2" ry="2" />
<text  x="52.76" y="1823.5" ></text>
</g>
<g >
<title>update_rq_clock (156,561,166 samples, 0.01%)</title><rect x="1181.9" y="1813" width="0.2" height="15.0" fill="rgb(237,45,7)" rx="2" ry="2" />
<text  x="1184.95" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~_Deque_base (6,298,083,728 samples, 0.46%)</title><rect x="285.5" y="1621" width="5.4" height="15.0" fill="rgb(232,62,34)" rx="2" ry="2" />
<text  x="288.47" y="1631.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrTableDeleter::operator (125,934,052 samples, 0.01%)</title><rect x="224.3" y="501" width="0.1" height="15.0" fill="rgb(247,101,13)" rx="2" ry="2" />
<text  x="227.32" y="511.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (19,940,400,304 samples, 1.47%)</title><rect x="1165.8" y="1925" width="17.3" height="15.0" fill="rgb(228,8,31)" rx="2" ry="2" />
<text  x="1168.83" y="1935.5" ></text>
</g>
<g >
<title>folly::CPUThreadPoolExecutor::threadRun (1,036,937,641,690 samples, 76.22%)</title><rect x="10.0" y="2005" width="899.4" height="15.0" fill="rgb(242,146,51)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" >folly::CPUThreadPoolExecutor::threadRun</text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (294,922,460,262 samples, 21.68%)</title><rect x="95.9" y="1749" width="255.8" height="15.0" fill="rgb(234,226,5)" rx="2" ry="2" />
<text  x="98.93" y="1759.5" >folly::hazptr_obj_cohort&lt;std::atom..</text>
</g>
<g >
<title>scheduler_tick (200,237,294 samples, 0.01%)</title><rect x="1178.9" y="1781" width="0.2" height="15.0" fill="rgb(225,167,39)" rx="2" ry="2" />
<text  x="1181.89" y="1791.5" ></text>
</g>
<g >
<title>schedule_idle (3,023,855,819 samples, 0.22%)</title><rect x="1185.7" y="1973" width="2.6" height="15.0" fill="rgb(213,23,5)" rx="2" ry="2" />
<text  x="1188.70" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1077" width="0.2" height="15.0" fill="rgb(237,110,29)" rx="2" ry="2" />
<text  x="1048.93" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (1,346,061,398 samples, 0.10%)</title><rect x="84.8" y="1701" width="1.2" height="15.0" fill="rgb(216,30,51)" rx="2" ry="2" />
<text  x="87.81" y="1711.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (1,115,763,218 samples, 0.08%)</title><rect x="598.7" y="1797" width="1.0" height="15.0" fill="rgb(211,179,22)" rx="2" ry="2" />
<text  x="601.73" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash (367,960,689 samples, 0.03%)</title><rect x="1104.5" y="1749" width="0.3" height="15.0" fill="rgb(237,135,43)" rx="2" ry="2" />
<text  x="1107.47" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_list&lt;std::atomic&gt;::push (2,420,797,568 samples, 0.18%)</title><rect x="1128.0" y="1893" width="2.1" height="15.0" fill="rgb(247,115,32)" rx="2" ry="2" />
<text  x="1130.99" y="1903.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (214,647,938 samples, 0.02%)</title><rect x="778.3" y="1845" width="0.2" height="15.0" fill="rgb(227,173,41)" rx="2" ry="2" />
<text  x="781.35" y="1855.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (149,122,099 samples, 0.01%)</title><rect x="414.1" y="1701" width="0.1" height="15.0" fill="rgb(212,82,12)" rx="2" ry="2" />
<text  x="417.06" y="1711.5" ></text>
</g>
<g >
<title>std::operator== (646,237,545 samples, 0.05%)</title><rect x="307.9" y="1621" width="0.5" height="15.0" fill="rgb(246,106,19)" rx="2" ry="2" />
<text  x="310.89" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_v (539,187,167 samples, 0.04%)</title><rect x="1106.8" y="1765" width="0.4" height="15.0" fill="rgb(206,161,11)" rx="2" ry="2" />
<text  x="1109.78" y="1775.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (916,886,543 samples, 0.07%)</title><rect x="1086.4" y="1941" width="0.8" height="15.0" fill="rgb(225,206,27)" rx="2" ry="2" />
<text  x="1089.37" y="1951.5" ></text>
</g>
<g >
<title>__alloc_pages (2,120,870,694 samples, 0.16%)</title><rect x="969.2" y="1877" width="1.8" height="15.0" fill="rgb(230,48,15)" rx="2" ry="2" />
<text  x="972.16" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1669" width="0.2" height="15.0" fill="rgb(210,63,42)" rx="2" ry="2" />
<text  x="1048.93" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::estimateSpaceToReserve&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (203,882,167 samples, 0.01%)</title><rect x="522.5" y="1861" width="0.2" height="15.0" fill="rgb(212,68,10)" rx="2" ry="2" />
<text  x="525.55" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_delete_immutable_descendants (251,594,364 samples, 0.02%)</title><rect x="225.5" y="1477" width="0.3" height="15.0" fill="rgb(232,168,47)" rx="2" ry="2" />
<text  x="228.54" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,952,556,180 samples, 0.14%)</title><rect x="412.3" y="1717" width="1.7" height="15.0" fill="rgb(238,1,2)" rx="2" ry="2" />
<text  x="415.33" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_map (2,283,011,617 samples, 0.17%)</title><rect x="315.6" y="1589" width="2.0" height="15.0" fill="rgb(236,84,8)" rx="2" ry="2" />
<text  x="318.63" y="1599.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (201,448,638 samples, 0.01%)</title><rect x="1022.7" y="1893" width="0.2" height="15.0" fill="rgb(228,192,42)" rx="2" ry="2" />
<text  x="1025.69" y="1903.5" ></text>
</g>
<g >
<title>operator delete (334,429,404 samples, 0.02%)</title><rect x="267.5" y="1621" width="0.2" height="15.0" fill="rgb(205,151,1)" rx="2" ry="2" />
<text  x="270.46" y="1631.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,086,152,959 samples, 0.08%)</title><rect x="224.1" y="1445" width="1.0" height="15.0" fill="rgb(214,90,13)" rx="2" ry="2" />
<text  x="227.14" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,587,160,291 samples, 0.19%)</title><rect x="824.2" y="1813" width="2.2" height="15.0" fill="rgb(221,59,41)" rx="2" ry="2" />
<text  x="827.17" y="1823.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (214,017,651 samples, 0.02%)</title><rect x="971.2" y="1957" width="0.2" height="15.0" fill="rgb(245,37,27)" rx="2" ry="2" />
<text  x="974.19" y="1967.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;void const*, std::hash&lt;void const*&gt;, std::equal_to&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::count (12,411,352,227 samples, 0.91%)</title><rect x="1099.3" y="1877" width="10.8" height="15.0" fill="rgb(232,55,25)" rx="2" ry="2" />
<text  x="1102.31" y="1887.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (7,739,762,975 samples, 0.57%)</title><rect x="409.7" y="1813" width="6.7" height="15.0" fill="rgb(245,224,46)" rx="2" ry="2" />
<text  x="412.68" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (11,800,673,663 samples, 0.87%)</title><rect x="853.3" y="1877" width="10.2" height="15.0" fill="rgb(227,3,9)" rx="2" ry="2" />
<text  x="856.25" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_domain&lt;std::atomic&gt;::add_count (122,584,685 samples, 0.01%)</title><rect x="184.4" y="1685" width="0.1" height="15.0" fill="rgb(228,34,0)" rx="2" ry="2" />
<text  x="187.38" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1365" width="0.2" height="15.0" fill="rgb(232,94,32)" rx="2" ry="2" />
<text  x="1048.93" y="1375.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (916,886,543 samples, 0.07%)</title><rect x="1086.4" y="1925" width="0.8" height="15.0" fill="rgb(210,72,48)" rx="2" ry="2" />
<text  x="1089.37" y="1935.5" ></text>
</g>
<g >
<title>dput (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1845" width="0.1" height="15.0" fill="rgb(217,66,20)" rx="2" ry="2" />
<text  x="1080.14" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deallocate (910,244,575 samples, 0.07%)</title><rect x="289.8" y="1573" width="0.8" height="15.0" fill="rgb(240,196,4)" rx="2" ry="2" />
<text  x="292.78" y="1583.5" ></text>
</g>
<g >
<title>ttwu_do_activate (703,870,524 samples, 0.05%)</title><rect x="1184.8" y="1925" width="0.6" height="15.0" fill="rgb(209,41,52)" rx="2" ry="2" />
<text  x="1187.82" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (877,559,622 samples, 0.06%)</title><rect x="1073.7" y="1957" width="0.8" height="15.0" fill="rgb(207,164,35)" rx="2" ry="2" />
<text  x="1076.71" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (294,102,100 samples, 0.02%)</title><rect x="1081.1" y="2005" width="0.2" height="15.0" fill="rgb(205,174,38)" rx="2" ry="2" />
<text  x="1084.09" y="2015.5" ></text>
</g>
<g >
<title>getnameinfo (37,379,183,729 samples, 2.75%)</title><rect x="1006.4" y="2037" width="32.4" height="15.0" fill="rgb(234,214,10)" rx="2" ry="2" />
<text  x="1009.36" y="2047.5" >ge..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,010,481,828 samples, 0.07%)</title><rect x="861.6" y="1813" width="0.9" height="15.0" fill="rgb(233,83,34)" rx="2" ry="2" />
<text  x="864.65" y="1823.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (201,569,197 samples, 0.01%)</title><rect x="475.2" y="1829" width="0.2" height="15.0" fill="rgb(210,142,4)" rx="2" ry="2" />
<text  x="478.22" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (5,625,567,595 samples, 0.41%)</title><rect x="1090.8" y="2037" width="4.8" height="15.0" fill="rgb(228,53,44)" rx="2" ry="2" />
<text  x="1093.77" y="2047.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (16,250,907,556 samples, 1.19%)</title><rect x="245.3" y="1509" width="14.1" height="15.0" fill="rgb(226,194,24)" rx="2" ry="2" />
<text  x="248.35" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,009,948,308 samples, 0.15%)</title><rect x="873.3" y="1845" width="1.7" height="15.0" fill="rgb(240,205,19)" rx="2" ry="2" />
<text  x="876.27" y="1855.5" ></text>
</g>
<g >
<title>folly::CPUThreadPoolExecutor::threadRun (73,722,484,206 samples, 5.42%)</title><rect x="1097.1" y="2005" width="63.9" height="15.0" fill="rgb(244,143,16)" rx="2" ry="2" />
<text  x="1100.06" y="2015.5" >folly::..</text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (1,150,263,086 samples, 0.08%)</title><rect x="448.4" y="1717" width="1.0" height="15.0" fill="rgb(215,202,49)" rx="2" ry="2" />
<text  x="451.43" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned long&amp;&gt;::_M_head (687,314,069 samples, 0.05%)</title><rect x="515.3" y="1813" width="0.6" height="15.0" fill="rgb(239,58,26)" rx="2" ry="2" />
<text  x="518.28" y="1823.5" ></text>
</g>
<g >
<title>wake_up_q (3,195,444,172 samples, 0.23%)</title><rect x="1034.7" y="1925" width="2.7" height="15.0" fill="rgb(214,51,18)" rx="2" ry="2" />
<text  x="1037.66" y="1935.5" ></text>
</g>
<g >
<title>__vswprintf_chk (389,772,979 samples, 0.03%)</title><rect x="1161.5" y="2021" width="0.3" height="15.0" fill="rgb(252,72,51)" rx="2" ry="2" />
<text  x="1164.49" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::mutex&gt; (266,422,758 samples, 0.02%)</title><rect x="410.6" y="1797" width="0.2" height="15.0" fill="rgb(232,128,40)" rx="2" ry="2" />
<text  x="413.60" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (128,627,083 samples, 0.01%)</title><rect x="464.9" y="1765" width="0.1" height="15.0" fill="rgb(218,139,16)" rx="2" ry="2" />
<text  x="467.90" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_read (342,674,394 samples, 0.03%)</title><rect x="1091.9" y="1973" width="0.3" height="15.0" fill="rgb(231,125,45)" rx="2" ry="2" />
<text  x="1094.89" y="1983.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::allocator (182,987,157 samples, 0.01%)</title><rect x="485.4" y="1845" width="0.2" height="15.0" fill="rgb(252,118,25)" rx="2" ry="2" />
<text  x="488.40" y="1855.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (122,789,725 samples, 0.01%)</title><rect x="858.5" y="1829" width="0.1" height="15.0" fill="rgb(236,156,24)" rx="2" ry="2" />
<text  x="861.53" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::push_safe_obj (18,301,364,598 samples, 1.35%)</title><rect x="1144.1" y="1909" width="15.8" height="15.0" fill="rgb(220,39,27)" rx="2" ry="2" />
<text  x="1147.06" y="1919.5" ></text>
</g>
<g >
<title>process_long_option (116,077,920 samples, 0.01%)</title><rect x="1095.3" y="2021" width="0.1" height="15.0" fill="rgb(242,161,29)" rx="2" ry="2" />
<text  x="1098.33" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::HazptrTableDeleter::operator (269,908,043 samples, 0.02%)</title><rect x="224.3" y="885" width="0.2" height="15.0" fill="rgb(234,73,29)" rx="2" ry="2" />
<text  x="227.30" y="895.5" ></text>
</g>
<g >
<title>folly::detail::getLastElement&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (156,921,184 samples, 0.01%)</title><rect x="522.7" y="1861" width="0.2" height="15.0" fill="rgb(228,172,43)" rx="2" ry="2" />
<text  x="525.73" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (4,926,439,088 samples, 0.36%)</title><rect x="628.0" y="1797" width="4.2" height="15.0" fill="rgb(242,9,36)" rx="2" ry="2" />
<text  x="630.96" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_non_empty_list (810,380,507 samples, 0.06%)</title><rect x="222.7" y="1525" width="0.7" height="15.0" fill="rgb(225,58,6)" rx="2" ry="2" />
<text  x="225.74" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_node (1,329,323,602 samples, 0.10%)</title><rect x="329.2" y="1589" width="1.1" height="15.0" fill="rgb(218,202,14)" rx="2" ry="2" />
<text  x="332.20" y="1599.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (238,213,786 samples, 0.02%)</title><rect x="413.3" y="1541" width="0.2" height="15.0" fill="rgb(206,129,9)" rx="2" ry="2" />
<text  x="416.26" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="885" width="0.2" height="15.0" fill="rgb(232,85,7)" rx="2" ry="2" />
<text  x="1048.93" y="895.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_map (2,550,909,458 samples, 0.19%)</title><rect x="276.8" y="1589" width="2.2" height="15.0" fill="rgb(229,156,19)" rx="2" ry="2" />
<text  x="279.78" y="1599.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (304,107,797 samples, 0.02%)</title><rect x="849.0" y="1861" width="0.3" height="15.0" fill="rgb(227,77,3)" rx="2" ry="2" />
<text  x="852.03" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1445" width="0.2" height="15.0" fill="rgb(212,179,38)" rx="2" ry="2" />
<text  x="1048.93" y="1455.5" ></text>
</g>
<g >
<title>std::allocator&lt;unsigned char&gt;::~allocator (165,155,636 samples, 0.01%)</title><rect x="268.5" y="1637" width="0.1" height="15.0" fill="rgb(250,130,11)" rx="2" ry="2" />
<text  x="271.50" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (227,701,930 samples, 0.02%)</title><rect x="87.0" y="1685" width="0.2" height="15.0" fill="rgb(242,134,17)" rx="2" ry="2" />
<text  x="89.97" y="1695.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (3,615,569,848 samples, 0.27%)</title><rect x="888.1" y="1813" width="3.2" height="15.0" fill="rgb(252,72,5)" rx="2" ry="2" />
<text  x="891.13" y="1823.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (307,780,085 samples, 0.02%)</title><rect x="965.8" y="1813" width="0.3" height="15.0" fill="rgb(247,7,23)" rx="2" ry="2" />
<text  x="968.81" y="1823.5" ></text>
</g>
<g >
<title>update_blocked_averages (498,419,577 samples, 0.04%)</title><rect x="1028.3" y="1845" width="0.4" height="15.0" fill="rgb(239,105,23)" rx="2" ry="2" />
<text  x="1031.29" y="1855.5" ></text>
</g>
<g >
<title>run_rebalance_domains (150,858,966 samples, 0.01%)</title><rect x="1179.1" y="1829" width="0.2" height="15.0" fill="rgb(243,38,30)" rx="2" ry="2" />
<text  x="1182.14" y="1839.5" ></text>
</g>
<g >
<title>std::operator&amp; (599,816,147 samples, 0.04%)</title><rect x="164.9" y="1685" width="0.6" height="15.0" fill="rgb(225,227,47)" rx="2" ry="2" />
<text  x="167.94" y="1695.5" ></text>
</g>
<g >
<title>find_busiest_group (378,299,198 samples, 0.03%)</title><rect x="965.8" y="1845" width="0.3" height="15.0" fill="rgb(205,55,25)" rx="2" ry="2" />
<text  x="968.76" y="1855.5" ></text>
</g>
<g >
<title>ksys_read (502,852,770 samples, 0.04%)</title><rect x="1072.6" y="1957" width="0.4" height="15.0" fill="rgb(239,58,15)" rx="2" ry="2" />
<text  x="1075.60" y="1967.5" ></text>
</g>
<g >
<title>folly::toAppendFit&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (278,513,246,774 samples, 20.47%)</title><rect x="519.0" y="1877" width="241.6" height="15.0" fill="rgb(213,199,34)" rx="2" ry="2" />
<text  x="521.99" y="1887.5" >folly::toAppendFit&lt;unsigned long..</text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (328,069,306 samples, 0.02%)</title><rect x="80.2" y="1701" width="0.3" height="15.0" fill="rgb(223,148,1)" rx="2" ry="2" />
<text  x="83.20" y="1711.5" ></text>
</g>
<g >
<title>run_builtin (232,622,597 samples, 0.02%)</title><rect x="1162.7" y="2005" width="0.2" height="15.0" fill="rgb(235,136,9)" rx="2" ry="2" />
<text  x="1165.74" y="2015.5" ></text>
</g>
<g >
<title>__vfwprintf_chk (885,298,324 samples, 0.07%)</title><rect x="1073.7" y="1989" width="0.8" height="15.0" fill="rgb(223,82,38)" rx="2" ry="2" />
<text  x="1076.71" y="1999.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (179,920,794 samples, 0.01%)</title><rect x="224.3" y="581" width="0.2" height="15.0" fill="rgb(238,150,19)" rx="2" ry="2" />
<text  x="227.32" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1,379,668,308 samples, 0.10%)</title><rect x="589.3" y="1813" width="1.2" height="15.0" fill="rgb(217,94,34)" rx="2" ry="2" />
<text  x="592.34" y="1823.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (1,114,367,536 samples, 0.08%)</title><rect x="62.9" y="1765" width="0.9" height="15.0" fill="rgb(219,211,3)" rx="2" ry="2" />
<text  x="65.88" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (331,852,713 samples, 0.02%)</title><rect x="632.5" y="1813" width="0.3" height="15.0" fill="rgb(251,118,16)" rx="2" ry="2" />
<text  x="635.53" y="1823.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,086,152,959 samples, 0.08%)</title><rect x="224.1" y="1493" width="1.0" height="15.0" fill="rgb(254,125,52)" rx="2" ry="2" />
<text  x="227.14" y="1503.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (4,875,950,070 samples, 0.36%)</title><rect x="222.5" y="1605" width="4.2" height="15.0" fill="rgb(235,138,13)" rx="2" ry="2" />
<text  x="225.49" y="1615.5" ></text>
</g>
<g >
<title>__switch_to_asm (149,892,806 samples, 0.01%)</title><rect x="1164.5" y="2037" width="0.1" height="15.0" fill="rgb(212,198,37)" rx="2" ry="2" />
<text  x="1167.46" y="2047.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::~_Deque_impl (255,725,824 samples, 0.02%)</title><rect x="83.2" y="1717" width="0.2" height="15.0" fill="rgb(211,42,4)" rx="2" ry="2" />
<text  x="86.16" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (370,732,113 samples, 0.03%)</title><rect x="792.4" y="1893" width="0.3" height="15.0" fill="rgb(209,122,50)" rx="2" ry="2" />
<text  x="795.43" y="1903.5" ></text>
</g>
<g >
<title>clear_page_erms (258,146,976 samples, 0.02%)</title><rect x="947.8" y="1829" width="0.2" height="15.0" fill="rgb(220,27,51)" rx="2" ry="2" />
<text  x="950.80" y="1839.5" ></text>
</g>
<g >
<title>__x64_sys_execve (150,260,330 samples, 0.01%)</title><rect x="1081.2" y="1989" width="0.1" height="15.0" fill="rgb(210,228,43)" rx="2" ry="2" />
<text  x="1084.21" y="1999.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::store (3,425,024,438 samples, 0.25%)</title><rect x="385.6" y="1813" width="3.0" height="15.0" fill="rgb(229,112,51)" rx="2" ry="2" />
<text  x="388.59" y="1823.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (150,260,330 samples, 0.01%)</title><rect x="1081.2" y="1941" width="0.1" height="15.0" fill="rgb(227,57,21)" rx="2" ry="2" />
<text  x="1084.21" y="1951.5" ></text>
</g>
<g >
<title>pkgCacheGenerator::~pkgCacheGenerator (473,634,322 samples, 0.03%)</title><rect x="1053.9" y="1989" width="0.4" height="15.0" fill="rgb(246,98,23)" rx="2" ry="2" />
<text  x="1056.92" y="1999.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (15,957,704,157 samples, 1.17%)</title><rect x="309.1" y="1653" width="13.8" height="15.0" fill="rgb(245,37,36)" rx="2" ry="2" />
<text  x="312.07" y="1663.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (475,735,584 samples, 0.03%)</title><rect x="835.2" y="1845" width="0.4" height="15.0" fill="rgb(207,219,45)" rx="2" ry="2" />
<text  x="838.19" y="1855.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::downgrade_retire_immutable_descendants (34,983,432,677 samples, 2.57%)</title><rect x="61.3" y="1781" width="30.3" height="15.0" fill="rgb(241,89,50)" rx="2" ry="2" />
<text  x="64.31" y="1791.5" >fo..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (9,929,439,798 samples, 0.73%)</title><rect x="823.0" y="1829" width="8.6" height="15.0" fill="rgb(211,111,35)" rx="2" ry="2" />
<text  x="825.96" y="1839.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::release_link (9,314,673,764 samples, 0.68%)</title><rect x="299.1" y="1653" width="8.1" height="15.0" fill="rgb(240,14,34)" rx="2" ry="2" />
<text  x="302.11" y="1663.5" ></text>
</g>
<g >
<title>__update_blocked_fair (271,965,770 samples, 0.02%)</title><rect x="1028.3" y="1829" width="0.2" height="15.0" fill="rgb(221,29,30)" rx="2" ry="2" />
<text  x="1031.31" y="1839.5" ></text>
</g>
<g >
<title>exc_page_fault (11,597,990,384 samples, 0.85%)</title><rect x="963.1" y="2005" width="10.0" height="15.0" fill="rgb(237,54,24)" rx="2" ry="2" />
<text  x="966.09" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (164,835,519 samples, 0.01%)</title><rect x="339.2" y="1685" width="0.2" height="15.0" fill="rgb(244,24,38)" rx="2" ry="2" />
<text  x="342.25" y="1695.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (408,615,927 samples, 0.03%)</title><rect x="259.1" y="1493" width="0.3" height="15.0" fill="rgb(223,23,41)" rx="2" ry="2" />
<text  x="262.09" y="1503.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, bool&amp;&amp;&gt;::_Tuple_impl&lt;bool&gt; (1,187,085,096 samples, 0.09%)</title><rect x="492.5" y="1845" width="1.1" height="15.0" fill="rgb(214,212,27)" rx="2" ry="2" />
<text  x="495.54" y="1855.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (278,307,168 samples, 0.02%)</title><rect x="87.8" y="1669" width="0.2" height="15.0" fill="rgb(237,65,18)" rx="2" ry="2" />
<text  x="90.81" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (182,727,725 samples, 0.01%)</title><rect x="224.7" y="1237" width="0.2" height="15.0" fill="rgb(253,191,45)" rx="2" ry="2" />
<text  x="227.69" y="1247.5" ></text>
</g>
<g >
<title>pick_next_task_fair (231,305,523 samples, 0.02%)</title><rect x="947.0" y="1877" width="0.2" height="15.0" fill="rgb(243,160,28)" rx="2" ry="2" />
<text  x="949.98" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1509" width="0.2" height="15.0" fill="rgb(207,50,12)" rx="2" ry="2" />
<text  x="1048.93" y="1519.5" ></text>
</g>
<g >
<title>call_cpuidle (809,838,948 samples, 0.06%)</title><rect x="1188.9" y="1893" width="0.7" height="15.0" fill="rgb(237,202,33)" rx="2" ry="2" />
<text  x="1191.87" y="1903.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (1,608,530,004 samples, 0.12%)</title><rect x="467.4" y="1749" width="1.4" height="15.0" fill="rgb(239,161,32)" rx="2" ry="2" />
<text  x="470.40" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void const*, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void const*, false&gt; &gt; &gt; &gt; (377,880,512 samples, 0.03%)</title><rect x="1097.4" y="1877" width="0.3" height="15.0" fill="rgb(229,127,52)" rx="2" ry="2" />
<text  x="1100.38" y="1887.5" ></text>
</g>
<g >
<title>std::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::load (665,098,527 samples, 0.05%)</title><rect x="1087.3" y="1957" width="0.6" height="15.0" fill="rgb(234,51,48)" rx="2" ry="2" />
<text  x="1090.32" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (219,349,909 samples, 0.02%)</title><rect x="795.9" y="1877" width="0.2" height="15.0" fill="rgb(213,177,44)" rx="2" ry="2" />
<text  x="798.87" y="1887.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (339,351,151 samples, 0.02%)</title><rect x="856.2" y="1845" width="0.3" height="15.0" fill="rgb(208,222,12)" rx="2" ry="2" />
<text  x="859.23" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (9,223,379,909 samples, 0.68%)</title><rect x="595.6" y="1813" width="8.0" height="15.0" fill="rgb(222,3,31)" rx="2" ry="2" />
<text  x="598.59" y="1823.5" ></text>
</g>
<g >
<title>__cmd_record.constprop.0 (232,139,455 samples, 0.02%)</title><rect x="1162.7" y="1973" width="0.2" height="15.0" fill="rgb(228,29,27)" rx="2" ry="2" />
<text  x="1165.74" y="1983.5" ></text>
</g>
<g >
<title>hazptr-tpe-0 (73,789,793,470 samples, 5.42%)</title><rect x="1097.1" y="2053" width="64.0" height="15.0" fill="rgb(237,82,27)" rx="2" ry="2" />
<text  x="1100.06" y="2063.5" >hazptr-..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (240,465,317 samples, 0.02%)</title><rect x="1023.8" y="1781" width="0.2" height="15.0" fill="rgb(253,198,9)" rx="2" ry="2" />
<text  x="1026.83" y="1791.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (330,349,615 samples, 0.02%)</title><rect x="1091.9" y="1909" width="0.3" height="15.0" fill="rgb(239,146,16)" rx="2" ry="2" />
<text  x="1094.89" y="1919.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (28,391,243,226 samples, 2.09%)</title><rect x="241.2" y="1573" width="24.6" height="15.0" fill="rgb(213,110,4)" rx="2" ry="2" />
<text  x="244.22" y="1583.5" >s..</text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (1,383,258,310 samples, 0.10%)</title><rect x="568.2" y="1813" width="1.2" height="15.0" fill="rgb(224,41,38)" rx="2" ry="2" />
<text  x="571.19" y="1823.5" ></text>
</g>
<g >
<title>memcpy$plt (161,192,719 samples, 0.01%)</title><rect x="732.3" y="1797" width="0.1" height="15.0" fill="rgb(239,191,50)" rx="2" ry="2" />
<text  x="735.30" y="1807.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (125,719,483 samples, 0.01%)</title><rect x="463.6" y="1749" width="0.1" height="15.0" fill="rgb(251,76,19)" rx="2" ry="2" />
<text  x="466.62" y="1759.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::call_push_links (5,704,654,548 samples, 0.42%)</title><rect x="294.1" y="1653" width="5.0" height="15.0" fill="rgb(230,12,5)" rx="2" ry="2" />
<text  x="297.14" y="1663.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (831,925,917 samples, 0.06%)</title><rect x="861.8" y="1797" width="0.7" height="15.0" fill="rgb(210,222,16)" rx="2" ry="2" />
<text  x="864.76" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_only_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (173,682,449 samples, 0.01%)</title><rect x="212.6" y="1669" width="0.2" height="15.0" fill="rgb(205,92,35)" rx="2" ry="2" />
<text  x="215.62" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1301" width="0.2" height="15.0" fill="rgb(216,35,5)" rx="2" ry="2" />
<text  x="1048.93" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (54,517,309,277 samples, 4.01%)</title><rect x="797.3" y="1877" width="47.2" height="15.0" fill="rgb(244,151,9)" rx="2" ry="2" />
<text  x="800.26" y="1887.5" >std:..</text>
</g>
<g >
<title>__mark_inode_dirty (323,094,013 samples, 0.02%)</title><rect x="1074.2" y="1797" width="0.2" height="15.0" fill="rgb(216,161,54)" rx="2" ry="2" />
<text  x="1077.16" y="1807.5" ></text>
</g>
<g >
<title>schedule (2,887,117,138 samples, 0.21%)</title><rect x="964.1" y="1941" width="2.5" height="15.0" fill="rgb(210,199,47)" rx="2" ry="2" />
<text  x="967.09" y="1951.5" ></text>
</g>
<g >
<title>std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (124,350,287 samples, 0.01%)</title><rect x="277.4" y="1557" width="0.2" height="15.0" fill="rgb(243,147,35)" rx="2" ry="2" />
<text  x="280.44" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (148,593,188 samples, 0.01%)</title><rect x="80.6" y="1717" width="0.1" height="15.0" fill="rgb(233,171,11)" rx="2" ry="2" />
<text  x="83.55" y="1727.5" ></text>
</g>
<g >
<title>MMap::Map (166,924,861 samples, 0.01%)</title><rect x="1041.1" y="2021" width="0.1" height="15.0" fill="rgb(221,118,19)" rx="2" ry="2" />
<text  x="1044.08" y="2031.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (432,012,313 samples, 0.03%)</title><rect x="323.6" y="1605" width="0.3" height="15.0" fill="rgb(222,164,9)" rx="2" ry="2" />
<text  x="326.57" y="1615.5" ></text>
</g>
<g >
<title>generic_perform_write (154,133,551 samples, 0.01%)</title><rect x="1078.9" y="1893" width="0.2" height="15.0" fill="rgb(205,5,3)" rx="2" ry="2" />
<text  x="1081.93" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::find (11,478,999,052 samples, 0.84%)</title><rect x="1100.0" y="1845" width="9.9" height="15.0" fill="rgb(224,23,28)" rx="2" ry="2" />
<text  x="1102.96" y="1855.5" ></text>
</g>
<g >
<title>folly::to_ascii_decimal&lt;20ul&gt; (421,342,650 samples, 0.03%)</title><rect x="759.3" y="1861" width="0.4" height="15.0" fill="rgb(233,22,16)" rx="2" ry="2" />
<text  x="762.32" y="1871.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (613,959,873 samples, 0.05%)</title><rect x="1160.3" y="1925" width="0.6" height="15.0" fill="rgb(223,192,30)" rx="2" ry="2" />
<text  x="1163.34" y="1935.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (490,103,873 samples, 0.04%)</title><rect x="620.8" y="1813" width="0.4" height="15.0" fill="rgb(241,18,2)" rx="2" ry="2" />
<text  x="623.80" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="709" width="0.2" height="15.0" fill="rgb(252,85,12)" rx="2" ry="2" />
<text  x="1048.93" y="719.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (130,093,367 samples, 0.01%)</title><rect x="359.3" y="1781" width="0.1" height="15.0" fill="rgb(252,8,1)" rx="2" ry="2" />
<text  x="362.33" y="1791.5" ></text>
</g>
<g >
<title>operator new (381,641,437 samples, 0.03%)</title><rect x="473.5" y="1829" width="0.3" height="15.0" fill="rgb(249,187,47)" rx="2" ry="2" />
<text  x="476.47" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (581,159,444 samples, 0.04%)</title><rect x="1086.6" y="1829" width="0.5" height="15.0" fill="rgb(240,19,40)" rx="2" ry="2" />
<text  x="1089.64" y="1839.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (368,799,317 samples, 0.03%)</title><rect x="968.7" y="1893" width="0.3" height="15.0" fill="rgb(226,0,43)" rx="2" ry="2" />
<text  x="971.70" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (136,590,719 samples, 0.01%)</title><rect x="1050.3" y="1989" width="0.1" height="15.0" fill="rgb(245,60,11)" rx="2" ry="2" />
<text  x="1053.32" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,201,544,617 samples, 0.16%)</title><rect x="466.9" y="1765" width="1.9" height="15.0" fill="rgb(236,204,14)" rx="2" ry="2" />
<text  x="469.91" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (194,215,877 samples, 0.01%)</title><rect x="1045.9" y="1813" width="0.2" height="15.0" fill="rgb(245,82,26)" rx="2" ry="2" />
<text  x="1048.93" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="517" width="0.2" height="15.0" fill="rgb(249,227,3)" rx="2" ry="2" />
<text  x="1048.93" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (374,717,618 samples, 0.03%)</title><rect x="1161.5" y="1989" width="0.3" height="15.0" fill="rgb(212,90,48)" rx="2" ry="2" />
<text  x="1164.50" y="1999.5" ></text>
</g>
<g >
<title>vfs_read (498,303,155 samples, 0.04%)</title><rect x="1072.6" y="1941" width="0.4" height="15.0" fill="rgb(226,173,26)" rx="2" ry="2" />
<text  x="1075.61" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (880,047,909 samples, 0.06%)</title><rect x="1086.4" y="1877" width="0.8" height="15.0" fill="rgb(243,138,52)" rx="2" ry="2" />
<text  x="1089.39" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_delete_immutable_descendants (28,567,959,750 samples, 2.10%)</title><rect x="268.6" y="1669" width="24.8" height="15.0" fill="rgb(242,210,37)" rx="2" ry="2" />
<text  x="271.65" y="1679.5" >f..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (388,792,298 samples, 0.03%)</title><rect x="789.2" y="1861" width="0.3" height="15.0" fill="rgb(217,135,48)" rx="2" ry="2" />
<text  x="792.20" y="1871.5" ></text>
</g>
<g >
<title>__vma_adjust (505,347,551 samples, 0.04%)</title><rect x="1032.2" y="1925" width="0.5" height="15.0" fill="rgb(250,1,31)" rx="2" ry="2" />
<text  x="1035.24" y="1935.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,389,681,845 samples, 0.10%)</title><rect x="417.6" y="1733" width="1.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="420.60" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (157,743,166 samples, 0.01%)</title><rect x="225.9" y="1429" width="0.1" height="15.0" fill="rgb(246,150,32)" rx="2" ry="2" />
<text  x="228.89" y="1439.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::tuple&lt;true, true&gt; (168,693,026 samples, 0.01%)</title><rect x="473.3" y="1813" width="0.2" height="15.0" fill="rgb(231,124,2)" rx="2" ry="2" />
<text  x="476.32" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (557,426,931 samples, 0.04%)</title><rect x="843.0" y="1861" width="0.5" height="15.0" fill="rgb(225,111,1)" rx="2" ry="2" />
<text  x="845.99" y="1871.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (153,630,017,976 samples, 11.29%)</title><rect x="210.8" y="1733" width="133.2" height="15.0" fill="rgb(216,163,17)" rx="2" ry="2" />
<text  x="213.75" y="1743.5" >folly::hazptr_ob..</text>
</g>
<g >
<title>____fput (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1877" width="0.1" height="15.0" fill="rgb(224,205,6)" rx="2" ry="2" />
<text  x="1080.14" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_node (1,469,970,084 samples, 0.11%)</title><rect x="279.8" y="1573" width="1.3" height="15.0" fill="rgb(206,203,32)" rx="2" ry="2" />
<text  x="282.79" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (10,052,534,458 samples, 0.74%)</title><rect x="736.9" y="1797" width="8.7" height="15.0" fill="rgb(222,36,50)" rx="2" ry="2" />
<text  x="739.87" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,086,152,959 samples, 0.08%)</title><rect x="224.1" y="1477" width="1.0" height="15.0" fill="rgb(236,76,10)" rx="2" ry="2" />
<text  x="227.14" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1173" width="0.2" height="15.0" fill="rgb(228,112,17)" rx="2" ry="2" />
<text  x="1048.93" y="1183.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::tuple&lt;true, true&gt; (2,267,986,767 samples, 0.17%)</title><rect x="428.4" y="1797" width="2.0" height="15.0" fill="rgb(236,39,5)" rx="2" ry="2" />
<text  x="431.44" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_map (2,548,118,276 samples, 0.19%)</title><rect x="326.2" y="1605" width="2.2" height="15.0" fill="rgb(213,79,9)" rx="2" ry="2" />
<text  x="329.16" y="1615.5" ></text>
</g>
<g >
<title>down_write_killable (25,266,295,273 samples, 1.86%)</title><rect x="1007.8" y="1957" width="21.9" height="15.0" fill="rgb(234,180,44)" rx="2" ry="2" />
<text  x="1010.79" y="1967.5" >d..</text>
</g>
<g >
<title>vfs_write (865,294,103 samples, 0.06%)</title><rect x="1073.7" y="1909" width="0.8" height="15.0" fill="rgb(247,211,21)" rx="2" ry="2" />
<text  x="1076.72" y="1919.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (333,764,317 samples, 0.02%)</title><rect x="201.3" y="1717" width="0.3" height="15.0" fill="rgb(244,207,1)" rx="2" ry="2" />
<text  x="204.28" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (267,165,010 samples, 0.02%)</title><rect x="757.3" y="1829" width="0.3" height="15.0" fill="rgb(249,32,35)" rx="2" ry="2" />
<text  x="760.33" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, false&gt;::_Head_base (762,547,896 samples, 0.06%)</title><rect x="429.7" y="1765" width="0.7" height="15.0" fill="rgb(247,126,41)" rx="2" ry="2" />
<text  x="432.74" y="1775.5" ></text>
</g>
<g >
<title>perf_event_task_tick (178,451,174 samples, 0.01%)</title><rect x="1178.9" y="1765" width="0.2" height="15.0" fill="rgb(212,87,23)" rx="2" ry="2" />
<text  x="1181.91" y="1775.5" ></text>
</g>
<g >
<title>vma_merge (747,049,478 samples, 0.05%)</title><rect x="1032.2" y="1941" width="0.6" height="15.0" fill="rgb(228,224,49)" rx="2" ry="2" />
<text  x="1035.15" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (17,447,392,353 samples, 1.28%)</title><rect x="1041.4" y="2037" width="15.1" height="15.0" fill="rgb(254,191,34)" rx="2" ry="2" />
<text  x="1044.39" y="2047.5" ></text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (305,991,593 samples, 0.02%)</title><rect x="970.7" y="1829" width="0.3" height="15.0" fill="rgb(223,132,42)" rx="2" ry="2" />
<text  x="973.69" y="1839.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (4,949,063,267 samples, 0.36%)</title><rect x="887.0" y="1829" width="4.3" height="15.0" fill="rgb(208,197,38)" rx="2" ry="2" />
<text  x="889.97" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::hazptr_domain&lt;std::atomic&gt;*&gt; (353,825,858 samples, 0.03%)</title><rect x="352.3" y="1749" width="0.3" height="15.0" fill="rgb(249,148,54)" rx="2" ry="2" />
<text  x="355.28" y="1759.5" ></text>
</g>
<g >
<title>path_openat (301,901,724 samples, 0.02%)</title><rect x="1161.5" y="1925" width="0.3" height="15.0" fill="rgb(212,76,23)" rx="2" ry="2" />
<text  x="1164.51" y="1935.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (19,743,839,384 samples, 1.45%)</title><rect x="391.8" y="1797" width="17.2" height="15.0" fill="rgb(254,54,44)" rx="2" ry="2" />
<text  x="394.84" y="1807.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_retire_mutable_children (45,725,201,869 samples, 3.36%)</title><rect x="293.4" y="1669" width="39.7" height="15.0" fill="rgb(234,221,44)" rx="2" ry="2" />
<text  x="296.42" y="1679.5" >fol..</text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::count (840,837,960 samples, 0.06%)</title><rect x="333.8" y="1653" width="0.7" height="15.0" fill="rgb(212,18,11)" rx="2" ry="2" />
<text  x="336.76" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (416,013,062 samples, 0.03%)</title><rect x="618.6" y="1813" width="0.3" height="15.0" fill="rgb(220,147,51)" rx="2" ry="2" />
<text  x="621.56" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (15,231,310,964 samples, 1.12%)</title><rect x="271.1" y="1621" width="13.2" height="15.0" fill="rgb(253,185,19)" rx="2" ry="2" />
<text  x="274.11" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="693" width="0.2" height="15.0" fill="rgb(230,27,51)" rx="2" ry="2" />
<text  x="1048.93" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (11,259,843,586 samples, 0.83%)</title><rect x="623.0" y="1829" width="9.8" height="15.0" fill="rgb(220,68,33)" rx="2" ry="2" />
<text  x="626.05" y="1839.5" ></text>
</g>
<g >
<title>__vfwprintf_chk (272,643,685 samples, 0.02%)</title><rect x="1057.6" y="2037" width="0.3" height="15.0" fill="rgb(226,118,47)" rx="2" ry="2" />
<text  x="1060.64" y="2047.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deallocate (1,144,101,251 samples, 0.08%)</title><rect x="87.4" y="1685" width="0.9" height="15.0" fill="rgb(206,168,30)" rx="2" ry="2" />
<text  x="90.35" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="725" width="0.2" height="15.0" fill="rgb(214,132,46)" rx="2" ry="2" />
<text  x="1048.93" y="735.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::begin (1,328,454,801 samples, 0.10%)</title><rect x="89.3" y="1733" width="1.1" height="15.0" fill="rgb(249,72,0)" rx="2" ry="2" />
<text  x="92.28" y="1743.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (469,031,280 samples, 0.03%)</title><rect x="726.3" y="1797" width="0.5" height="15.0" fill="rgb(231,139,35)" rx="2" ry="2" />
<text  x="729.35" y="1807.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (298,292,519 samples, 0.02%)</title><rect x="891.4" y="1845" width="0.2" height="15.0" fill="rgb(236,116,44)" rx="2" ry="2" />
<text  x="894.38" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_data (229,195,755 samples, 0.02%)</title><rect x="330.8" y="1621" width="0.2" height="15.0" fill="rgb(232,63,43)" rx="2" ry="2" />
<text  x="333.84" y="1631.5" ></text>
</g>
<g >
<title>do_open (120,586,513 samples, 0.01%)</title><rect x="1092.6" y="1909" width="0.1" height="15.0" fill="rgb(238,98,48)" rx="2" ry="2" />
<text  x="1095.63" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::_Deque_impl (3,349,946,759 samples, 0.25%)</title><rect x="64.8" y="1717" width="2.9" height="15.0" fill="rgb(237,63,13)" rx="2" ry="2" />
<text  x="67.77" y="1727.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (74,989,866,043 samples, 5.51%)</title><rect x="421.9" y="1861" width="65.1" height="15.0" fill="rgb(242,144,24)" rx="2" ry="2" />
<text  x="424.94" y="1871.5" >folly::..</text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="293" width="0.2" height="15.0" fill="rgb(228,111,15)" rx="2" ry="2" />
<text  x="1048.93" y="303.5" ></text>
</g>
<g >
<title>[unknown] (247,020,491 samples, 0.02%)</title><rect x="1071.3" y="2005" width="0.2" height="15.0" fill="rgb(248,149,50)" rx="2" ry="2" />
<text  x="1074.31" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::back (1,320,227,913 samples, 0.10%)</title><rect x="297.6" y="1573" width="1.2" height="15.0" fill="rgb(224,174,19)" rx="2" ry="2" />
<text  x="300.61" y="1583.5" ></text>
</g>
<g >
<title>folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (442,889,095,874 samples, 32.55%)</title><rect x="36.2" y="1829" width="384.2" height="15.0" fill="rgb(253,55,14)" rx="2" ry="2" />
<text  x="39.23" y="1839.5" >folly::detail::concurrenthashmap::bucket::BucketTabl..</text>
</g>
<g >
<title>std::pair&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (15,386,371,927 samples, 1.13%)</title><rect x="502.5" y="1877" width="13.4" height="15.0" fill="rgb(205,139,7)" rx="2" ry="2" />
<text  x="505.53" y="1887.5" ></text>
</g>
<g >
<title>folly::to_ascii_size_decimal (571,544,632 samples, 0.04%)</title><rect x="564.3" y="1829" width="0.5" height="15.0" fill="rgb(231,213,23)" rx="2" ry="2" />
<text  x="567.29" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (1,052,860,336 samples, 0.08%)</title><rect x="327.5" y="1589" width="0.9" height="15.0" fill="rgb(228,161,50)" rx="2" ry="2" />
<text  x="330.46" y="1599.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (3,748,277,797 samples, 0.28%)</title><rect x="1024.6" y="1813" width="3.2" height="15.0" fill="rgb(244,16,1)" rx="2" ry="2" />
<text  x="1027.58" y="1823.5" ></text>
</g>
<g >
<title>psi_group_change (247,069,837 samples, 0.02%)</title><rect x="1181.4" y="1765" width="0.2" height="15.0" fill="rgb(244,107,37)" rx="2" ry="2" />
<text  x="1184.38" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (782,556,154 samples, 0.06%)</title><rect x="1101.1" y="1813" width="0.7" height="15.0" fill="rgb(210,156,19)" rx="2" ry="2" />
<text  x="1104.09" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (18,766,994,210 samples, 1.38%)</title><rect x="64.5" y="1733" width="16.3" height="15.0" fill="rgb(215,93,36)" rx="2" ry="2" />
<text  x="67.49" y="1743.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_cohort&lt;std::atomic&gt;::inc_count (9,811,715,484 samples, 0.72%)</title><rect x="202.2" y="1733" width="8.5" height="15.0" fill="rgb(243,222,5)" rx="2" ry="2" />
<text  x="205.22" y="1743.5" ></text>
</g>
<g >
<title>std::operator&amp; (503,821,807 samples, 0.04%)</title><rect x="391.1" y="1797" width="0.4" height="15.0" fill="rgb(212,79,9)" rx="2" ry="2" />
<text  x="394.07" y="1807.5" ></text>
</g>
<g >
<title>[snap] (389,250,517 samples, 0.03%)</title><rect x="1163.3" y="1909" width="0.3" height="15.0" fill="rgb(253,144,49)" rx="2" ry="2" />
<text  x="1166.26" y="1919.5" ></text>
</g>
<g >
<title>google::Check_LTImpl&lt;unsigned int, unsigned int&gt; (293,154,159 samples, 0.02%)</title><rect x="368.2" y="1781" width="0.2" height="15.0" fill="rgb(239,139,28)" rx="2" ry="2" />
<text  x="371.16" y="1791.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (129,355,396 samples, 0.01%)</title><rect x="1077.1" y="1941" width="0.1" height="15.0" fill="rgb(235,80,0)" rx="2" ry="2" />
<text  x="1080.14" y="1951.5" ></text>
</g>
<g >
<title>std::atomic&lt;void const*&gt;::store (3,396,430,326 samples, 0.25%)</title><rect x="388.6" y="1813" width="2.9" height="15.0" fill="rgb(215,33,1)" rx="2" ry="2" />
<text  x="391.56" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (150,015,235 samples, 0.01%)</title><rect x="1077.1" y="1957" width="0.1" height="15.0" fill="rgb(234,36,17)" rx="2" ry="2" />
<text  x="1080.12" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (148,765,548 samples, 0.01%)</title><rect x="411.9" y="1765" width="0.1" height="15.0" fill="rgb(222,13,31)" rx="2" ry="2" />
<text  x="414.91" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_v (535,581,543 samples, 0.04%)</title><rect x="1104.9" y="1765" width="0.5" height="15.0" fill="rgb(249,222,16)" rx="2" ry="2" />
<text  x="1107.93" y="1775.5" ></text>
</g>
<g >
<title>[snap] (530,436,196 samples, 0.04%)</title><rect x="1163.2" y="1989" width="0.4" height="15.0" fill="rgb(248,155,47)" rx="2" ry="2" />
<text  x="1166.18" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (497,094,858 samples, 0.04%)</title><rect x="495.7" y="1829" width="0.4" height="15.0" fill="rgb(220,152,1)" rx="2" ry="2" />
<text  x="498.65" y="1839.5" ></text>
</g>
<g >
<title>std::seed_seq::generate&lt;unsigned int*&gt; (315,458,450 samples, 0.02%)</title><rect x="1061.7" y="2021" width="0.3" height="15.0" fill="rgb(253,182,21)" rx="2" ry="2" />
<text  x="1064.75" y="2031.5" ></text>
</g>
<g >
<title>[snap] (442,100,000 samples, 0.03%)</title><rect x="1163.2" y="1941" width="0.4" height="15.0" fill="rgb(210,208,53)" rx="2" ry="2" />
<text  x="1166.23" y="1951.5" ></text>
</g>
<g >
<title>__x64_sys_write (115,746,976 samples, 0.01%)</title><rect x="1061.2" y="1989" width="0.1" height="15.0" fill="rgb(233,192,44)" rx="2" ry="2" />
<text  x="1064.24" y="1999.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (254,290,591 samples, 0.02%)</title><rect x="1091.9" y="1861" width="0.3" height="15.0" fill="rgb(250,126,40)" rx="2" ry="2" />
<text  x="1094.93" y="1871.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (201,994,708 samples, 0.01%)</title><rect x="968.8" y="1877" width="0.2" height="15.0" fill="rgb(249,196,33)" rx="2" ry="2" />
<text  x="971.83" y="1887.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (1,292,497,302 samples, 0.10%)</title><rect x="225.1" y="1493" width="1.1" height="15.0" fill="rgb(211,201,38)" rx="2" ry="2" />
<text  x="228.09" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="1125" width="0.2" height="15.0" fill="rgb(209,42,35)" rx="2" ry="2" />
<text  x="1048.93" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (267,156,434 samples, 0.02%)</title><rect x="1161.2" y="2005" width="0.3" height="15.0" fill="rgb(233,122,31)" rx="2" ry="2" />
<text  x="1164.23" y="2015.5" ></text>
</g>
<g >
<title>pick_next_task (251,472,689 samples, 0.02%)</title><rect x="947.0" y="1893" width="0.2" height="15.0" fill="rgb(243,181,52)" rx="2" ry="2" />
<text  x="949.97" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator* (171,283,859 samples, 0.01%)</title><rect x="323.2" y="1621" width="0.1" height="15.0" fill="rgb(230,108,3)" rx="2" ry="2" />
<text  x="326.17" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (189,727,722 samples, 0.01%)</title><rect x="1045.9" y="261" width="0.2" height="15.0" fill="rgb(226,193,3)" rx="2" ry="2" />
<text  x="1048.93" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (698,973,253 samples, 0.05%)</title><rect x="1160.3" y="1941" width="0.6" height="15.0" fill="rgb(220,45,34)" rx="2" ry="2" />
<text  x="1163.33" y="1951.5" ></text>
</g>
<g >
<title>down_read_trylock (164,273,625 samples, 0.01%)</title><rect x="972.2" y="1989" width="0.2" height="15.0" fill="rgb(241,38,50)" rx="2" ry="2" />
<text  x="975.23" y="1999.5" ></text>
</g>
<g >
<title>mmput (710,835,975 samples, 0.05%)</title><rect x="1087.9" y="1941" width="0.7" height="15.0" fill="rgb(205,113,8)" rx="2" ry="2" />
<text  x="1090.95" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6,723,413,002 samples, 0.49%)</title><rect x="815.2" y="1845" width="5.8" height="15.0" fill="rgb(208,64,39)" rx="2" ry="2" />
<text  x="818.22" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (1,406,978,791 samples, 0.10%)</title><rect x="90.4" y="1733" width="1.2" height="15.0" fill="rgb(252,131,39)" rx="2" ry="2" />
<text  x="93.43" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (371,856,750 samples, 0.03%)</title><rect x="1008.8" y="1925" width="0.3" height="15.0" fill="rgb(225,174,22)" rx="2" ry="2" />
<text  x="1011.75" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_map (2,986,745,947 samples, 0.22%)</title><rect x="83.4" y="1717" width="2.6" height="15.0" fill="rgb(227,201,9)" rx="2" ry="2" />
<text  x="86.38" y="1727.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::downgrade_retire_immutable_descendants (207,598,332 samples, 0.02%)</title><rect x="222.5" y="1589" width="0.2" height="15.0" fill="rgb(244,227,35)" rx="2" ry="2" />
<text  x="225.49" y="1599.5" ></text>
</g>
<g >
<title>seq_read_iter (238,661,595 samples, 0.02%)</title><rect x="1161.3" y="1909" width="0.2" height="15.0" fill="rgb(218,225,2)" rx="2" ry="2" />
<text  x="1164.25" y="1919.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (274,897,413 samples, 0.02%)</title><rect x="85.7" y="1685" width="0.3" height="15.0" fill="rgb(227,49,31)" rx="2" ry="2" />
<text  x="88.73" y="1695.5" ></text>
</g>
<g >
<title>acpi_idle_enter (446,495,886 samples, 0.03%)</title><rect x="1188.9" y="1845" width="0.4" height="15.0" fill="rgb(217,111,41)" rx="2" ry="2" />
<text  x="1191.90" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;void const*&gt;, true&gt;::_M_cget (188,364,290 samples, 0.01%)</title><rect x="1104.6" y="1733" width="0.2" height="15.0" fill="rgb(245,126,29)" rx="2" ry="2" />
<text  x="1107.62" y="1743.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (518,357,275 samples, 0.04%)</title><rect x="317.2" y="1557" width="0.4" height="15.0" fill="rgb(231,143,38)" rx="2" ry="2" />
<text  x="320.16" y="1567.5" ></text>
</g>
<g >
<title>folly::hazptr_obj_linked&lt;std::atomic&gt;::acquire_link_safe (6,794,031,560 samples, 0.50%)</title><rect x="477.1" y="1829" width="5.9" height="15.0" fill="rgb(241,119,11)" rx="2" ry="2" />
<text  x="480.14" y="1839.5" ></text>
</g>
<g >
<title>apt (26,745,938,525 samples, 1.97%)</title><rect x="1061.5" y="2053" width="23.2" height="15.0" fill="rgb(244,149,2)" rx="2" ry="2" />
<text  x="1064.51" y="2063.5" >apt</text>
</g>
<g >
<title>std::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::exchange (430,717,600 samples, 0.03%)</title><rect x="183.2" y="1685" width="0.3" height="15.0" fill="rgb(218,44,49)" rx="2" ry="2" />
<text  x="186.16" y="1695.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (240,465,317 samples, 0.02%)</title><rect x="1023.8" y="1765" width="0.2" height="15.0" fill="rgb(208,114,46)" rx="2" ry="2" />
<text  x="1026.83" y="1775.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (389,560,463 samples, 0.03%)</title><rect x="1186.4" y="1877" width="0.4" height="15.0" fill="rgb(212,150,2)" rx="2" ry="2" />
<text  x="1189.42" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (173,153,022 samples, 0.01%)</title><rect x="290.9" y="1621" width="0.2" height="15.0" fill="rgb(213,186,18)" rx="2" ry="2" />
<text  x="293.93" y="1631.5" ></text>
</g>
<g >
<title>default_send_IPI_single_phys (337,249,379 samples, 0.02%)</title><rect x="1036.9" y="1829" width="0.3" height="15.0" fill="rgb(228,102,0)" rx="2" ry="2" />
<text  x="1039.91" y="1839.5" ></text>
</g>
<g >
<title>std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::top (1,215,951,110 samples, 0.09%)</title><rect x="322.9" y="1653" width="1.1" height="15.0" fill="rgb(250,0,46)" rx="2" ry="2" />
<text  x="325.91" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1,386,001,303 samples, 0.10%)</title><rect x="839.4" y="1829" width="1.2" height="15.0" fill="rgb(208,218,48)" rx="2" ry="2" />
<text  x="842.42" y="1839.5" ></text>
</g>
<g >
<title>swapper (29,462,994,459 samples, 2.17%)</title><rect x="1164.2" y="2053" width="25.6" height="15.0" fill="rgb(209,47,11)" rx="2" ry="2" />
<text  x="1167.20" y="2063.5" >s..</text>
</g>
<g >
<title>ksys_read (127,738,428 samples, 0.01%)</title><rect x="1050.3" y="1957" width="0.1" height="15.0" fill="rgb(235,95,36)" rx="2" ry="2" />
<text  x="1053.32" y="1967.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath.part.0 (175,800,946 samples, 0.01%)</title><rect x="1008.9" y="1893" width="0.2" height="15.0" fill="rgb(209,131,15)" rx="2" ry="2" />
<text  x="1011.92" y="1903.5" ></text>
</g>
<g >
<title>folly::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::tail (18,561,729,731 samples, 1.36%)</title><rect x="149.4" y="1717" width="16.1" height="15.0" fill="rgb(221,101,15)" rx="2" ry="2" />
<text  x="152.41" y="1727.5" ></text>
</g>
<g >
<title>generic_file_read_iter (493,945,097 samples, 0.04%)</title><rect x="1072.6" y="1893" width="0.4" height="15.0" fill="rgb(218,3,42)" rx="2" ry="2" />
<text  x="1075.61" y="1903.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (242,926,488 samples, 0.02%)</title><rect x="1023.8" y="1813" width="0.2" height="15.0" fill="rgb(205,201,1)" rx="2" ry="2" />
<text  x="1026.82" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (943,689,736 samples, 0.07%)</title><rect x="453.1" y="1733" width="0.8" height="15.0" fill="rgb(208,104,22)" rx="2" ry="2" />
<text  x="456.10" y="1743.5" ></text>
</g>
<g >
<title>wake_q_add (157,008,920 samples, 0.01%)</title><rect x="1034.1" y="1909" width="0.2" height="15.0" fill="rgb(210,143,49)" rx="2" ry="2" />
<text  x="1037.13" y="1919.5" ></text>
</g>
<g >
<title>psi_task_switch (684,522,300 samples, 0.05%)</title><rect x="1187.5" y="1941" width="0.6" height="15.0" fill="rgb(218,2,0)" rx="2" ry="2" />
<text  x="1190.51" y="1951.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (732,388,856 samples, 0.05%)</title><rect x="287.0" y="1589" width="0.7" height="15.0" fill="rgb(211,193,31)" rx="2" ry="2" />
<text  x="290.02" y="1599.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&amp;&gt; (240,497,863 samples, 0.02%)</title><rect x="512.3" y="1845" width="0.2" height="15.0" fill="rgb(208,68,41)" rx="2" ry="2" />
<text  x="515.30" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (895,746,698 samples, 0.07%)</title><rect x="331.3" y="1605" width="0.8" height="15.0" fill="rgb(229,136,19)" rx="2" ry="2" />
<text  x="334.32" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (840,223,574 samples, 0.06%)</title><rect x="83.8" y="1701" width="0.7" height="15.0" fill="rgb(232,25,53)" rx="2" ry="2" />
<text  x="86.79" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~_Deque_base (7,611,325,717 samples, 0.56%)</title><rect x="82.2" y="1733" width="6.6" height="15.0" fill="rgb(216,92,15)" rx="2" ry="2" />
<text  x="85.24" y="1743.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (538,569,023 samples, 0.04%)</title><rect x="595.1" y="1813" width="0.5" height="15.0" fill="rgb(239,90,0)" rx="2" ry="2" />
<text  x="598.12" y="1823.5" ></text>
</g>
<g >
<title>__divtf3 (177,454,461 samples, 0.01%)</title><rect x="1078.3" y="2037" width="0.1" height="15.0" fill="rgb(247,217,10)" rx="2" ry="2" />
<text  x="1081.30" y="2047.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (164,668,200 samples, 0.01%)</title><rect x="307.0" y="1637" width="0.2" height="15.0" fill="rgb(206,171,12)" rx="2" ry="2" />
<text  x="310.03" y="1647.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (235,502,487 samples, 0.02%)</title><rect x="497.3" y="1845" width="0.2" height="15.0" fill="rgb(249,146,6)" rx="2" ry="2" />
<text  x="500.33" y="1855.5" ></text>
</g>
<g >
<title>____wcstold_l_internal (1,974,064,806 samples, 0.15%)</title><rect x="231.7" y="1589" width="1.7" height="15.0" fill="rgb(218,48,42)" rx="2" ry="2" />
<text  x="234.67" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (392,791,336 samples, 0.03%)</title><rect x="1092.6" y="2005" width="0.3" height="15.0" fill="rgb(231,11,18)" rx="2" ry="2" />
<text  x="1095.57" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (174,765,130 samples, 0.01%)</title><rect x="437.1" y="1765" width="0.2" height="15.0" fill="rgb(214,37,53)" rx="2" ry="2" />
<text  x="440.13" y="1775.5" ></text>
</g>
</g>
</svg>
