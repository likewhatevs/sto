<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1558.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1541" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1541" > </text>
<g id="frames">
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (178 samples, 0.05%)</title><rect x="669.2" y="1253" width="0.5" height="15.0" fill="rgb(211,10,26)" rx="2" ry="2" />
<text  x="672.15" y="1263.5" ></text>
</g>
<g >
<title>::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (58 samples, 0.02%)</title><rect x="708.6" y="1317" width="0.2" height="15.0" fill="rgb(252,48,33)" rx="2" ry="2" />
<text  x="711.64" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (40 samples, 0.01%)</title><rect x="469.9" y="53" width="0.1" height="15.0" fill="rgb(227,196,3)" rx="2" ry="2" />
<text  x="472.90" y="63.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (38 samples, 0.01%)</title><rect x="333.9" y="1173" width="0.2" height="15.0" fill="rgb(243,153,33)" rx="2" ry="2" />
<text  x="336.93" y="1183.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::_M_max_size (45 samples, 0.01%)</title><rect x="646.9" y="1189" width="0.1" height="15.0" fill="rgb(253,67,19)" rx="2" ry="2" />
<text  x="649.87" y="1199.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_initialize_map (2,664 samples, 0.70%)</title><rect x="510.9" y="1077" width="8.3" height="15.0" fill="rgb(238,169,26)" rx="2" ry="2" />
<text  x="513.95" y="1087.5" ></text>
</g>
<g >
<title>::move&lt;std::allocator&lt;char&gt;&amp;&gt; (122 samples, 0.03%)</title><rect x="635.3" y="1221" width="0.4" height="15.0" fill="rgb(239,199,17)" rx="2" ry="2" />
<text  x="638.30" y="1231.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (71 samples, 0.02%)</title><rect x="469.9" y="437" width="0.2" height="15.0" fill="rgb(253,77,13)" rx="2" ry="2" />
<text  x="472.89" y="447.5" ></text>
</g>
<g >
<title>::__addressof&lt;char&gt; (65 samples, 0.02%)</title><rect x="863.5" y="1301" width="0.2" height="15.0" fill="rgb(252,52,0)" rx="2" ry="2" />
<text  x="866.50" y="1311.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (100 samples, 0.03%)</title><rect x="956.4" y="1269" width="0.3" height="15.0" fill="rgb(227,172,5)" rx="2" ry="2" />
<text  x="959.44" y="1279.5" ></text>
</g>
<g >
<title>::coro::TaskWithExecutor&lt;void&gt;::Awaiter::await_suspend&lt;folly::coro::detail::DetachedBarrierTask::promise_type&gt; (287,296 samples, 75.69%)</title><rect x="243.1" y="1413" width="893.2" height="15.0" fill="rgb(247,229,0)" rx="2" ry="2" />
<text  x="246.13" y="1423.5" >::coro::TaskWithExecutor&lt;void&gt;::Awaiter::await_suspend&lt;folly::coro::detail::DetachedBarrierTask::promise_type&gt;</text>
</g>
<g >
<title>::__addressof&lt;char const&gt; (551 samples, 0.15%)</title><rect x="940.0" y="1221" width="1.7" height="15.0" fill="rgb(251,73,50)" rx="2" ry="2" />
<text  x="943.01" y="1231.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::set_head (164 samples, 0.04%)</title><rect x="350.3" y="1173" width="0.5" height="15.0" fill="rgb(246,224,5)" rx="2" ry="2" />
<text  x="353.33" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (86 samples, 0.02%)</title><rect x="783.7" y="1333" width="0.3" height="15.0" fill="rgb(226,158,47)" rx="2" ry="2" />
<text  x="786.73" y="1343.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_nodes (498 samples, 0.13%)</title><rect x="523.0" y="1077" width="1.6" height="15.0" fill="rgb(254,123,4)" rx="2" ry="2" />
<text  x="526.01" y="1087.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_data (52 samples, 0.01%)</title><rect x="557.6" y="1093" width="0.2" height="15.0" fill="rgb(233,165,3)" rx="2" ry="2" />
<text  x="560.64" y="1103.5" ></text>
</g>
<g >
<title>::Check_GTImpl&lt;unsigned int, unsigned int&gt; (40 samples, 0.01%)</title><rect x="531.9" y="1109" width="0.1" height="15.0" fill="rgb(225,128,22)" rx="2" ry="2" />
<text  x="534.85" y="1119.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (52 samples, 0.01%)</title><rect x="772.9" y="1317" width="0.1" height="15.0" fill="rgb(244,75,7)" rx="2" ry="2" />
<text  x="775.87" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (143 samples, 0.04%)</title><rect x="799.4" y="1317" width="0.4" height="15.0" fill="rgb(230,58,5)" rx="2" ry="2" />
<text  x="802.38" y="1327.5" ></text>
</g>
<g >
<title>::__addressof&lt;std::mutex&gt; (77 samples, 0.02%)</title><rect x="606.7" y="1269" width="0.2" height="15.0" fill="rgb(216,188,45)" rx="2" ry="2" />
<text  x="609.67" y="1279.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (54 samples, 0.01%)</title><rect x="522.7" y="1045" width="0.2" height="15.0" fill="rgb(217,62,23)" rx="2" ry="2" />
<text  x="525.70" y="1055.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (59 samples, 0.02%)</title><rect x="555.4" y="1045" width="0.1" height="15.0" fill="rgb(233,81,29)" rx="2" ry="2" />
<text  x="558.36" y="1055.5" ></text>
</g>
<g >
<title>new (57 samples, 0.02%)</title><rect x="707.9" y="1301" width="0.2" height="15.0" fill="rgb(223,102,11)" rx="2" ry="2" />
<text  x="710.93" y="1311.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (57 samples, 0.02%)</title><rect x="338.0" y="1189" width="0.2" height="15.0" fill="rgb(229,76,12)" rx="2" ry="2" />
<text  x="340.99" y="1199.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (119 samples, 0.03%)</title><rect x="960.8" y="1301" width="0.4" height="15.0" fill="rgb(235,70,23)" rx="2" ry="2" />
<text  x="963.79" y="1311.5" ></text>
</g>
<g >
<title>::forward_as_tuple&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (1,258 samples, 0.33%)</title><rect x="689.2" y="1349" width="3.9" height="15.0" fill="rgb(228,139,47)" rx="2" ry="2" />
<text  x="692.24" y="1359.5" ></text>
</g>
<g >
<title>::forward_as_tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1,174 samples, 0.31%)</title><rect x="625.0" y="1285" width="3.7" height="15.0" fill="rgb(217,194,42)" rx="2" ry="2" />
<text  x="628.04" y="1295.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (66 samples, 0.02%)</title><rect x="470.7" y="821" width="0.2" height="15.0" fill="rgb(210,1,6)" rx="2" ry="2" />
<text  x="473.69" y="831.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (209 samples, 0.06%)</title><rect x="678.7" y="1269" width="0.6" height="15.0" fill="rgb(218,57,54)" rx="2" ry="2" />
<text  x="681.70" y="1279.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::release (87,204 samples, 22.97%)</title><rect x="308.1" y="1285" width="271.1" height="15.0" fill="rgb(243,141,16)" rx="2" ry="2" />
<text  x="311.09" y="1295.5" >::detail::concurrenthashmap::bucket:..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (405 samples, 0.11%)</title><rect x="774.4" y="1301" width="1.3" height="15.0" fill="rgb(211,139,19)" rx="2" ry="2" />
<text  x="777.39" y="1311.5" ></text>
</g>
<g >
<title>::to_ascii_lower&lt;10ul, 20ul&gt; (51 samples, 0.01%)</title><rect x="1135.1" y="1317" width="0.1" height="15.0" fill="rgb(227,208,29)" rx="2" ry="2" />
<text  x="1138.09" y="1327.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (606 samples, 0.16%)</title><rect x="944.9" y="1285" width="1.9" height="15.0" fill="rgb(221,129,36)" rx="2" ry="2" />
<text  x="947.92" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::acquire_link (2,921 samples, 0.77%)</title><rect x="595.4" y="1285" width="9.1" height="15.0" fill="rgb(231,217,19)" rx="2" ry="2" />
<text  x="598.41" y="1295.5" ></text>
</g>
<g >
<title>.isra.0 (97 samples, 0.03%)</title><rect x="237.5" y="1445" width="0.3" height="15.0" fill="rgb(225,3,8)" rx="2" ry="2" />
<text  x="240.50" y="1455.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (108 samples, 0.03%)</title><rect x="469.9" y="773" width="0.3" height="15.0" fill="rgb(227,216,40)" rx="2" ry="2" />
<text  x="472.86" y="783.5" ></text>
</g>
<g >
<title>::atomic&lt;unsigned int&gt;::atomic (322 samples, 0.08%)</title><rect x="623.6" y="1285" width="1.0" height="15.0" fill="rgb(227,170,19)" rx="2" ry="2" />
<text  x="626.59" y="1295.5" ></text>
</g>
<g >
<title>::__deque_buf_size (52 samples, 0.01%)</title><rect x="556.4" y="1045" width="0.2" height="15.0" fill="rgb(210,79,41)" rx="2" ry="2" />
<text  x="559.42" y="1055.5" ></text>
</g>
<g >
<title>::to_ascii_size&lt;10ul&gt; (80 samples, 0.02%)</title><rect x="968.3" y="1285" width="0.3" height="15.0" fill="rgb(224,6,7)" rx="2" ry="2" />
<text  x="971.30" y="1295.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (101 samples, 0.03%)</title><rect x="941.8" y="1269" width="0.3" height="15.0" fill="rgb(229,71,37)" rx="2" ry="2" />
<text  x="944.83" y="1279.5" ></text>
</g>
<g >
<title>::forward&lt;unsigned long&amp;&gt; (84 samples, 0.02%)</title><rect x="708.8" y="1317" width="0.3" height="15.0" fill="rgb(213,210,41)" rx="2" ry="2" />
<text  x="711.82" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6,204 samples, 1.63%)</title><rect x="486.6" y="1013" width="19.3" height="15.0" fill="rgb(223,82,50)" rx="2" ry="2" />
<text  x="489.63" y="1023.5" ></text>
</g>
<g >
<title>::atomic&lt;bool&gt;::store (166 samples, 0.04%)</title><rect x="428.5" y="1189" width="0.5" height="15.0" fill="rgb(215,129,28)" rx="2" ry="2" />
<text  x="431.51" y="1199.5" ></text>
</g>
<g >
<title>new (242 samples, 0.06%)</title><rect x="925.7" y="1269" width="0.7" height="15.0" fill="rgb(230,27,23)" rx="2" ry="2" />
<text  x="928.66" y="1279.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (47 samples, 0.01%)</title><rect x="478.6" y="1061" width="0.1" height="15.0" fill="rgb(245,62,3)" rx="2" ry="2" />
<text  x="481.58" y="1071.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (10,752 samples, 2.83%)</title><rect x="473.0" y="1141" width="33.4" height="15.0" fill="rgb(207,156,42)" rx="2" ry="2" />
<text  x="475.98" y="1151.5" >::..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (21,521 samples, 5.67%)</title><rect x="894.3" y="1317" width="66.9" height="15.0" fill="rgb(222,117,15)" rx="2" ry="2" />
<text  x="897.26" y="1327.5" >::__cxx..</text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_head (10,142 samples, 2.67%)</title><rect x="352.2" y="1173" width="31.5" height="15.0" fill="rgb(239,171,2)" rx="2" ry="2" />
<text  x="355.16" y="1183.5" >::..</text>
</g>
<g >
<title>::__is_constant_evaluated (102 samples, 0.03%)</title><rect x="383.9" y="1157" width="0.4" height="15.0" fill="rgb(217,31,15)" rx="2" ry="2" />
<text  x="386.95" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,445 samples, 1.70%)</title><rect x="486.0" y="1029" width="20.0" height="15.0" fill="rgb(252,63,23)" rx="2" ry="2" />
<text  x="488.95" y="1039.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::count (2,825 samples, 0.74%)</title><rect x="1138.6" y="1317" width="8.7" height="15.0" fill="rgb(252,89,21)" rx="2" ry="2" />
<text  x="1141.57" y="1327.5" ></text>
</g>
<g >
<title>new (70 samples, 0.02%)</title><rect x="648.0" y="1189" width="0.2" height="15.0" fill="rgb(232,11,39)" rx="2" ry="2" />
<text  x="651.02" y="1199.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::allocator (67 samples, 0.02%)</title><rect x="474.8" y="1093" width="0.2" height="15.0" fill="rgb(231,122,53)" rx="2" ry="2" />
<text  x="477.81" y="1103.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (2,521 samples, 0.66%)</title><rect x="860.9" y="1317" width="7.8" height="15.0" fill="rgb(237,11,33)" rx="2" ry="2" />
<text  x="863.90" y="1327.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::~_Deque_impl (63 samples, 0.02%)</title><rect x="521.0" y="1077" width="0.2" height="15.0" fill="rgb(220,74,39)" rx="2" ry="2" />
<text  x="524.03" y="1087.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (137 samples, 0.04%)</title><rect x="892.8" y="1317" width="0.4" height="15.0" fill="rgb(211,3,16)" rx="2" ry="2" />
<text  x="895.82" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::active (5,041 samples, 1.33%)</title><rect x="411.0" y="1205" width="15.6" height="15.0" fill="rgb(231,85,47)" rx="2" ry="2" />
<text  x="413.96" y="1215.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (3,507 samples, 0.92%)</title><rect x="508.4" y="1093" width="10.9" height="15.0" fill="rgb(240,178,2)" rx="2" ry="2" />
<text  x="511.42" y="1103.5" ></text>
</g>
<g >
<title>::operator&amp; (43 samples, 0.01%)</title><rect x="576.4" y="1221" width="0.1" height="15.0" fill="rgb(248,65,6)" rx="2" ry="2" />
<text  x="579.37" y="1231.5" ></text>
</g>
<g >
<title>::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;void const*&gt;, true&gt;::_M_cget (42 samples, 0.01%)</title><rect x="1142.9" y="1189" width="0.1" height="15.0" fill="rgb(218,136,33)" rx="2" ry="2" />
<text  x="1145.88" y="1199.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::empty (233 samples, 0.06%)</title><rect x="311.4" y="1221" width="0.7" height="15.0" fill="rgb(214,219,2)" rx="2" ry="2" />
<text  x="314.39" y="1231.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_map (587 samples, 0.15%)</title><rect x="513.1" y="1061" width="1.8" height="15.0" fill="rgb(221,167,10)" rx="2" ry="2" />
<text  x="516.08" y="1071.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (779 samples, 0.21%)</title><rect x="902.6" y="1301" width="2.5" height="15.0" fill="rgb(224,115,34)" rx="2" ry="2" />
<text  x="905.64" y="1311.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~_Deque_base (1,495 samples, 0.39%)</title><rect x="552.9" y="1093" width="4.6" height="15.0" fill="rgb(240,209,50)" rx="2" ry="2" />
<text  x="555.89" y="1103.5" ></text>
</g>
<g >
<title>@@GLIBC_2.2.5 (165 samples, 0.04%)</title><rect x="1189.4" y="1477" width="0.5" height="15.0" fill="rgb(246,86,12)" rx="2" ry="2" />
<text  x="1192.36" y="1487.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (743 samples, 0.20%)</title><rect x="1039.4" y="1253" width="2.3" height="15.0" fill="rgb(232,36,41)" rx="2" ry="2" />
<text  x="1042.36" y="1263.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::getItem (307 samples, 0.08%)</title><rect x="684.3" y="1317" width="1.0" height="15.0" fill="rgb(234,115,16)" rx="2" ry="2" />
<text  x="687.31" y="1327.5" ></text>
</g>
<g >
<title>::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (68 samples, 0.02%)</title><rect x="692.3" y="1301" width="0.2" height="15.0" fill="rgb(237,165,4)" rx="2" ry="2" />
<text  x="695.28" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (132 samples, 0.03%)</title><rect x="588.3" y="1237" width="0.4" height="15.0" fill="rgb(254,54,44)" rx="2" ry="2" />
<text  x="591.31" y="1247.5" ></text>
</g>
<g >
<title>::GetReferenceableValue (80 samples, 0.02%)</title><rect x="484.2" y="1045" width="0.2" height="15.0" fill="rgb(213,44,19)" rx="2" ry="2" />
<text  x="487.17" y="1055.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (41 samples, 0.01%)</title><rect x="470.2" y="709" width="0.1" height="15.0" fill="rgb(210,78,50)" rx="2" ry="2" />
<text  x="473.21" y="719.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::allocator (79 samples, 0.02%)</title><rect x="622.5" y="1301" width="0.2" height="15.0" fill="rgb(250,55,17)" rx="2" ry="2" />
<text  x="625.46" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_set (684 samples, 0.18%)</title><rect x="576.5" y="1237" width="2.2" height="15.0" fill="rgb(210,43,9)" rx="2" ry="2" />
<text  x="579.53" y="1247.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::cas_count (277 samples, 0.07%)</title><rect x="442.4" y="1189" width="0.8" height="15.0" fill="rgb(209,91,8)" rx="2" ry="2" />
<text  x="445.36" y="1199.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (3,560 samples, 0.94%)</title><rect x="540.0" y="1109" width="11.1" height="15.0" fill="rgb(235,165,25)" rx="2" ry="2" />
<text  x="543.03" y="1119.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::allocate (37 samples, 0.01%)</title><rect x="645.4" y="1205" width="0.1" height="15.0" fill="rgb(219,93,30)" rx="2" ry="2" />
<text  x="648.42" y="1215.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::acquire_link (33 samples, 0.01%)</title><rect x="616.9" y="1301" width="0.2" height="15.0" fill="rgb(253,158,30)" rx="2" ry="2" />
<text  x="619.95" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (565 samples, 0.15%)</title><rect x="1057.0" y="1285" width="1.8" height="15.0" fill="rgb(247,160,50)" rx="2" ry="2" />
<text  x="1060.02" y="1295.5" ></text>
</g>
<g >
<title>::estimateSpaceNeeded&lt;unsigned long&gt; (133 samples, 0.04%)</title><rect x="1006.4" y="1317" width="0.4" height="15.0" fill="rgb(214,188,27)" rx="2" ry="2" />
<text  x="1009.38" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (510 samples, 0.13%)</title><rect x="663.7" y="1237" width="1.6" height="15.0" fill="rgb(237,168,34)" rx="2" ry="2" />
<text  x="666.75" y="1247.5" ></text>
</g>
<g >
<title>::detail::reserveInTarget&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (38,287 samples, 10.09%)</title><rect x="887.8" y="1333" width="119.0" height="15.0" fill="rgb(225,225,29)" rx="2" ry="2" />
<text  x="890.77" y="1343.5" >::detail::rese..</text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (243 samples, 0.06%)</title><rect x="469.8" y="885" width="0.7" height="15.0" fill="rgb(238,66,54)" rx="2" ry="2" />
<text  x="472.76" y="895.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::hazptr_obj_linked (419 samples, 0.11%)</title><rect x="682.6" y="1301" width="1.3" height="15.0" fill="rgb(247,18,11)" rx="2" ry="2" />
<text  x="685.56" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::check_threshold_and_reclaim (274 samples, 0.07%)</title><rect x="430.8" y="1157" width="0.9" height="15.0" fill="rgb(249,21,5)" rx="2" ry="2" />
<text  x="433.81" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3,263 samples, 0.86%)</title><rect x="858.8" y="1333" width="10.1" height="15.0" fill="rgb(241,3,34)" rx="2" ry="2" />
<text  x="861.80" y="1343.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::deallocate (94 samples, 0.02%)</title><rect x="500.2" y="965" width="0.3" height="15.0" fill="rgb(240,66,35)" rx="2" ry="2" />
<text  x="503.23" y="975.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_create_nodes (962 samples, 0.25%)</title><rect x="322.6" y="1173" width="3.0" height="15.0" fill="rgb(251,105,41)" rx="2" ry="2" />
<text  x="325.59" y="1183.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;0ul, bool&amp;&amp;&gt;::_M_head (171 samples, 0.05%)</title><rect x="709.5" y="1285" width="0.6" height="15.0" fill="rgb(220,69,40)" rx="2" ry="2" />
<text  x="712.53" y="1295.5" ></text>
</g>
<g >
<title>::operator&amp; (55 samples, 0.01%)</title><rect x="681.1" y="1253" width="0.2" height="15.0" fill="rgb(245,52,6)" rx="2" ry="2" />
<text  x="684.08" y="1263.5" ></text>
</g>
<g >
<title>::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (71 samples, 0.02%)</title><rect x="470.7" y="853" width="0.2" height="15.0" fill="rgb(244,12,17)" rx="2" ry="2" />
<text  x="473.67" y="863.5" ></text>
</g>
<g >
<title>::hazptr_tc&lt;std::atomic&gt;::capacity (87 samples, 0.02%)</title><rect x="846.6" y="1349" width="0.2" height="15.0" fill="rgb(213,213,15)" rx="2" ry="2" />
<text  x="849.58" y="1359.5" ></text>
</g>
<g >
<title>::__deque_buf_size (159 samples, 0.04%)</title><rect x="518.4" y="1061" width="0.5" height="15.0" fill="rgb(221,8,42)" rx="2" ry="2" />
<text  x="521.37" y="1071.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (140 samples, 0.04%)</title><rect x="1026.9" y="1269" width="0.4" height="15.0" fill="rgb(235,112,17)" rx="2" ry="2" />
<text  x="1029.89" y="1279.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::allocator (49 samples, 0.01%)</title><rect x="475.6" y="1077" width="0.1" height="15.0" fill="rgb(206,146,49)" rx="2" ry="2" />
<text  x="478.58" y="1087.5" ></text>
</g>
<g >
<title>::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (1,149 samples, 0.30%)</title><rect x="468.3" y="1093" width="3.6" height="15.0" fill="rgb(245,36,53)" rx="2" ry="2" />
<text  x="471.29" y="1103.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::add_count (35 samples, 0.01%)</title><rect x="430.6" y="1157" width="0.1" height="15.0" fill="rgb(220,152,13)" rx="2" ry="2" />
<text  x="433.63" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (38 samples, 0.01%)</title><rect x="894.1" y="1317" width="0.2" height="15.0" fill="rgb(233,3,13)" rx="2" ry="2" />
<text  x="897.14" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (99 samples, 0.03%)</title><rect x="240.2" y="1253" width="0.3" height="15.0" fill="rgb(233,151,23)" rx="2" ry="2" />
<text  x="243.16" y="1263.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_data (55 samples, 0.01%)</title><rect x="524.9" y="1093" width="0.2" height="15.0" fill="rgb(245,40,42)" rx="2" ry="2" />
<text  x="527.91" y="1103.5" ></text>
</g>
<g >
<title>::operator&amp; (197 samples, 0.05%)</title><rect x="605.0" y="1285" width="0.6" height="15.0" fill="rgb(222,58,30)" rx="2" ry="2" />
<text  x="608.00" y="1295.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (38 samples, 0.01%)</title><rect x="662.3" y="1221" width="0.1" height="15.0" fill="rgb(223,191,7)" rx="2" ry="2" />
<text  x="665.29" y="1231.5" ></text>
</g>
<g >
<title>::atomic&lt;bool&gt;::load (38 samples, 0.01%)</title><rect x="564.6" y="1157" width="0.1" height="15.0" fill="rgb(247,45,50)" rx="2" ry="2" />
<text  x="567.55" y="1167.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (70 samples, 0.02%)</title><rect x="469.1" y="981" width="0.3" height="15.0" fill="rgb(253,70,37)" rx="2" ry="2" />
<text  x="472.13" y="991.5" ></text>
</g>
<g >
<title>$plt (48 samples, 0.01%)</title><rect x="1033.1" y="1269" width="0.2" height="15.0" fill="rgb(229,6,42)" rx="2" ry="2" />
<text  x="1036.12" y="1279.5" ></text>
</g>
<g >
<title>::pair&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (4,304 samples, 1.13%)</title><rect x="699.0" y="1333" width="13.4" height="15.0" fill="rgb(230,53,26)" rx="2" ry="2" />
<text  x="702.03" y="1343.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (110 samples, 0.03%)</title><rect x="545.3" y="1045" width="0.4" height="15.0" fill="rgb(253,29,37)" rx="2" ry="2" />
<text  x="548.32" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (73 samples, 0.02%)</title><rect x="469.9" y="565" width="0.2" height="15.0" fill="rgb(218,171,25)" rx="2" ry="2" />
<text  x="472.88" y="575.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (56 samples, 0.01%)</title><rect x="469.9" y="229" width="0.2" height="15.0" fill="rgb(248,52,36)" rx="2" ry="2" />
<text  x="472.90" y="239.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::init (2,644 samples, 0.70%)</title><rect x="673.5" y="1317" width="8.2" height="15.0" fill="rgb(244,167,35)" rx="2" ry="2" />
<text  x="676.51" y="1327.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (52 samples, 0.01%)</title><rect x="578.9" y="1253" width="0.2" height="15.0" fill="rgb(205,110,48)" rx="2" ry="2" />
<text  x="581.93" y="1263.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::begin (280 samples, 0.07%)</title><rect x="557.8" y="1093" width="0.9" height="15.0" fill="rgb(205,84,19)" rx="2" ry="2" />
<text  x="560.80" y="1103.5" ></text>
</g>
<g >
<title>::_Head_base&lt;0ul, bool&amp;&amp;, false&gt;::_Head_base&lt;bool&gt; (162 samples, 0.04%)</title><rect x="688.3" y="1301" width="0.5" height="15.0" fill="rgb(213,218,42)" rx="2" ry="2" />
<text  x="691.28" y="1311.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (328 samples, 0.09%)</title><rect x="311.1" y="1237" width="1.1" height="15.0" fill="rgb(238,114,9)" rx="2" ry="2" />
<text  x="314.15" y="1247.5" ></text>
</g>
<g >
<title>::to_ascii_with&lt;10ul, folly::to_ascii_alphabet&lt;false&gt;, 20ul&gt; (22,652 samples, 5.97%)</title><rect x="1064.5" y="1285" width="70.5" height="15.0" fill="rgb(240,207,15)" rx="2" ry="2" />
<text  x="1067.54" y="1295.5" >::to_as..</text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::exchange_tail (111 samples, 0.03%)</title><rect x="429.4" y="1173" width="0.4" height="15.0" fill="rgb(211,5,54)" rx="2" ry="2" />
<text  x="432.42" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,275 samples, 0.34%)</title><rect x="942.8" y="1301" width="4.0" height="15.0" fill="rgb(207,196,0)" rx="2" ry="2" />
<text  x="945.84" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (167 samples, 0.04%)</title><rect x="644.7" y="1189" width="0.6" height="15.0" fill="rgb(214,169,49)" rx="2" ry="2" />
<text  x="647.74" y="1199.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (43 samples, 0.01%)</title><rect x="660.9" y="1189" width="0.1" height="15.0" fill="rgb(252,132,2)" rx="2" ry="2" />
<text  x="663.86" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::next (3,318 samples, 0.87%)</title><rect x="431.8" y="1189" width="10.3" height="15.0" fill="rgb(215,0,17)" rx="2" ry="2" />
<text  x="434.81" y="1199.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (59 samples, 0.02%)</title><rect x="351.9" y="1173" width="0.2" height="15.0" fill="rgb(244,178,44)" rx="2" ry="2" />
<text  x="354.94" y="1183.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (39 samples, 0.01%)</title><rect x="471.2" y="933" width="0.1" height="15.0" fill="rgb(244,223,52)" rx="2" ry="2" />
<text  x="474.18" y="943.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (51 samples, 0.01%)</title><rect x="1018.1" y="1285" width="0.2" height="15.0" fill="rgb(218,109,41)" rx="2" ry="2" />
<text  x="1021.10" y="1295.5" ></text>
</g>
<g >
<title>::atomic&lt;void const*&gt;::store (854 samples, 0.22%)</title><rect x="843.5" y="1333" width="2.7" height="15.0" fill="rgb(228,159,24)" rx="2" ry="2" />
<text  x="846.55" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (72 samples, 0.02%)</title><rect x="820.7" y="1333" width="0.2" height="15.0" fill="rgb(245,226,45)" rx="2" ry="2" />
<text  x="823.66" y="1343.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (694 samples, 0.18%)</title><rect x="876.7" y="1317" width="2.1" height="15.0" fill="rgb(238,132,7)" rx="2" ry="2" />
<text  x="879.66" y="1327.5" ></text>
</g>
<g >
<title>::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (225 samples, 0.06%)</title><rect x="297.6" y="1269" width="0.7" height="15.0" fill="rgb(238,113,25)" rx="2" ry="2" />
<text  x="300.58" y="1279.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_max_size (57 samples, 0.02%)</title><rect x="321.7" y="1141" width="0.1" height="15.0" fill="rgb(254,94,9)" rx="2" ry="2" />
<text  x="324.65" y="1151.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_node (322 samples, 0.08%)</title><rect x="547.3" y="1045" width="1.0" height="15.0" fill="rgb(252,32,8)" rx="2" ry="2" />
<text  x="550.27" y="1055.5" ></text>
</g>
<g >
<title>::to_ascii_size_decimal (166 samples, 0.04%)</title><rect x="1001.0" y="1301" width="0.5" height="15.0" fill="rgb(213,184,29)" rx="2" ry="2" />
<text  x="1003.96" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::hazptr_obj (213 samples, 0.06%)</title><rect x="683.2" y="1285" width="0.7" height="15.0" fill="rgb(236,120,6)" rx="2" ry="2" />
<text  x="686.20" y="1295.5" ></text>
</g>
<g >
<title>::to_ascii_size_decimal (10,423 samples, 2.75%)</title><rect x="968.6" y="1285" width="32.4" height="15.0" fill="rgb(240,124,19)" rx="2" ry="2" />
<text  x="971.55" y="1295.5" >::..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (354 samples, 0.09%)</title><rect x="634.6" y="1237" width="1.1" height="15.0" fill="rgb(225,22,18)" rx="2" ry="2" />
<text  x="637.58" y="1247.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,795 samples, 0.47%)</title><rect x="642.8" y="1221" width="5.6" height="15.0" fill="rgb(210,176,41)" rx="2" ry="2" />
<text  x="645.77" y="1231.5" ></text>
</g>
<g >
<title>::atomic&lt;bool&gt;::load (4,891 samples, 1.29%)</title><rect x="411.4" y="1189" width="15.2" height="15.0" fill="rgb(207,92,50)" rx="2" ry="2" />
<text  x="414.38" y="1199.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_node (313 samples, 0.08%)</title><rect x="523.5" y="1061" width="1.0" height="15.0" fill="rgb(229,119,17)" rx="2" ry="2" />
<text  x="526.51" y="1071.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (9,985 samples, 2.63%)</title><rect x="475.1" y="1093" width="31.0" height="15.0" fill="rgb(245,29,47)" rx="2" ry="2" />
<text  x="478.07" y="1103.5" >::..</text>
</g>
<g >
<title>::unique_lock&lt;std::mutex&gt;::unlock (1,106 samples, 0.29%)</title><rect x="612.7" y="1285" width="3.4" height="15.0" fill="rgb(215,156,53)" rx="2" ry="2" />
<text  x="615.69" y="1295.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_nodes (537 samples, 0.14%)</title><rect x="555.7" y="1077" width="1.6" height="15.0" fill="rgb(245,11,26)" rx="2" ry="2" />
<text  x="558.65" y="1087.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_delete_immutable_descendants (59 samples, 0.02%)</title><rect x="470.9" y="949" width="0.2" height="15.0" fill="rgb(254,116,20)" rx="2" ry="2" />
<text  x="473.89" y="959.5" ></text>
</g>
<g >
<title>::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (60 samples, 0.02%)</title><rect x="469.9" y="325" width="0.2" height="15.0" fill="rgb(248,35,53)" rx="2" ry="2" />
<text  x="472.89" y="335.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,031 samples, 0.27%)</title><rect x="927.3" y="1301" width="3.2" height="15.0" fill="rgb(248,105,7)" rx="2" ry="2" />
<text  x="930.26" y="1311.5" ></text>
</g>
<g >
<title>::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; (92 samples, 0.02%)</title><rect x="792.6" y="1317" width="0.3" height="15.0" fill="rgb(216,142,25)" rx="2" ry="2" />
<text  x="795.62" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (72 samples, 0.02%)</title><rect x="469.9" y="485" width="0.2" height="15.0" fill="rgb(206,34,2)" rx="2" ry="2" />
<text  x="472.88" y="495.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (59 samples, 0.02%)</title><rect x="251.8" y="1333" width="0.2" height="15.0" fill="rgb(248,52,38)" rx="2" ry="2" />
<text  x="254.81" y="1343.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (43 samples, 0.01%)</title><rect x="470.2" y="741" width="0.1" height="15.0" fill="rgb(224,4,21)" rx="2" ry="2" />
<text  x="473.20" y="751.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::release (35 samples, 0.01%)</title><rect x="616.8" y="1301" width="0.1" height="15.0" fill="rgb(216,64,3)" rx="2" ry="2" />
<text  x="619.77" y="1311.5" ></text>
</g>
<g >
<title>::unordered_set&lt;void const*, std::hash&lt;void const*&gt;, std::equal_to&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::count (2,855 samples, 0.75%)</title><rect x="1138.5" y="1333" width="8.9" height="15.0" fill="rgb(242,38,8)" rx="2" ry="2" />
<text  x="1141.48" y="1343.5" ></text>
</g>
<g >
<title>::Step (40 samples, 0.01%)</title><rect x="242.7" y="1349" width="0.1" height="15.0" fill="rgb(245,115,47)" rx="2" ry="2" />
<text  x="245.70" y="1359.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::cas_safe_list_top (2,216 samples, 0.58%)</title><rect x="1175.5" y="1349" width="6.8" height="15.0" fill="rgb(212,146,16)" rx="2" ry="2" />
<text  x="1178.46" y="1359.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (287 samples, 0.08%)</title><rect x="273.1" y="1285" width="0.9" height="15.0" fill="rgb(208,162,49)" rx="2" ry="2" />
<text  x="276.13" y="1295.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (551 samples, 0.15%)</title><rect x="872.1" y="1317" width="1.7" height="15.0" fill="rgb(243,49,10)" rx="2" ry="2" />
<text  x="875.10" y="1327.5" ></text>
</g>
<g >
<title>::_Head_base&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (141 samples, 0.04%)</title><rect x="691.2" y="1301" width="0.5" height="15.0" fill="rgb(218,60,15)" rx="2" ry="2" />
<text  x="694.22" y="1311.5" ></text>
</g>
<g >
<title>::ThreadPoolExecutor::runTask (303,885 samples, 80.06%)</title><rect x="243.1" y="1445" width="944.8" height="15.0" fill="rgb(214,102,3)" rx="2" ry="2" />
<text  x="246.13" y="1455.5" >::ThreadPoolExecutor::runTask</text>
</g>
<g >
<title>::__detail::_Identity::operator (54 samples, 0.01%)</title><rect x="1143.5" y="1221" width="0.2" height="15.0" fill="rgb(207,140,46)" rx="2" ry="2" />
<text  x="1146.54" y="1231.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1269" width="0.1" height="15.0" fill="rgb(244,123,12)" rx="2" ry="2" />
<text  x="245.72" y="1279.5" ></text>
</g>
<g >
<title>::atomic&lt;unsigned int&gt;::atomic (126 samples, 0.03%)</title><rect x="682.8" y="1285" width="0.4" height="15.0" fill="rgb(252,4,1)" rx="2" ry="2" />
<text  x="685.81" y="1295.5" ></text>
</g>
<g >
<title>::allocator&lt;char&gt;::allocator (75 samples, 0.02%)</title><rect x="633.8" y="1221" width="0.2" height="15.0" fill="rgb(242,50,37)" rx="2" ry="2" />
<text  x="636.81" y="1231.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (16,478 samples, 4.34%)</title><rect x="1010.2" y="1317" width="51.2" height="15.0" fill="rgb(209,14,53)" rx="2" ry="2" />
<text  x="1013.20" y="1327.5" >::__c..</text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (127 samples, 0.03%)</title><rect x="770.0" y="1317" width="0.4" height="15.0" fill="rgb(246,98,13)" rx="2" ry="2" />
<text  x="772.99" y="1327.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator-- (42 samples, 0.01%)</title><rect x="551.4" y="1093" width="0.2" height="15.0" fill="rgb(245,120,5)" rx="2" ry="2" />
<text  x="554.43" y="1103.5" ></text>
</g>
<g >
<title>::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (415 samples, 0.11%)</title><rect x="239.3" y="1477" width="1.3" height="15.0" fill="rgb(247,161,2)" rx="2" ry="2" />
<text  x="242.35" y="1487.5" ></text>
</g>
<g >
<title>delete (38 samples, 0.01%)</title><rect x="335.2" y="1157" width="0.1" height="15.0" fill="rgb(219,27,29)" rx="2" ry="2" />
<text  x="338.19" y="1167.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_non_empty_list (46 samples, 0.01%)</title><rect x="410.7" y="1205" width="0.1" height="15.0" fill="rgb(235,1,51)" rx="2" ry="2" />
<text  x="413.67" y="1215.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::deallocate (81 samples, 0.02%)</title><rect x="334.9" y="1157" width="0.3" height="15.0" fill="rgb(250,8,15)" rx="2" ry="2" />
<text  x="337.94" y="1167.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::allocator (48 samples, 0.01%)</title><rect x="618.8" y="1317" width="0.1" height="15.0" fill="rgb(223,77,12)" rx="2" ry="2" />
<text  x="621.76" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (43 samples, 0.01%)</title><rect x="572.8" y="1253" width="0.1" height="15.0" fill="rgb(217,39,15)" rx="2" ry="2" />
<text  x="575.81" y="1263.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::releaseLink (51 samples, 0.01%)</title><rect x="240.0" y="1317" width="0.1" height="15.0" fill="rgb(242,177,21)" rx="2" ry="2" />
<text  x="242.97" y="1327.5" ></text>
</g>
<g >
<title>.constprop.0 (155 samples, 0.04%)</title><rect x="226.3" y="1461" width="0.5" height="15.0" fill="rgb(211,34,4)" rx="2" ry="2" />
<text  x="229.34" y="1471.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (58 samples, 0.02%)</title><rect x="554.3" y="1045" width="0.2" height="15.0" fill="rgb(237,173,46)" rx="2" ry="2" />
<text  x="557.33" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::list_match_condition&lt;folly::hazptr_domain&lt;std::atomic&gt;::match_tagged (8,516 samples, 2.24%)</title><rect x="1137.4" y="1365" width="26.5" height="15.0" fill="rgb(251,27,6)" rx="2" ry="2" />
<text  x="1140.39" y="1375.5" >:..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (870 samples, 0.23%)</title><rect x="779.7" y="1349" width="2.7" height="15.0" fill="rgb(229,159,5)" rx="2" ry="2" />
<text  x="782.72" y="1359.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3,715 samples, 0.98%)</title><rect x="809.1" y="1333" width="11.6" height="15.0" fill="rgb(243,167,42)" rx="2" ry="2" />
<text  x="812.12" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (110 samples, 0.03%)</title><rect x="1047.0" y="1269" width="0.4" height="15.0" fill="rgb(248,188,51)" rx="2" ry="2" />
<text  x="1050.02" y="1279.5" ></text>
</g>
<g >
<title>::operator&amp; (152 samples, 0.04%)</title><rect x="394.9" y="1141" width="0.5" height="15.0" fill="rgb(253,182,5)" rx="2" ry="2" />
<text  x="397.94" y="1151.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8,939 samples, 2.36%)</title><rect x="635.8" y="1237" width="27.8" height="15.0" fill="rgb(220,118,44)" rx="2" ry="2" />
<text  x="638.84" y="1247.5" >:..</text>
</g>
<g >
<title>::__detail::_Node_const_iterator&lt;void const*, true, false&gt;::_Node_const_iterator (100 samples, 0.03%)</title><rect x="1146.8" y="1285" width="0.3" height="15.0" fill="rgb(218,125,12)" rx="2" ry="2" />
<text  x="1149.82" y="1295.5" ></text>
</g>
<g >
<title>::get&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (323 samples, 0.09%)</title><rect x="710.1" y="1317" width="1.0" height="15.0" fill="rgb(219,166,7)" rx="2" ry="2" />
<text  x="713.07" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (116 samples, 0.03%)</title><rect x="1060.4" y="1301" width="0.4" height="15.0" fill="rgb(225,113,49)" rx="2" ry="2" />
<text  x="1063.45" y="1311.5" ></text>
</g>
<g >
<title>::GetReferenceableValue (242 samples, 0.06%)</title><rect x="677.9" y="1269" width="0.8" height="15.0" fill="rgb(211,121,36)" rx="2" ry="2" />
<text  x="680.94" y="1279.5" ></text>
</g>
<g >
<title>::addressof&lt;char&gt; (68 samples, 0.02%)</title><rect x="868.7" y="1317" width="0.2" height="15.0" fill="rgb(211,135,26)" rx="2" ry="2" />
<text  x="871.73" y="1327.5" ></text>
</g>
<g >
<title>::operator== (131 samples, 0.03%)</title><rect x="507.6" y="1093" width="0.4" height="15.0" fill="rgb(214,46,45)" rx="2" ry="2" />
<text  x="510.64" y="1103.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2,706 samples, 0.71%)</title><rect x="918.0" y="1285" width="8.4" height="15.0" fill="rgb(218,75,16)" rx="2" ry="2" />
<text  x="921.00" y="1295.5" ></text>
</g>
<g >
<title>::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (413 samples, 0.11%)</title><rect x="239.4" y="1461" width="1.2" height="15.0" fill="rgb(214,29,9)" rx="2" ry="2" />
<text  x="242.35" y="1471.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (44 samples, 0.01%)</title><rect x="617.5" y="1333" width="0.1" height="15.0" fill="rgb(233,9,10)" rx="2" ry="2" />
<text  x="620.46" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,922 samples, 0.77%)</title><rect x="1037.9" y="1269" width="9.1" height="15.0" fill="rgb(243,87,22)" rx="2" ry="2" />
<text  x="1040.93" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (44 samples, 0.01%)</title><rect x="809.0" y="1333" width="0.1" height="15.0" fill="rgb(214,161,35)" rx="2" ry="2" />
<text  x="811.98" y="1343.5" ></text>
</g>
<g >
<title>.constprop.0 (212 samples, 0.06%)</title><rect x="226.3" y="1477" width="0.7" height="15.0" fill="rgb(224,165,7)" rx="2" ry="2" />
<text  x="229.34" y="1487.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (379 samples, 0.10%)</title><rect x="334.1" y="1173" width="1.2" height="15.0" fill="rgb(253,124,52)" rx="2" ry="2" />
<text  x="337.13" y="1183.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (405 samples, 0.11%)</title><rect x="340.0" y="1205" width="1.3" height="15.0" fill="rgb(212,159,1)" rx="2" ry="2" />
<text  x="343.04" y="1215.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::_M_max_size (157 samples, 0.04%)</title><rect x="922.4" y="1269" width="0.5" height="15.0" fill="rgb(207,223,19)" rx="2" ry="2" />
<text  x="925.43" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (71 samples, 0.02%)</title><rect x="469.9" y="421" width="0.2" height="15.0" fill="rgb(237,221,0)" rx="2" ry="2" />
<text  x="472.89" y="431.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3,299 samples, 0.87%)</title><rect x="946.8" y="1301" width="10.3" height="15.0" fill="rgb(213,127,24)" rx="2" ry="2" />
<text  x="949.81" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (400 samples, 0.11%)</title><rect x="911.5" y="1285" width="1.2" height="15.0" fill="rgb(214,34,53)" rx="2" ry="2" />
<text  x="914.47" y="1295.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::deallocate (481 samples, 0.13%)</title><rect x="818.5" y="1301" width="1.5" height="15.0" fill="rgb(210,221,0)" rx="2" ry="2" />
<text  x="821.46" y="1311.5" ></text>
</g>
<g >
<title>::Step (66 samples, 0.02%)</title><rect x="242.6" y="1445" width="0.2" height="15.0" fill="rgb(205,47,14)" rx="2" ry="2" />
<text  x="245.62" y="1455.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (220 samples, 0.06%)</title><rect x="504.6" y="965" width="0.7" height="15.0" fill="rgb(226,183,25)" rx="2" ry="2" />
<text  x="507.61" y="975.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::CountedItem&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (15,991 samples, 4.21%)</title><rect x="622.8" y="1301" width="49.7" height="15.0" fill="rgb(237,43,29)" rx="2" ry="2" />
<text  x="625.80" y="1311.5" >::det..</text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_retire_mutable_children (103 samples, 0.03%)</title><rect x="471.1" y="949" width="0.3" height="15.0" fill="rgb(220,98,13)" rx="2" ry="2" />
<text  x="474.08" y="959.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (112 samples, 0.03%)</title><rect x="1046.7" y="1253" width="0.3" height="15.0" fill="rgb(233,29,49)" rx="2" ry="2" />
<text  x="1049.67" y="1263.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2,281 samples, 0.60%)</title><rect x="770.5" y="1333" width="7.1" height="15.0" fill="rgb(244,229,30)" rx="2" ry="2" />
<text  x="773.53" y="1343.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (166 samples, 0.04%)</title><rect x="813.5" y="1317" width="0.5" height="15.0" fill="rgb(238,61,13)" rx="2" ry="2" />
<text  x="816.47" y="1327.5" ></text>
</g>
<g >
<title>::__addressof&lt;char const&gt; (495 samples, 0.13%)</title><rect x="764.3" y="1237" width="1.5" height="15.0" fill="rgb(252,49,8)" rx="2" ry="2" />
<text  x="767.26" y="1247.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1,263 samples, 0.33%)</title><rect x="784.8" y="1365" width="4.0" height="15.0" fill="rgb(214,217,54)" rx="2" ry="2" />
<text  x="787.85" y="1375.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::load (192 samples, 0.05%)</title><rect x="528.8" y="1093" width="0.6" height="15.0" fill="rgb(253,36,37)" rx="2" ry="2" />
<text  x="531.76" y="1103.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::emplace_back&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (570 samples, 0.15%)</title><rect x="529.7" y="1061" width="1.7" height="15.0" fill="rgb(245,41,15)" rx="2" ry="2" />
<text  x="532.66" y="1071.5" ></text>
</g>
<g >
<title>::tuple&lt;bool&amp;&amp;&gt;::tuple&lt;bool, true, true&gt; (591 samples, 0.16%)</title><rect x="687.4" y="1333" width="1.8" height="15.0" fill="rgb(217,81,3)" rx="2" ry="2" />
<text  x="690.40" y="1343.5" ></text>
</g>
<g >
<title>::forward_as_tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (47 samples, 0.01%)</title><rect x="672.8" y="1301" width="0.2" height="15.0" fill="rgb(253,71,0)" rx="2" ry="2" />
<text  x="675.84" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (105 samples, 0.03%)</title><rect x="469.9" y="629" width="0.3" height="15.0" fill="rgb(231,119,14)" rx="2" ry="2" />
<text  x="472.87" y="639.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (38 samples, 0.01%)</title><rect x="594.8" y="1253" width="0.1" height="15.0" fill="rgb(207,63,10)" rx="2" ry="2" />
<text  x="597.81" y="1263.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::~allocator (60 samples, 0.02%)</title><rect x="254.0" y="1349" width="0.2" height="15.0" fill="rgb(212,86,46)" rx="2" ry="2" />
<text  x="257.01" y="1359.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_set (973 samples, 0.26%)</title><rect x="560.9" y="1125" width="3.1" height="15.0" fill="rgb(235,210,14)" rx="2" ry="2" />
<text  x="563.94" y="1135.5" ></text>
</g>
<g >
<title>::_Head_base&lt;0ul, bool&amp;&amp;, false&gt;::_Head_base&lt;bool&gt; (50 samples, 0.01%)</title><rect x="687.8" y="1317" width="0.1" height="15.0" fill="rgb(254,177,19)" rx="2" ry="2" />
<text  x="690.78" y="1327.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_S_buffer_size (196 samples, 0.05%)</title><rect x="327.5" y="1157" width="0.6" height="15.0" fill="rgb(205,71,33)" rx="2" ry="2" />
<text  x="330.45" y="1167.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (544 samples, 0.14%)</title><rect x="348.6" y="1157" width="1.7" height="15.0" fill="rgb(208,61,39)" rx="2" ry="2" />
<text  x="351.64" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (297 samples, 0.08%)</title><rect x="798.3" y="1285" width="0.9" height="15.0" fill="rgb(252,216,49)" rx="2" ry="2" />
<text  x="801.31" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_head (123 samples, 0.03%)</title><rect x="468.5" y="981" width="0.4" height="15.0" fill="rgb(240,68,41)" rx="2" ry="2" />
<text  x="471.54" y="991.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_tail (557 samples, 0.15%)</title><rect x="348.6" y="1173" width="1.7" height="15.0" fill="rgb(230,33,15)" rx="2" ry="2" />
<text  x="351.60" y="1183.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::allocate (881 samples, 0.23%)</title><rect x="922.9" y="1269" width="2.8" height="15.0" fill="rgb(250,194,2)" rx="2" ry="2" />
<text  x="925.92" y="1279.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;1ul, unsigned long&amp;&gt;::_Tuple_impl (35 samples, 0.01%)</title><rect x="692.6" y="1317" width="0.1" height="15.0" fill="rgb(243,173,53)" rx="2" ry="2" />
<text  x="695.64" y="1327.5" ></text>
</g>
<g >
<title>::operator== (158 samples, 0.04%)</title><rect x="311.6" y="1205" width="0.5" height="15.0" fill="rgb(232,148,40)" rx="2" ry="2" />
<text  x="314.62" y="1215.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_set_node (817 samples, 0.22%)</title><rect x="325.6" y="1173" width="2.6" height="15.0" fill="rgb(208,132,44)" rx="2" ry="2" />
<text  x="328.63" y="1183.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::pop (152 samples, 0.04%)</title><rect x="539.2" y="1125" width="0.5" height="15.0" fill="rgb(210,30,10)" rx="2" ry="2" />
<text  x="542.23" y="1135.5" ></text>
</g>
<g >
<title>::Check_EQImpl&lt;folly::hazptr_domain&lt;std::atomic&gt;*, folly::hazptr_domain&lt;std::atomic&gt;*&gt; (171 samples, 0.05%)</title><rect x="345.0" y="1221" width="0.5" height="15.0" fill="rgb(214,65,46)" rx="2" ry="2" />
<text  x="347.98" y="1231.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_empty_list (762 samples, 0.20%)</title><rect x="348.5" y="1189" width="2.4" height="15.0" fill="rgb(221,131,17)" rx="2" ry="2" />
<text  x="351.52" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (118 samples, 0.03%)</title><rect x="942.1" y="1285" width="0.4" height="15.0" fill="rgb(214,86,4)" rx="2" ry="2" />
<text  x="945.14" y="1295.5" ></text>
</g>
<g >
<title>::operator&amp; (64 samples, 0.02%)</title><rect x="273.8" y="1269" width="0.2" height="15.0" fill="rgb(251,4,19)" rx="2" ry="2" />
<text  x="276.82" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (149 samples, 0.04%)</title><rect x="792.9" y="1317" width="0.5" height="15.0" fill="rgb(213,217,1)" rx="2" ry="2" />
<text  x="795.91" y="1327.5" ></text>
</g>
<g >
<title>::detail::getLastElement&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (50 samples, 0.01%)</title><rect x="887.6" y="1333" width="0.2" height="15.0" fill="rgb(248,36,49)" rx="2" ry="2" />
<text  x="890.61" y="1343.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1205" width="0.1" height="15.0" fill="rgb(236,128,19)" rx="2" ry="2" />
<text  x="245.72" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,189 samples, 0.58%)</title><rect x="650.2" y="1221" width="6.8" height="15.0" fill="rgb(235,114,6)" rx="2" ry="2" />
<text  x="653.21" y="1231.5" ></text>
</g>
<g >
<title>::Step (49 samples, 0.01%)</title><rect x="242.7" y="1397" width="0.1" height="15.0" fill="rgb(214,125,45)" rx="2" ry="2" />
<text  x="245.67" y="1407.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,601 samples, 0.42%)</title><rect x="293.7" y="1285" width="5.0" height="15.0" fill="rgb(220,11,41)" rx="2" ry="2" />
<text  x="296.71" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::check_threshold_push (6,570 samples, 1.73%)</title><rect x="426.6" y="1205" width="20.5" height="15.0" fill="rgb(244,227,53)" rx="2" ry="2" />
<text  x="429.64" y="1215.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::load (4,390 samples, 1.16%)</title><rect x="274.0" y="1285" width="13.7" height="15.0" fill="rgb(237,78,27)" rx="2" ry="2" />
<text  x="277.02" y="1295.5" ></text>
</g>
<g >
<title>::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_propagate_on_copy_assign (41 samples, 0.01%)</title><rect x="789.3" y="1349" width="0.2" height="15.0" fill="rgb(214,114,44)" rx="2" ry="2" />
<text  x="792.32" y="1359.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (108 samples, 0.03%)</title><rect x="469.9" y="789" width="0.3" height="15.0" fill="rgb(252,167,42)" rx="2" ry="2" />
<text  x="472.86" y="799.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (172 samples, 0.05%)</title><rect x="634.0" y="1221" width="0.6" height="15.0" fill="rgb(230,169,12)" rx="2" ry="2" />
<text  x="637.05" y="1231.5" ></text>
</g>
<g >
<title>::__deque_buf_size (37 samples, 0.01%)</title><rect x="547.3" y="1029" width="0.1" height="15.0" fill="rgb(206,214,33)" rx="2" ry="2" />
<text  x="550.31" y="1039.5" ></text>
</g>
<g >
<title>::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (5,184 samples, 1.37%)</title><rect x="579.2" y="1285" width="16.1" height="15.0" fill="rgb(236,96,1)" rx="2" ry="2" />
<text  x="582.20" y="1295.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1301" width="0.1" height="15.0" fill="rgb(254,79,7)" rx="2" ry="2" />
<text  x="245.72" y="1311.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1157" width="0.1" height="15.0" fill="rgb(234,160,2)" rx="2" ry="2" />
<text  x="245.72" y="1167.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_set (336 samples, 0.09%)</title><rect x="680.2" y="1269" width="1.1" height="15.0" fill="rgb(213,132,25)" rx="2" ry="2" />
<text  x="683.21" y="1279.5" ></text>
</g>
<g >
<title>::max&lt;unsigned long&gt; (95 samples, 0.03%)</title><rect x="329.3" y="1173" width="0.3" height="15.0" fill="rgb(211,218,40)" rx="2" ry="2" />
<text  x="332.28" y="1183.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (4,466 samples, 1.18%)</title><rect x="396.6" y="1173" width="13.9" height="15.0" fill="rgb(229,148,22)" rx="2" ry="2" />
<text  x="399.58" y="1183.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (116 samples, 0.03%)</title><rect x="795.1" y="1301" width="0.4" height="15.0" fill="rgb(214,166,10)" rx="2" ry="2" />
<text  x="798.14" y="1311.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (45 samples, 0.01%)</title><rect x="333.7" y="1157" width="0.1" height="15.0" fill="rgb(216,51,45)" rx="2" ry="2" />
<text  x="336.70" y="1167.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (346 samples, 0.09%)</title><rect x="842.5" y="1333" width="1.0" height="15.0" fill="rgb(244,169,18)" rx="2" ry="2" />
<text  x="845.47" y="1343.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrTableDeleter::operator (1,152 samples, 0.30%)</title><rect x="468.3" y="1125" width="3.6" height="15.0" fill="rgb(231,85,45)" rx="2" ry="2" />
<text  x="471.28" y="1135.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (145 samples, 0.04%)</title><rect x="794.6" y="1301" width="0.4" height="15.0" fill="rgb(234,139,44)" rx="2" ry="2" />
<text  x="797.58" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::next (4,720 samples, 1.24%)</title><rect x="1147.4" y="1349" width="14.6" height="15.0" fill="rgb(245,145,11)" rx="2" ry="2" />
<text  x="1150.36" y="1359.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::release_ref (1,436 samples, 0.38%)</title><rect x="559.5" y="1141" width="4.5" height="15.0" fill="rgb(214,127,53)" rx="2" ry="2" />
<text  x="562.55" y="1151.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::~_Deque_impl (78 samples, 0.02%)</title><rect x="332.4" y="1189" width="0.2" height="15.0" fill="rgb(247,102,49)" rx="2" ry="2" />
<text  x="335.38" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::match_tagged (16,355 samples, 4.31%)</title><rect x="1136.9" y="1381" width="50.9" height="15.0" fill="rgb(220,80,51)" rx="2" ry="2" />
<text  x="1139.93" y="1391.5" >::haz..</text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_map (527 samples, 0.14%)</title><rect x="545.1" y="1061" width="1.6" height="15.0" fill="rgb(216,186,43)" rx="2" ry="2" />
<text  x="548.09" y="1071.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1285" width="0.1" height="15.0" fill="rgb(233,48,17)" rx="2" ry="2" />
<text  x="245.72" y="1295.5" ></text>
</g>
<g >
<title>::forward&lt;bool&amp;&amp;&gt; (72 samples, 0.02%)</title><rect x="708.4" y="1317" width="0.2" height="15.0" fill="rgb(226,158,8)" rx="2" ry="2" />
<text  x="711.42" y="1327.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (182 samples, 0.05%)</title><rect x="626.1" y="1269" width="0.6" height="15.0" fill="rgb(253,169,44)" rx="2" ry="2" />
<text  x="629.09" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (41 samples, 0.01%)</title><rect x="469.9" y="117" width="0.1" height="15.0" fill="rgb(220,184,41)" rx="2" ry="2" />
<text  x="472.90" y="127.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::getItem (2,949 samples, 0.78%)</title><rect x="298.9" y="1269" width="9.2" height="15.0" fill="rgb(227,45,46)" rx="2" ry="2" />
<text  x="301.93" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,152 samples, 0.30%)</title><rect x="468.3" y="1141" width="3.6" height="15.0" fill="rgb(222,197,23)" rx="2" ry="2" />
<text  x="471.28" y="1151.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (40 samples, 0.01%)</title><rect x="338.2" y="1189" width="0.2" height="15.0" fill="rgb(238,210,43)" rx="2" ry="2" />
<text  x="341.24" y="1199.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (3,585 samples, 0.94%)</title><rect x="384.3" y="1157" width="11.1" height="15.0" fill="rgb(212,224,53)" rx="2" ry="2" />
<text  x="387.26" y="1167.5" ></text>
</g>
<g >
<title>::__atomic_base&lt;unsigned int&gt;::__atomic_base (80 samples, 0.02%)</title><rect x="683.0" y="1269" width="0.2" height="15.0" fill="rgb(210,121,35)" rx="2" ry="2" />
<text  x="685.95" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (200 samples, 0.05%)</title><rect x="239.9" y="1381" width="0.6" height="15.0" fill="rgb(245,197,37)" rx="2" ry="2" />
<text  x="242.92" y="1391.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (49 samples, 0.01%)</title><rect x="470.7" y="805" width="0.1" height="15.0" fill="rgb(250,204,5)" rx="2" ry="2" />
<text  x="473.69" y="815.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (87 samples, 0.02%)</title><rect x="333.4" y="1157" width="0.2" height="15.0" fill="rgb(233,27,28)" rx="2" ry="2" />
<text  x="336.36" y="1167.5" ></text>
</g>
<g >
<title>::Check_EQImpl&lt;unsigned long, unsigned long&gt; (107 samples, 0.03%)</title><rect x="427.7" y="1189" width="0.3" height="15.0" fill="rgb(222,168,6)" rx="2" ry="2" />
<text  x="430.69" y="1199.5" ></text>
</g>
<g >
<title>::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (472 samples, 0.12%)</title><rect x="633.1" y="1237" width="1.5" height="15.0" fill="rgb(237,99,50)" rx="2" ry="2" />
<text  x="636.12" y="1247.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,168 samples, 0.31%)</title><rect x="952.7" y="1253" width="3.6" height="15.0" fill="rgb(239,42,53)" rx="2" ry="2" />
<text  x="955.68" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (40 samples, 0.01%)</title><rect x="469.9" y="37" width="0.1" height="15.0" fill="rgb(220,103,1)" rx="2" ry="2" />
<text  x="472.90" y="47.5" ></text>
</g>
<g >
<title>::mutex::unlock (38 samples, 0.01%)</title><rect x="616.6" y="1253" width="0.1" height="15.0" fill="rgb(248,50,44)" rx="2" ry="2" />
<text  x="619.59" y="1263.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (40 samples, 0.01%)</title><rect x="524.8" y="1093" width="0.1" height="15.0" fill="rgb(229,142,0)" rx="2" ry="2" />
<text  x="527.78" y="1103.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (35,370 samples, 9.32%)</title><rect x="455.0" y="1205" width="109.9" height="15.0" fill="rgb(215,226,31)" rx="2" ry="2" />
<text  x="457.98" y="1215.5" >::hazptr_obj_..</text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (35 samples, 0.01%)</title><rect x="505.6" y="981" width="0.1" height="15.0" fill="rgb(221,39,15)" rx="2" ry="2" />
<text  x="508.60" y="991.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count (277 samples, 0.07%)</title><rect x="679.3" y="1269" width="0.9" height="15.0" fill="rgb(249,212,2)" rx="2" ry="2" />
<text  x="682.35" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (74,469 samples, 19.62%)</title><rect x="341.3" y="1253" width="231.5" height="15.0" fill="rgb(244,36,2)" rx="2" ry="2" />
<text  x="344.30" y="1263.5" >::hazptr_obj_base_linked&lt;folly..</text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (347 samples, 0.09%)</title><rect x="878.8" y="1333" width="1.1" height="15.0" fill="rgb(227,174,53)" rx="2" ry="2" />
<text  x="881.82" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (975 samples, 0.26%)</title><rect x="1054.0" y="1285" width="3.0" height="15.0" fill="rgb(226,55,13)" rx="2" ry="2" />
<text  x="1056.99" y="1295.5" ></text>
</g>
<g >
<title>::forward&lt;unsigned long&amp;&gt; (67 samples, 0.02%)</title><rect x="692.9" y="1317" width="0.2" height="15.0" fill="rgb(242,210,48)" rx="2" ry="2" />
<text  x="695.94" y="1327.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (17,235 samples, 4.54%)</title><rect x="619.9" y="1317" width="53.6" height="15.0" fill="rgb(211,72,29)" rx="2" ry="2" />
<text  x="622.93" y="1327.5" >::det..</text>
</g>
<g >
<title>::_Head_base&lt;0ul, bool&amp;&amp;, false&gt;::_M_head (120 samples, 0.03%)</title><rect x="709.7" y="1269" width="0.4" height="15.0" fill="rgb(243,139,18)" rx="2" ry="2" />
<text  x="712.69" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,080 samples, 0.28%)</title><rect x="766.6" y="1317" width="3.4" height="15.0" fill="rgb(216,185,17)" rx="2" ry="2" />
<text  x="769.64" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (72 samples, 0.02%)</title><rect x="469.9" y="453" width="0.2" height="15.0" fill="rgb(238,68,42)" rx="2" ry="2" />
<text  x="472.88" y="463.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::invoke_reclamation_in_executor (16,589 samples, 4.37%)</title><rect x="1136.3" y="1413" width="51.6" height="15.0" fill="rgb(242,85,8)" rx="2" ry="2" />
<text  x="1139.28" y="1423.5" >::haz..</text>
</g>
<g >
<title>::GetReferenceableValue (35 samples, 0.01%)</title><rect x="532.0" y="1109" width="0.1" height="15.0" fill="rgb(231,9,45)" rx="2" ry="2" />
<text  x="534.98" y="1119.5" ></text>
</g>
<g >
<title>::detail::LastElementImpl&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::call&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (62 samples, 0.02%)</title><rect x="961.2" y="1317" width="0.2" height="15.0" fill="rgb(216,224,9)" rx="2" ry="2" />
<text  x="964.16" y="1327.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (39 samples, 0.01%)</title><rect x="550.6" y="1061" width="0.1" height="15.0" fill="rgb(210,187,51)" rx="2" ry="2" />
<text  x="553.56" y="1071.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (3,638 samples, 0.96%)</title><rect x="330.0" y="1237" width="11.3" height="15.0" fill="rgb(228,145,53)" rx="2" ry="2" />
<text  x="332.99" y="1247.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_inc (37 samples, 0.01%)</title><rect x="298.3" y="1253" width="0.1" height="15.0" fill="rgb(250,111,24)" rx="2" ry="2" />
<text  x="301.31" y="1263.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (801 samples, 0.21%)</title><rect x="873.8" y="1317" width="2.5" height="15.0" fill="rgb(249,217,36)" rx="2" ry="2" />
<text  x="876.82" y="1327.5" ></text>
</g>
<g >
<title>::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (138,994 samples, 36.62%)</title><rect x="254.2" y="1349" width="432.2" height="15.0" fill="rgb(231,158,41)" rx="2" ry="2" />
<text  x="257.25" y="1359.5" >::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_stri..</text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (409 samples, 0.11%)</title><rect x="239.4" y="1429" width="1.2" height="15.0" fill="rgb(225,210,31)" rx="2" ry="2" />
<text  x="242.36" y="1439.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::~_Deque_impl (72 samples, 0.02%)</title><rect x="553.6" y="1077" width="0.2" height="15.0" fill="rgb(238,119,52)" rx="2" ry="2" />
<text  x="556.55" y="1087.5" ></text>
</g>
<g >
<title>::__get_helper&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (282 samples, 0.07%)</title><rect x="710.2" y="1301" width="0.9" height="15.0" fill="rgb(221,50,23)" rx="2" ry="2" />
<text  x="713.19" y="1311.5" ></text>
</g>
<g >
<title>::seed_seq::generate&lt;unsigned int*&gt; (152 samples, 0.04%)</title><rect x="1188.8" y="1477" width="0.5" height="15.0" fill="rgb(220,60,35)" rx="2" ry="2" />
<text  x="1191.82" y="1487.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node (1,655 samples, 0.44%)</title><rect x="1140.6" y="1285" width="5.1" height="15.0" fill="rgb(207,207,34)" rx="2" ry="2" />
<text  x="1143.60" y="1295.5" ></text>
</g>
<g >
<title>::__addressof&lt;char const&gt; (88 samples, 0.02%)</title><rect x="798.9" y="1237" width="0.3" height="15.0" fill="rgb(215,164,18)" rx="2" ry="2" />
<text  x="801.92" y="1247.5" ></text>
</g>
<g >
<title>::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_v (122 samples, 0.03%)</title><rect x="1143.1" y="1221" width="0.4" height="15.0" fill="rgb(245,1,20)" rx="2" ry="2" />
<text  x="1146.12" y="1231.5" ></text>
</g>
<g >
<title>::UnboundedBlockingQueue&lt;folly::CPUThreadPoolExecutor::CPUTask, folly::LifoSemImpl&lt;std::atomic, folly::SaturatingSemaphore&lt;true, std::atomic&gt; &gt; &gt;::try_take_for (232 samples, 0.06%)</title><rect x="1187.9" y="1445" width="0.7" height="15.0" fill="rgb(243,51,27)" rx="2" ry="2" />
<text  x="1190.85" y="1455.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::push_obj (72 samples, 0.02%)</title><rect x="469.9" y="469" width="0.2" height="15.0" fill="rgb(248,73,51)" rx="2" ry="2" />
<text  x="472.88" y="479.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::_Deque_impl (758 samples, 0.20%)</title><rect x="540.4" y="1077" width="2.4" height="15.0" fill="rgb(253,41,18)" rx="2" ry="2" />
<text  x="543.43" y="1087.5" ></text>
</g>
<g >
<title>new (112 samples, 0.03%)</title><rect x="673.2" y="1301" width="0.3" height="15.0" fill="rgb(237,14,16)" rx="2" ry="2" />
<text  x="676.17" y="1311.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (472 samples, 0.12%)</title><rect x="666.2" y="1221" width="1.5" height="15.0" fill="rgb(214,89,18)" rx="2" ry="2" />
<text  x="669.23" y="1231.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (175 samples, 0.05%)</title><rect x="651.6" y="1205" width="0.5" height="15.0" fill="rgb(238,130,3)" rx="2" ry="2" />
<text  x="654.55" y="1215.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (73 samples, 0.02%)</title><rect x="469.9" y="533" width="0.2" height="15.0" fill="rgb(229,226,17)" rx="2" ry="2" />
<text  x="472.88" y="543.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (405 samples, 0.11%)</title><rect x="1005.0" y="1285" width="1.2" height="15.0" fill="rgb(218,106,11)" rx="2" ry="2" />
<text  x="1007.99" y="1295.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (95 samples, 0.03%)</title><rect x="240.2" y="1237" width="0.3" height="15.0" fill="rgb(214,227,32)" rx="2" ry="2" />
<text  x="243.17" y="1247.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::set_next (45 samples, 0.01%)</title><rect x="410.5" y="1189" width="0.2" height="15.0" fill="rgb(217,33,40)" rx="2" ry="2" />
<text  x="413.51" y="1199.5" ></text>
</g>
<g >
<title>::forward_as_tuple&lt;bool&gt; (778 samples, 0.20%)</title><rect x="686.8" y="1349" width="2.4" height="15.0" fill="rgb(242,148,20)" rx="2" ry="2" />
<text  x="689.82" y="1359.5" ></text>
</g>
<g >
<title>::__distance&lt;char*&gt; (41 samples, 0.01%)</title><rect x="661.9" y="1221" width="0.1" height="15.0" fill="rgb(220,117,46)" rx="2" ry="2" />
<text  x="664.85" y="1231.5" ></text>
</g>
<g >
<title>::__get_helper&lt;0ul, bool&amp;&amp;&gt; (244 samples, 0.06%)</title><rect x="709.3" y="1301" width="0.8" height="15.0" fill="rgb(238,214,3)" rx="2" ry="2" />
<text  x="712.31" y="1311.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (157 samples, 0.04%)</title><rect x="324.9" y="1125" width="0.5" height="15.0" fill="rgb(244,47,16)" rx="2" ry="2" />
<text  x="327.87" y="1135.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;unsigned char&gt;::deallocate (48 samples, 0.01%)</title><rect x="474.7" y="1093" width="0.1" height="15.0" fill="rgb(242,126,1)" rx="2" ry="2" />
<text  x="477.66" y="1103.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10,119 samples, 2.67%)</title><rect x="800.3" y="1365" width="31.4" height="15.0" fill="rgb(234,100,15)" rx="2" ry="2" />
<text  x="803.27" y="1375.5" >::..</text>
</g>
<g >
<title>::move&lt;std::allocator&lt;char&gt;&amp;&gt; (45 samples, 0.01%)</title><rect x="880.6" y="1333" width="0.2" height="15.0" fill="rgb(228,118,10)" rx="2" ry="2" />
<text  x="883.61" y="1343.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;unsigned char&gt;::__new_allocator (34 samples, 0.01%)</title><rect x="621.9" y="1301" width="0.1" height="15.0" fill="rgb(235,222,40)" rx="2" ry="2" />
<text  x="624.88" y="1311.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (2,174 samples, 0.57%)</title><rect x="565.3" y="1189" width="6.8" height="15.0" fill="rgb(211,92,37)" rx="2" ry="2" />
<text  x="568.33" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,916 samples, 0.77%)</title><rect x="757.1" y="1301" width="9.1" height="15.0" fill="rgb(215,55,24)" rx="2" ry="2" />
<text  x="760.14" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (199 samples, 0.05%)</title><rect x="1059.8" y="1301" width="0.6" height="15.0" fill="rgb(212,62,37)" rx="2" ry="2" />
<text  x="1062.79" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_inc (2,855 samples, 0.75%)</title><rect x="595.6" y="1269" width="8.9" height="15.0" fill="rgb(223,175,15)" rx="2" ry="2" />
<text  x="598.61" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3,044 samples, 0.80%)</title><rect x="790.5" y="1333" width="9.4" height="15.0" fill="rgb(222,132,15)" rx="2" ry="2" />
<text  x="793.47" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (551 samples, 0.15%)</title><rect x="742.4" y="1301" width="1.7" height="15.0" fill="rgb(252,127,41)" rx="2" ry="2" />
<text  x="745.42" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::check_due_time (81 samples, 0.02%)</title><rect x="431.3" y="1141" width="0.3" height="15.0" fill="rgb(228,131,35)" rx="2" ry="2" />
<text  x="434.35" y="1151.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::push_obj (976 samples, 0.26%)</title><rect x="468.5" y="1045" width="3.0" height="15.0" fill="rgb(226,165,48)" rx="2" ry="2" />
<text  x="471.48" y="1055.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (41 samples, 0.01%)</title><rect x="469.9" y="149" width="0.1" height="15.0" fill="rgb(226,106,54)" rx="2" ry="2" />
<text  x="472.90" y="159.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::set_next (78 samples, 0.02%)</title><rect x="1175.2" y="1349" width="0.3" height="15.0" fill="rgb(223,190,20)" rx="2" ry="2" />
<text  x="1178.22" y="1359.5" ></text>
</g>
<g >
<title>::Ignore::Ignore&lt;unsigned long&gt; (84 samples, 0.02%)</title><rect x="1003.8" y="1301" width="0.2" height="15.0" fill="rgb(241,184,14)" rx="2" ry="2" />
<text  x="1006.76" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::downgrade_retire_immutable_descendants (10,232 samples, 2.70%)</title><rect x="309.5" y="1253" width="31.8" height="15.0" fill="rgb(232,198,31)" rx="2" ry="2" />
<text  x="312.49" y="1263.5" >::..</text>
</g>
<g >
<title>::detail::LastElementImpl&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::call&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (717 samples, 0.19%)</title><rect x="1004.0" y="1301" width="2.2" height="15.0" fill="rgb(241,104,25)" rx="2" ry="2" />
<text  x="1007.02" y="1311.5" ></text>
</g>
<g >
<title>::_Head_base&lt;1ul, unsigned long&amp;, false&gt;::_M_head (135 samples, 0.04%)</title><rect x="711.8" y="1269" width="0.4" height="15.0" fill="rgb(217,177,51)" rx="2" ry="2" />
<text  x="714.75" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::next (2,532 samples, 0.67%)</title><rect x="460.4" y="1173" width="7.9" height="15.0" fill="rgb(231,162,5)" rx="2" ry="2" />
<text  x="463.40" y="1183.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (121 samples, 0.03%)</title><rect x="1050.7" y="1285" width="0.4" height="15.0" fill="rgb(245,17,54)" rx="2" ry="2" />
<text  x="1053.73" y="1295.5" ></text>
</g>
<g >
<title>::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;void const*&gt;, true&gt;::_M_cget (33 samples, 0.01%)</title><rect x="1145.1" y="1205" width="0.1" height="15.0" fill="rgb(240,32,8)" rx="2" ry="2" />
<text  x="1148.06" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,103 samples, 0.29%)</title><rect x="501.0" y="981" width="3.5" height="15.0" fill="rgb(224,131,0)" rx="2" ry="2" />
<text  x="504.03" y="991.5" ></text>
</g>
<g >
<title>::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;void const*&gt;, true&gt;::_M_cget (57 samples, 0.02%)</title><rect x="1146.5" y="1253" width="0.1" height="15.0" fill="rgb(241,152,35)" rx="2" ry="2" />
<text  x="1149.46" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (43 samples, 0.01%)</title><rect x="470.2" y="757" width="0.1" height="15.0" fill="rgb(246,43,47)" rx="2" ry="2" />
<text  x="473.20" y="767.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (107 samples, 0.03%)</title><rect x="514.5" y="1029" width="0.3" height="15.0" fill="rgb(244,223,26)" rx="2" ry="2" />
<text  x="517.48" y="1039.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::getItem (39 samples, 0.01%)</title><rect x="308.0" y="1253" width="0.1" height="15.0" fill="rgb(222,84,37)" rx="2" ry="2" />
<text  x="310.97" y="1263.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (55 samples, 0.01%)</title><rect x="942.7" y="1301" width="0.1" height="15.0" fill="rgb(229,41,9)" rx="2" ry="2" />
<text  x="945.67" y="1311.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (304 samples, 0.08%)</title><rect x="538.3" y="1125" width="0.9" height="15.0" fill="rgb(220,95,43)" rx="2" ry="2" />
<text  x="541.28" y="1135.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_safe_obj (4,140 samples, 1.09%)</title><rect x="1174.9" y="1365" width="12.8" height="15.0" fill="rgb(206,13,3)" rx="2" ry="2" />
<text  x="1177.86" y="1375.5" ></text>
</g>
<g >
<title>::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (58 samples, 0.02%)</title><rect x="673.0" y="1301" width="0.2" height="15.0" fill="rgb(207,227,4)" rx="2" ry="2" />
<text  x="675.99" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (41 samples, 0.01%)</title><rect x="469.9" y="181" width="0.1" height="15.0" fill="rgb(220,186,54)" rx="2" ry="2" />
<text  x="472.90" y="191.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_non_empty_list (14,488 samples, 3.82%)</title><rect x="350.9" y="1189" width="45.0" height="15.0" fill="rgb(252,175,8)" rx="2" ry="2" />
<text  x="353.89" y="1199.5" >::ha..</text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_S_buffer_size (119 samples, 0.03%)</title><rect x="549.6" y="1045" width="0.3" height="15.0" fill="rgb(243,138,26)" rx="2" ry="2" />
<text  x="552.56" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (73 samples, 0.02%)</title><rect x="469.9" y="597" width="0.2" height="15.0" fill="rgb(221,21,42)" rx="2" ry="2" />
<text  x="472.88" y="607.5" ></text>
</g>
<g >
<title>::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (43 samples, 0.01%)</title><rect x="668.9" y="1253" width="0.2" height="15.0" fill="rgb(205,193,49)" rx="2" ry="2" />
<text  x="671.92" y="1263.5" ></text>
</g>
<g >
<title>::forward&lt;unsigned long&amp;&gt; (90 samples, 0.02%)</title><rect x="690.0" y="1333" width="0.3" height="15.0" fill="rgb(216,141,42)" rx="2" ry="2" />
<text  x="693.00" y="1343.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::release_link (2,134 samples, 0.56%)</title><rect x="531.6" y="1125" width="6.7" height="15.0" fill="rgb(237,38,13)" rx="2" ry="2" />
<text  x="534.62" y="1135.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (21,349 samples, 5.62%)</title><rect x="617.6" y="1333" width="66.4" height="15.0" fill="rgb(240,21,50)" rx="2" ry="2" />
<text  x="620.60" y="1343.5" >::detai..</text>
</g>
<g >
<title>::__addressof&lt;char const&gt; (494 samples, 0.13%)</title><rect x="1045.0" y="1205" width="1.6" height="15.0" fill="rgb(242,77,51)" rx="2" ry="2" />
<text  x="1048.03" y="1215.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (360 samples, 0.09%)</title><rect x="541.4" y="1045" width="1.1" height="15.0" fill="rgb(205,167,43)" rx="2" ry="2" />
<text  x="544.36" y="1055.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;1ul, unsigned long&amp;&gt;::_M_head (201 samples, 0.05%)</title><rect x="711.5" y="1285" width="0.7" height="15.0" fill="rgb(244,216,37)" rx="2" ry="2" />
<text  x="714.54" y="1295.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::getItem (144 samples, 0.04%)</title><rect x="297.1" y="1269" width="0.5" height="15.0" fill="rgb(244,6,2)" rx="2" ry="2" />
<text  x="300.13" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (90 samples, 0.02%)</title><rect x="470.2" y="773" width="0.3" height="15.0" fill="rgb(240,155,7)" rx="2" ry="2" />
<text  x="473.20" y="783.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (947 samples, 0.25%)</title><rect x="1043.6" y="1221" width="3.0" height="15.0" fill="rgb(230,124,0)" rx="2" ry="2" />
<text  x="1046.62" y="1231.5" ></text>
</g>
<g >
<title>delete (46 samples, 0.01%)</title><rect x="337.7" y="1141" width="0.2" height="15.0" fill="rgb(229,127,52)" rx="2" ry="2" />
<text  x="340.71" y="1151.5" ></text>
</g>
<g >
<title>::allocator&lt;char&gt;::allocator (89 samples, 0.02%)</title><rect x="879.9" y="1333" width="0.3" height="15.0" fill="rgb(233,174,34)" rx="2" ry="2" />
<text  x="882.90" y="1343.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (683 samples, 0.18%)</title><rect x="653.0" y="1205" width="2.1" height="15.0" fill="rgb(214,174,0)" rx="2" ry="2" />
<text  x="655.97" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,693 samples, 0.71%)</title><rect x="948.4" y="1285" width="8.3" height="15.0" fill="rgb(233,216,6)" rx="2" ry="2" />
<text  x="951.38" y="1295.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (3,579 samples, 0.94%)</title><rect x="508.3" y="1109" width="11.1" height="15.0" fill="rgb(208,36,16)" rx="2" ry="2" />
<text  x="511.29" y="1119.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (57 samples, 0.02%)</title><rect x="650.0" y="1221" width="0.2" height="15.0" fill="rgb(220,169,1)" rx="2" ry="2" />
<text  x="653.04" y="1231.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (5,582 samples, 1.47%)</title><rect x="312.6" y="1221" width="17.4" height="15.0" fill="rgb(223,124,46)" rx="2" ry="2" />
<text  x="315.63" y="1231.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (518 samples, 0.14%)</title><rect x="641.2" y="1221" width="1.6" height="15.0" fill="rgb(244,76,46)" rx="2" ry="2" />
<text  x="644.16" y="1231.5" ></text>
</g>
<g >
<title>::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (170 samples, 0.04%)</title><rect x="1146.2" y="1285" width="0.5" height="15.0" fill="rgb(237,188,52)" rx="2" ry="2" />
<text  x="1149.18" y="1295.5" ></text>
</g>
<g >
<title>::_Hash_bytes (132 samples, 0.03%)</title><rect x="297.6" y="1253" width="0.4" height="15.0" fill="rgb(230,174,41)" rx="2" ry="2" />
<text  x="300.59" y="1263.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::allocate (530 samples, 0.14%)</title><rect x="323.8" y="1141" width="1.7" height="15.0" fill="rgb(234,212,46)" rx="2" ry="2" />
<text  x="326.83" y="1151.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::active (38 samples, 0.01%)</title><rect x="564.6" y="1173" width="0.1" height="15.0" fill="rgb(251,194,25)" rx="2" ry="2" />
<text  x="567.55" y="1183.5" ></text>
</g>
<g >
<title>::forward&lt;bool&gt; (60 samples, 0.02%)</title><rect x="687.2" y="1333" width="0.2" height="15.0" fill="rgb(249,110,48)" rx="2" ry="2" />
<text  x="690.22" y="1343.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_map (558 samples, 0.15%)</title><rect x="521.2" y="1077" width="1.8" height="15.0" fill="rgb(245,219,42)" rx="2" ry="2" />
<text  x="524.22" y="1087.5" ></text>
</g>
<g >
<title>::detail::estimateSpaceToReserve&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (585 samples, 0.15%)</title><rect x="964.7" y="1301" width="1.9" height="15.0" fill="rgb(219,177,2)" rx="2" ry="2" />
<text  x="967.75" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (898 samples, 0.24%)</title><rect x="957.1" y="1301" width="2.8" height="15.0" fill="rgb(237,228,44)" rx="2" ry="2" />
<text  x="960.06" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,331 samples, 0.35%)</title><rect x="657.6" y="1205" width="4.1" height="15.0" fill="rgb(242,69,53)" rx="2" ry="2" />
<text  x="660.55" y="1215.5" ></text>
</g>
<g >
<title>::Step (48 samples, 0.01%)</title><rect x="242.7" y="1381" width="0.1" height="15.0" fill="rgb(214,76,40)" rx="2" ry="2" />
<text  x="245.67" y="1391.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (583 samples, 0.15%)</title><rect x="469.6" y="1013" width="1.9" height="15.0" fill="rgb(253,203,12)" rx="2" ry="2" />
<text  x="472.64" y="1023.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrTableDeleter::operator (41 samples, 0.01%)</title><rect x="469.9" y="165" width="0.1" height="15.0" fill="rgb(226,167,28)" rx="2" ry="2" />
<text  x="472.90" y="175.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (88 samples, 0.02%)</title><rect x="830.2" y="1317" width="0.2" height="15.0" fill="rgb(220,0,30)" rx="2" ry="2" />
<text  x="833.17" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::cohort (185 samples, 0.05%)</title><rect x="345.9" y="1221" width="0.6" height="15.0" fill="rgb(226,115,21)" rx="2" ry="2" />
<text  x="348.88" y="1231.5" ></text>
</g>
<g >
<title>::is_constant_evaluated (312 samples, 0.08%)</title><rect x="881.6" y="1349" width="1.0" height="15.0" fill="rgb(222,4,40)" rx="2" ry="2" />
<text  x="884.61" y="1359.5" ></text>
</g>
<g >
<title>::Map (123 samples, 0.03%)</title><rect x="241.3" y="1477" width="0.4" height="15.0" fill="rgb(226,182,7)" rx="2" ry="2" />
<text  x="244.34" y="1487.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::push_obj (40 samples, 0.01%)</title><rect x="469.9" y="85" width="0.1" height="15.0" fill="rgb(243,193,39)" rx="2" ry="2" />
<text  x="472.90" y="95.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::push_links&lt;std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt; &gt; (1,213 samples, 0.32%)</title><rect x="527.8" y="1109" width="3.8" height="15.0" fill="rgb(239,165,39)" rx="2" ry="2" />
<text  x="530.81" y="1119.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (122 samples, 0.03%)</title><rect x="778.6" y="1333" width="0.4" height="15.0" fill="rgb(220,226,50)" rx="2" ry="2" />
<text  x="781.63" y="1343.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (67 samples, 0.02%)</title><rect x="565.1" y="1189" width="0.2" height="15.0" fill="rgb(223,68,41)" rx="2" ry="2" />
<text  x="568.12" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (277 samples, 0.07%)</title><rect x="468.5" y="1013" width="0.9" height="15.0" fill="rgb(239,173,8)" rx="2" ry="2" />
<text  x="471.49" y="1023.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (38 samples, 0.01%)</title><rect x="830.1" y="1301" width="0.1" height="15.0" fill="rgb(222,159,42)" rx="2" ry="2" />
<text  x="833.06" y="1311.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (90 samples, 0.02%)</title><rect x="1033.3" y="1269" width="0.2" height="15.0" fill="rgb(245,191,19)" rx="2" ry="2" />
<text  x="1036.27" y="1279.5" ></text>
</g>
<g >
<title>::operator&amp; (166 samples, 0.04%)</title><rect x="409.9" y="1157" width="0.6" height="15.0" fill="rgb(214,195,17)" rx="2" ry="2" />
<text  x="412.95" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (97 samples, 0.03%)</title><rect x="858.5" y="1333" width="0.3" height="15.0" fill="rgb(221,162,10)" rx="2" ry="2" />
<text  x="861.50" y="1343.5" ></text>
</g>
<g >
<title>::to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (92,895 samples, 24.47%)</title><rect x="846.8" y="1365" width="288.8" height="15.0" fill="rgb(213,110,39)" rx="2" ry="2" />
<text  x="849.85" y="1375.5" >::to&lt;std::__cxx11::basic_string&lt;char, ..</text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_map (863 samples, 0.23%)</title><rect x="332.6" y="1189" width="2.7" height="15.0" fill="rgb(217,6,38)" rx="2" ry="2" />
<text  x="335.63" y="1199.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (195 samples, 0.05%)</title><rect x="685.3" y="1333" width="0.6" height="15.0" fill="rgb(216,161,2)" rx="2" ry="2" />
<text  x="688.30" y="1343.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (200 samples, 0.05%)</title><rect x="239.9" y="1397" width="0.6" height="15.0" fill="rgb(241,144,48)" rx="2" ry="2" />
<text  x="242.92" y="1407.5" ></text>
</g>
<g >
<title>::distance&lt;char*&gt; (360 samples, 0.09%)</title><rect x="662.5" y="1221" width="1.1" height="15.0" fill="rgb(254,57,7)" rx="2" ry="2" />
<text  x="665.51" y="1231.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (581 samples, 0.15%)</title><rect x="811.1" y="1317" width="1.8" height="15.0" fill="rgb(209,21,13)" rx="2" ry="2" />
<text  x="814.14" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_retire_mutable_children (10,500 samples, 2.77%)</title><rect x="526.8" y="1141" width="32.7" height="15.0" fill="rgb(212,39,10)" rx="2" ry="2" />
<text  x="529.83" y="1151.5" >::..</text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (20,369 samples, 5.37%)</title><rect x="347.3" y="1205" width="63.4" height="15.0" fill="rgb(225,44,14)" rx="2" ry="2" />
<text  x="350.33" y="1215.5" >::hazp..</text>
</g>
<g >
<title>::toAppend&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (63 samples, 0.02%)</title><rect x="882.6" y="1349" width="0.2" height="15.0" fill="rgb(252,38,38)" rx="2" ry="2" />
<text  x="885.58" y="1359.5" ></text>
</g>
<g >
<title>::to_ascii_lower&lt;10ul, 20ul&gt; (23,154 samples, 6.10%)</title><rect x="1063.0" y="1301" width="72.0" height="15.0" fill="rgb(249,57,31)" rx="2" ry="2" />
<text  x="1065.98" y="1311.5" >::to_asc..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (88 samples, 0.02%)</title><rect x="298.0" y="1253" width="0.3" height="15.0" fill="rgb(253,157,36)" rx="2" ry="2" />
<text  x="301.01" y="1263.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (205 samples, 0.05%)</title><rect x="710.4" y="1285" width="0.7" height="15.0" fill="rgb(250,204,11)" rx="2" ry="2" />
<text  x="713.43" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (108 samples, 0.03%)</title><rect x="469.9" y="709" width="0.3" height="15.0" fill="rgb(219,139,43)" rx="2" ry="2" />
<text  x="472.86" y="719.5" ></text>
</g>
<g >
<title>::__deque_buf_size (41 samples, 0.01%)</title><rect x="523.6" y="1045" width="0.1" height="15.0" fill="rgb(229,105,49)" rx="2" ry="2" />
<text  x="526.62" y="1055.5" ></text>
</g>
<g >
<title>::__addressof&lt;char const&gt; (451 samples, 0.12%)</title><rect x="954.9" y="1221" width="1.4" height="15.0" fill="rgb(209,213,11)" rx="2" ry="2" />
<text  x="957.91" y="1231.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (10,666 samples, 2.81%)</title><rect x="473.2" y="1125" width="33.2" height="15.0" fill="rgb(253,163,15)" rx="2" ry="2" />
<text  x="476.24" y="1135.5" >::..</text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::getItem (67 samples, 0.02%)</title><rect x="685.1" y="1301" width="0.2" height="15.0" fill="rgb(221,151,35)" rx="2" ry="2" />
<text  x="688.05" y="1311.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::~allocator (38 samples, 0.01%)</title><rect x="473.6" y="1109" width="0.1" height="15.0" fill="rgb(241,82,26)" rx="2" ry="2" />
<text  x="476.60" y="1119.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (127 samples, 0.03%)</title><rect x="513.3" y="1045" width="0.4" height="15.0" fill="rgb(240,128,6)" rx="2" ry="2" />
<text  x="516.33" y="1055.5" ></text>
</g>
<g >
<title>::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (4,340 samples, 1.14%)</title><rect x="832.8" y="1349" width="13.5" height="15.0" fill="rgb(254,1,4)" rx="2" ry="2" />
<text  x="835.82" y="1359.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (37 samples, 0.01%)</title><rect x="485.8" y="1029" width="0.2" height="15.0" fill="rgb(236,57,1)" rx="2" ry="2" />
<text  x="488.84" y="1039.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::_Deque_impl (708 samples, 0.19%)</title><rect x="508.7" y="1077" width="2.2" height="15.0" fill="rgb(213,133,3)" rx="2" ry="2" />
<text  x="511.66" y="1087.5" ></text>
</g>
<g >
<title>::pair&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (4,742 samples, 1.25%)</title><rect x="832.1" y="1365" width="14.7" height="15.0" fill="rgb(245,54,20)" rx="2" ry="2" />
<text  x="835.11" y="1375.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (135 samples, 0.04%)</title><rect x="784.0" y="1333" width="0.4" height="15.0" fill="rgb(248,122,3)" rx="2" ry="2" />
<text  x="786.99" y="1343.5" ></text>
</g>
<g >
<title>::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (131 samples, 0.03%)</title><rect x="240.1" y="1301" width="0.4" height="15.0" fill="rgb(232,26,12)" rx="2" ry="2" />
<text  x="243.13" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (475 samples, 0.13%)</title><rect x="775.7" y="1317" width="1.5" height="15.0" fill="rgb(210,157,34)" rx="2" ry="2" />
<text  x="778.70" y="1327.5" ></text>
</g>
<g >
<title>::__deque_buf_size (36 samples, 0.01%)</title><rect x="549.9" y="1045" width="0.1" height="15.0" fill="rgb(249,193,6)" rx="2" ry="2" />
<text  x="552.93" y="1055.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (50 samples, 0.01%)</title><rect x="635.7" y="1237" width="0.1" height="15.0" fill="rgb(236,40,24)" rx="2" ry="2" />
<text  x="638.68" y="1247.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_cas (67 samples, 0.02%)</title><rect x="538.0" y="1109" width="0.2" height="15.0" fill="rgb(240,193,42)" rx="2" ry="2" />
<text  x="541.00" y="1119.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::store (153 samples, 0.04%)</title><rect x="350.4" y="1157" width="0.4" height="15.0" fill="rgb(214,186,7)" rx="2" ry="2" />
<text  x="353.36" y="1167.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (40 samples, 0.01%)</title><rect x="528.6" y="1093" width="0.2" height="15.0" fill="rgb(249,221,14)" rx="2" ry="2" />
<text  x="531.63" y="1103.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::head (3,780 samples, 1.00%)</title><rect x="383.7" y="1173" width="11.7" height="15.0" fill="rgb(211,43,31)" rx="2" ry="2" />
<text  x="386.69" y="1183.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::do_reclamation (16,587 samples, 4.37%)</title><rect x="1136.3" y="1397" width="51.6" height="15.0" fill="rgb(206,155,28)" rx="2" ry="2" />
<text  x="1139.29" y="1407.5" >::haz..</text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator* (39 samples, 0.01%)</title><rect x="551.3" y="1093" width="0.1" height="15.0" fill="rgb(248,2,6)" rx="2" ry="2" />
<text  x="554.31" y="1103.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (49 samples, 0.01%)</title><rect x="552.7" y="1093" width="0.2" height="15.0" fill="rgb(217,221,22)" rx="2" ry="2" />
<text  x="555.74" y="1103.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (40 samples, 0.01%)</title><rect x="469.9" y="101" width="0.1" height="15.0" fill="rgb(234,105,7)" rx="2" ry="2" />
<text  x="472.90" y="111.5" ></text>
</g>
<g >
<title>::addressof&lt;char&gt; (296 samples, 0.08%)</title><rect x="666.8" y="1205" width="0.9" height="15.0" fill="rgb(220,217,24)" rx="2" ry="2" />
<text  x="669.78" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (161 samples, 0.04%)</title><rect x="778.1" y="1333" width="0.5" height="15.0" fill="rgb(238,141,38)" rx="2" ry="2" />
<text  x="781.12" y="1343.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (2,386 samples, 0.63%)</title><rect x="519.4" y="1125" width="7.4" height="15.0" fill="rgb(206,87,50)" rx="2" ry="2" />
<text  x="522.42" y="1135.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,341 samples, 0.35%)</title><rect x="1042.4" y="1237" width="4.2" height="15.0" fill="rgb(243,28,24)" rx="2" ry="2" />
<text  x="1045.40" y="1247.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (69 samples, 0.02%)</title><rect x="352.5" y="1157" width="0.2" height="15.0" fill="rgb(239,191,41)" rx="2" ry="2" />
<text  x="355.48" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (79 samples, 0.02%)</title><rect x="630.3" y="1253" width="0.2" height="15.0" fill="rgb(229,68,29)" rx="2" ry="2" />
<text  x="633.29" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (41 samples, 0.01%)</title><rect x="469.9" y="197" width="0.1" height="15.0" fill="rgb(242,126,0)" rx="2" ry="2" />
<text  x="472.90" y="207.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (109 samples, 0.03%)</title><rect x="746.5" y="1301" width="0.4" height="15.0" fill="rgb(230,51,26)" rx="2" ry="2" />
<text  x="749.53" y="1311.5" ></text>
</g>
<g >
<title>::operator==&lt;char&gt; (5,066 samples, 1.33%)</title><rect x="579.6" y="1269" width="15.7" height="15.0" fill="rgb(234,70,2)" rx="2" ry="2" />
<text  x="582.56" y="1279.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (137 samples, 0.04%)</title><rect x="917.1" y="1285" width="0.4" height="15.0" fill="rgb(234,205,42)" rx="2" ry="2" />
<text  x="920.09" y="1295.5" ></text>
</g>
<g >
<title>::Step (62 samples, 0.02%)</title><rect x="242.6" y="1429" width="0.2" height="15.0" fill="rgb(242,44,24)" rx="2" ry="2" />
<text  x="245.63" y="1439.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::call_push_links (1,309 samples, 0.34%)</title><rect x="527.5" y="1125" width="4.1" height="15.0" fill="rgb(221,157,15)" rx="2" ry="2" />
<text  x="530.54" y="1135.5" ></text>
</g>
<g >
<title>::to_ascii_decimal&lt;20ul&gt; (23,694 samples, 6.24%)</title><rect x="1061.4" y="1317" width="73.7" height="15.0" fill="rgb(251,138,52)" rx="2" ry="2" />
<text  x="1064.43" y="1327.5" >::to_asc..</text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (33 samples, 0.01%)</title><rect x="524.6" y="1077" width="0.1" height="15.0" fill="rgb(207,20,47)" rx="2" ry="2" />
<text  x="527.58" y="1087.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1189" width="0.1" height="15.0" fill="rgb(239,207,20)" rx="2" ry="2" />
<text  x="245.72" y="1199.5" ></text>
</g>
<g >
<title>new (39 samples, 0.01%)</title><rect x="322.4" y="1141" width="0.1" height="15.0" fill="rgb(228,207,53)" rx="2" ry="2" />
<text  x="325.42" y="1151.5" ></text>
</g>
<g >
<title>::operator&amp; (140 samples, 0.04%)</title><rect x="293.2" y="1269" width="0.5" height="15.0" fill="rgb(225,213,19)" rx="2" ry="2" />
<text  x="296.24" y="1279.5" ></text>
</g>
<g >
<title>new (45 samples, 0.01%)</title><rect x="712.3" y="1317" width="0.1" height="15.0" fill="rgb(212,175,41)" rx="2" ry="2" />
<text  x="715.27" y="1327.5" ></text>
</g>
<g >
<title>::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_valptr (92 samples, 0.02%)</title><rect x="1143.2" y="1205" width="0.3" height="15.0" fill="rgb(253,143,2)" rx="2" ry="2" />
<text  x="1146.21" y="1215.5" ></text>
</g>
<g >
<title>::GetReferenceableValue (60 samples, 0.02%)</title><rect x="428.0" y="1189" width="0.2" height="15.0" fill="rgb(219,87,25)" rx="2" ry="2" />
<text  x="431.02" y="1199.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::copy (145 samples, 0.04%)</title><rect x="796.8" y="1301" width="0.5" height="15.0" fill="rgb(240,185,45)" rx="2" ry="2" />
<text  x="799.80" y="1311.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (274 samples, 0.07%)</title><rect x="926.4" y="1285" width="0.9" height="15.0" fill="rgb(250,187,18)" rx="2" ry="2" />
<text  x="929.41" y="1295.5" ></text>
</g>
<g >
<title>::SingletonThreadLocal&lt;folly::hazptr_tc&lt;std::atomic&gt;, folly::hazptr_tc_tls_tag, folly::detail::DefaultMake&lt;folly::hazptr_tc&lt;std::atomic&gt; &gt;, folly::hazptr_tc_tls_tag&gt;::Wrapper::operator folly::hazptr_tc&lt;std::atomic&gt;&amp; (74 samples, 0.02%)</title><rect x="707.6" y="1301" width="0.2" height="15.0" fill="rgb(235,224,9)" rx="2" ry="2" />
<text  x="710.62" y="1311.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (38 samples, 0.01%)</title><rect x="532.1" y="1109" width="0.1" height="15.0" fill="rgb(211,26,25)" rx="2" ry="2" />
<text  x="535.09" y="1119.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (795 samples, 0.21%)</title><rect x="735.3" y="1317" width="2.5" height="15.0" fill="rgb(245,152,22)" rx="2" ry="2" />
<text  x="738.29" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (1,140 samples, 0.30%)</title><rect x="468.3" y="1077" width="3.6" height="15.0" fill="rgb(237,67,17)" rx="2" ry="2" />
<text  x="471.31" y="1087.5" ></text>
</g>
<g >
<title>::operator&amp; (37 samples, 0.01%)</title><rect x="446.9" y="1173" width="0.1" height="15.0" fill="rgb(215,141,18)" rx="2" ry="2" />
<text  x="449.88" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (61 samples, 0.02%)</title><rect x="1059.6" y="1301" width="0.2" height="15.0" fill="rgb(250,80,7)" rx="2" ry="2" />
<text  x="1062.60" y="1311.5" ></text>
</g>
<g >
<title>::__addressof&lt;char&gt; (871 samples, 0.23%)</title><rect x="866.0" y="1285" width="2.7" height="15.0" fill="rgb(207,14,50)" rx="2" ry="2" />
<text  x="869.03" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::push_obj (73,574 samples, 19.38%)</title><rect x="343.5" y="1237" width="228.7" height="15.0" fill="rgb(253,200,48)" rx="2" ry="2" />
<text  x="346.45" y="1247.5" >::hazptr_obj&lt;std::atomic&gt;::pus..</text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1237" width="0.1" height="15.0" fill="rgb(254,51,14)" rx="2" ry="2" />
<text  x="245.72" y="1247.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (189 samples, 0.05%)</title><rect x="321.8" y="1141" width="0.6" height="15.0" fill="rgb(210,215,35)" rx="2" ry="2" />
<text  x="324.83" y="1151.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::next (3,386 samples, 0.89%)</title><rect x="1164.3" y="1365" width="10.5" height="15.0" fill="rgb(225,54,28)" rx="2" ry="2" />
<text  x="1167.31" y="1375.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3,616 samples, 0.95%)</title><rect x="1036.1" y="1285" width="11.3" height="15.0" fill="rgb(212,8,22)" rx="2" ry="2" />
<text  x="1039.12" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::head (63 samples, 0.02%)</title><rect x="468.9" y="981" width="0.2" height="15.0" fill="rgb(239,212,34)" rx="2" ry="2" />
<text  x="471.92" y="991.5" ></text>
</g>
<g >
<title>::move&lt;folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;&amp;&gt; (90 samples, 0.02%)</title><rect x="681.5" y="1301" width="0.2" height="15.0" fill="rgb(248,85,3)" rx="2" ry="2" />
<text  x="684.45" y="1311.5" ></text>
</g>
<g >
<title>::operator&amp; (146 samples, 0.04%)</title><rect x="845.7" y="1317" width="0.5" height="15.0" fill="rgb(216,98,47)" rx="2" ry="2" />
<text  x="848.75" y="1327.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (518 samples, 0.14%)</title><rect x="508.9" y="1061" width="1.6" height="15.0" fill="rgb(224,146,32)" rx="2" ry="2" />
<text  x="511.88" y="1071.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deallocate (209 samples, 0.06%)</title><rect x="523.8" y="1045" width="0.7" height="15.0" fill="rgb(249,177,2)" rx="2" ry="2" />
<text  x="526.84" y="1055.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (140 samples, 0.04%)</title><rect x="960.4" y="1301" width="0.4" height="15.0" fill="rgb(224,160,41)" rx="2" ry="2" />
<text  x="963.36" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (45 samples, 0.01%)</title><rect x="630.6" y="1253" width="0.2" height="15.0" fill="rgb(241,127,4)" rx="2" ry="2" />
<text  x="633.62" y="1263.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::load (146 samples, 0.04%)</title><rect x="239.4" y="1413" width="0.5" height="15.0" fill="rgb(211,3,42)" rx="2" ry="2" />
<text  x="242.43" y="1423.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (169 samples, 0.04%)</title><rect x="668.0" y="1237" width="0.5" height="15.0" fill="rgb(253,45,18)" rx="2" ry="2" />
<text  x="670.97" y="1247.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (834 samples, 0.22%)</title><rect x="953.7" y="1237" width="2.6" height="15.0" fill="rgb(230,215,12)" rx="2" ry="2" />
<text  x="956.72" y="1247.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (244 samples, 0.06%)</title><rect x="469.8" y="917" width="0.7" height="15.0" fill="rgb(244,44,23)" rx="2" ry="2" />
<text  x="472.76" y="927.5" ></text>
</g>
<g >
<title>delete (79 samples, 0.02%)</title><rect x="506.1" y="1093" width="0.3" height="15.0" fill="rgb(218,43,40)" rx="2" ry="2" />
<text  x="509.12" y="1103.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (72,572 samples, 19.12%)</title><rect x="346.5" y="1221" width="225.6" height="15.0" fill="rgb(218,71,2)" rx="2" ry="2" />
<text  x="349.53" y="1231.5" >::hazptr_obj_cohort&lt;std::atom..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3,690 samples, 0.97%)</title><rect x="788.8" y="1365" width="11.4" height="15.0" fill="rgb(239,158,7)" rx="2" ry="2" />
<text  x="791.77" y="1375.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (125 samples, 0.03%)</title><rect x="551.6" y="1093" width="0.4" height="15.0" fill="rgb(224,83,31)" rx="2" ry="2" />
<text  x="554.56" y="1103.5" ></text>
</g>
<g >
<title>::operator&amp; (65 samples, 0.02%)</title><rect x="578.4" y="1221" width="0.3" height="15.0" fill="rgb(249,20,6)" rx="2" ry="2" />
<text  x="581.45" y="1231.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (537 samples, 0.14%)</title><rect x="783.1" y="1349" width="1.7" height="15.0" fill="rgb(206,52,16)" rx="2" ry="2" />
<text  x="786.09" y="1359.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (101 samples, 0.03%)</title><rect x="777.6" y="1333" width="0.3" height="15.0" fill="rgb(254,219,10)" rx="2" ry="2" />
<text  x="780.63" y="1343.5" ></text>
</g>
<g >
<title>::Step (34 samples, 0.01%)</title><rect x="242.7" y="1317" width="0.1" height="15.0" fill="rgb(222,186,35)" rx="2" ry="2" />
<text  x="245.72" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (309 samples, 0.08%)</title><rect x="640.2" y="1221" width="1.0" height="15.0" fill="rgb(215,171,23)" rx="2" ry="2" />
<text  x="643.20" y="1231.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::store (971 samples, 0.26%)</title><rect x="287.7" y="1285" width="3.0" height="15.0" fill="rgb(238,200,13)" rx="2" ry="2" />
<text  x="290.67" y="1295.5" ></text>
</g>
<g >
<title>::max&lt;unsigned long&gt; (67 samples, 0.02%)</title><rect x="519.0" y="1061" width="0.2" height="15.0" fill="rgb(250,98,22)" rx="2" ry="2" />
<text  x="522.02" y="1071.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (116 samples, 0.03%)</title><rect x="470.5" y="901" width="0.4" height="15.0" fill="rgb(249,121,54)" rx="2" ry="2" />
<text  x="473.53" y="911.5" ></text>
</g>
<g >
<title>::atomic&lt;void const*&gt;::store (962 samples, 0.25%)</title><rect x="290.7" y="1285" width="3.0" height="15.0" fill="rgb(241,107,12)" rx="2" ry="2" />
<text  x="293.69" y="1295.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (2,416 samples, 0.64%)</title><rect x="552.0" y="1125" width="7.5" height="15.0" fill="rgb(246,177,36)" rx="2" ry="2" />
<text  x="554.97" y="1135.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (127 samples, 0.03%)</title><rect x="240.1" y="1285" width="0.4" height="15.0" fill="rgb(216,55,34)" rx="2" ry="2" />
<text  x="243.14" y="1295.5" ></text>
</g>
<g >
<title>::mutex::lock (1,619 samples, 0.43%)</title><rect x="607.7" y="1253" width="5.0" height="15.0" fill="rgb(210,165,29)" rx="2" ry="2" />
<text  x="610.66" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::call_push_links (33 samples, 0.01%)</title><rect x="309.4" y="1253" width="0.1" height="15.0" fill="rgb(228,73,1)" rx="2" ry="2" />
<text  x="312.38" y="1263.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (103 samples, 0.03%)</title><rect x="724.3" y="1365" width="0.3" height="15.0" fill="rgb(210,22,49)" rx="2" ry="2" />
<text  x="727.27" y="1375.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3,724 samples, 0.98%)</title><rect x="489.1" y="981" width="11.6" height="15.0" fill="rgb(230,79,9)" rx="2" ry="2" />
<text  x="492.08" y="991.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (52 samples, 0.01%)</title><rect x="667.8" y="1237" width="0.2" height="15.0" fill="rgb(236,127,9)" rx="2" ry="2" />
<text  x="670.80" y="1247.5" ></text>
</g>
<g >
<title>::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_v (121 samples, 0.03%)</title><rect x="1144.6" y="1221" width="0.4" height="15.0" fill="rgb(214,58,47)" rx="2" ry="2" />
<text  x="1147.61" y="1231.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;void const*, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void const*, false&gt; &gt; &gt; &gt; (99 samples, 0.03%)</title><rect x="1136.6" y="1333" width="0.3" height="15.0" fill="rgb(229,29,48)" rx="2" ry="2" />
<text  x="1139.59" y="1343.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::find (2,639 samples, 0.70%)</title><rect x="1139.0" y="1301" width="8.2" height="15.0" fill="rgb(212,79,40)" rx="2" ry="2" />
<text  x="1142.02" y="1311.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (45 samples, 0.01%)</title><rect x="470.7" y="789" width="0.1" height="15.0" fill="rgb(251,90,49)" rx="2" ry="2" />
<text  x="473.70" y="799.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::tagged (74 samples, 0.02%)</title><rect x="442.1" y="1189" width="0.3" height="15.0" fill="rgb(239,97,36)" rx="2" ry="2" />
<text  x="445.13" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,176 samples, 0.84%)</title><rect x="868.9" y="1333" width="9.9" height="15.0" fill="rgb(205,76,10)" rx="2" ry="2" />
<text  x="871.94" y="1343.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::_Tuple_impl (389 samples, 0.10%)</title><rect x="627.5" y="1253" width="1.2" height="15.0" fill="rgb(251,116,1)" rx="2" ry="2" />
<text  x="630.48" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (41 samples, 0.01%)</title><rect x="469.9" y="213" width="0.1" height="15.0" fill="rgb(218,96,54)" rx="2" ry="2" />
<text  x="472.90" y="223.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (74 samples, 0.02%)</title><rect x="331.2" y="1205" width="0.2" height="15.0" fill="rgb(212,170,3)" rx="2" ry="2" />
<text  x="334.19" y="1215.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::push_obj (108 samples, 0.03%)</title><rect x="469.9" y="661" width="0.3" height="15.0" fill="rgb(229,91,6)" rx="2" ry="2" />
<text  x="472.86" y="671.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::push_obj (58 samples, 0.02%)</title><rect x="469.9" y="277" width="0.2" height="15.0" fill="rgb(240,86,54)" rx="2" ry="2" />
<text  x="472.89" y="287.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_data (105 samples, 0.03%)</title><rect x="338.5" y="1205" width="0.3" height="15.0" fill="rgb(248,17,1)" rx="2" ry="2" />
<text  x="341.50" y="1215.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (57 samples, 0.02%)</title><rect x="513.5" y="1029" width="0.1" height="15.0" fill="rgb(218,196,10)" rx="2" ry="2" />
<text  x="516.45" y="1039.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (16,003 samples, 4.22%)</title><rect x="730.0" y="1349" width="49.7" height="15.0" fill="rgb(227,189,16)" rx="2" ry="2" />
<text  x="732.97" y="1359.5" >::__c..</text>
</g>
<g >
<title>::hazptr_detail::shared_head_only_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (40 samples, 0.01%)</title><rect x="460.2" y="1141" width="0.1" height="15.0" fill="rgb(210,191,40)" rx="2" ry="2" />
<text  x="463.16" y="1151.5" ></text>
</g>
<g >
<title>$plt (54 samples, 0.01%)</title><rect x="752.5" y="1301" width="0.2" height="15.0" fill="rgb(239,60,11)" rx="2" ry="2" />
<text  x="755.50" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::operator (135 samples, 0.04%)</title><rect x="604.5" y="1285" width="0.5" height="15.0" fill="rgb(224,46,26)" rx="2" ry="2" />
<text  x="607.53" y="1295.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (6,902 samples, 1.82%)</title><rect x="484.5" y="1061" width="21.5" height="15.0" fill="rgb(244,2,35)" rx="2" ry="2" />
<text  x="487.53" y="1071.5" >:..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (80 samples, 0.02%)</title><rect x="1059.4" y="1301" width="0.2" height="15.0" fill="rgb(253,67,37)" rx="2" ry="2" />
<text  x="1062.35" y="1311.5" ></text>
</g>
<g >
<title>::forward&lt;bool&gt; (75 samples, 0.02%)</title><rect x="689.0" y="1317" width="0.2" height="15.0" fill="rgb(237,65,22)" rx="2" ry="2" />
<text  x="692.01" y="1327.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (84 samples, 0.02%)</title><rect x="470.6" y="869" width="0.3" height="15.0" fill="rgb(242,3,4)" rx="2" ry="2" />
<text  x="473.63" y="879.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (352 samples, 0.09%)</title><rect x="487.8" y="981" width="1.0" height="15.0" fill="rgb(236,166,35)" rx="2" ry="2" />
<text  x="490.75" y="991.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (114,868 samples, 30.26%)</title><rect x="260.3" y="1317" width="357.1" height="15.0" fill="rgb(244,38,32)" rx="2" ry="2" />
<text  x="263.30" y="1327.5" >::detail::concurrenthashmap::bucket::BucketTable..</text>
</g>
<g >
<title>::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash (82 samples, 0.02%)</title><rect x="1142.8" y="1205" width="0.2" height="15.0" fill="rgb(223,36,49)" rx="2" ry="2" />
<text  x="1145.75" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (129 samples, 0.03%)</title><rect x="698.0" y="1333" width="0.4" height="15.0" fill="rgb(206,157,19)" rx="2" ry="2" />
<text  x="700.98" y="1343.5" ></text>
</g>
<g >
<title>::hazptr_obj_list&lt;std::atomic&gt;::empty (44 samples, 0.01%)</title><rect x="564.7" y="1173" width="0.1" height="15.0" fill="rgb(219,91,16)" rx="2" ry="2" />
<text  x="567.67" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3,709 samples, 0.98%)</title><rect x="755.1" y="1317" width="11.5" height="15.0" fill="rgb(215,155,28)" rx="2" ry="2" />
<text  x="758.11" y="1327.5" ></text>
</g>
<g >
<title>::toAppendFit&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (81,337 samples, 21.43%)</title><rect x="882.8" y="1349" width="252.8" height="15.0" fill="rgb(208,117,18)" rx="2" ry="2" />
<text  x="885.78" y="1359.5" >::toAppendFit&lt;unsigned long, std:..</text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::active (38 samples, 0.01%)</title><rect x="469.4" y="1013" width="0.1" height="15.0" fill="rgb(232,89,31)" rx="2" ry="2" />
<text  x="472.36" y="1023.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::allocate (156 samples, 0.04%)</title><rect x="917.5" y="1285" width="0.5" height="15.0" fill="rgb(223,75,41)" rx="2" ry="2" />
<text  x="920.51" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::check_count_threshold (60 samples, 0.02%)</title><rect x="431.2" y="1141" width="0.1" height="15.0" fill="rgb(243,14,1)" rx="2" ry="2" />
<text  x="434.16" y="1151.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_create_nodes (509 samples, 0.13%)</title><rect x="546.8" y="1061" width="1.6" height="15.0" fill="rgb(225,197,50)" rx="2" ry="2" />
<text  x="549.77" y="1071.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (7,143 samples, 1.88%)</title><rect x="905.1" y="1301" width="22.2" height="15.0" fill="rgb(225,81,45)" rx="2" ry="2" />
<text  x="908.06" y="1311.5" >:..</text>
</g>
<g >
<title>::Ignore::Ignore&lt;unsigned long&gt; (129 samples, 0.03%)</title><rect x="890.8" y="1317" width="0.4" height="15.0" fill="rgb(225,19,35)" rx="2" ry="2" />
<text  x="893.81" y="1327.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (92 samples, 0.02%)</title><rect x="686.5" y="1349" width="0.3" height="15.0" fill="rgb(214,51,37)" rx="2" ry="2" />
<text  x="689.52" y="1359.5" ></text>
</g>
<g >
<title>::pair&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (4,512 samples, 1.19%)</title><rect x="698.4" y="1349" width="14.0" height="15.0" fill="rgb(239,106,33)" rx="2" ry="2" />
<text  x="701.38" y="1359.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::allocate (562 samples, 0.15%)</title><rect x="320.8" y="1157" width="1.7" height="15.0" fill="rgb(230,2,18)" rx="2" ry="2" />
<text  x="323.79" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (767 samples, 0.20%)</title><rect x="1024.5" y="1269" width="2.4" height="15.0" fill="rgb(238,2,43)" rx="2" ry="2" />
<text  x="1027.50" y="1279.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (481 samples, 0.13%)</title><rect x="252.0" y="1333" width="1.5" height="15.0" fill="rgb(223,84,22)" rx="2" ry="2" />
<text  x="255.00" y="1343.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrTableDeleter::operator (108 samples, 0.03%)</title><rect x="469.9" y="741" width="0.3" height="15.0" fill="rgb(254,49,18)" rx="2" ry="2" />
<text  x="472.86" y="751.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (52 samples, 0.01%)</title><rect x="329.1" y="1173" width="0.1" height="15.0" fill="rgb(250,111,20)" rx="2" ry="2" />
<text  x="332.06" y="1183.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_node (566 samples, 0.15%)</title><rect x="336.1" y="1173" width="1.8" height="15.0" fill="rgb(222,111,29)" rx="2" ry="2" />
<text  x="339.09" y="1183.5" ></text>
</g>
<g >
<title>::GetReferenceableValue (69 samples, 0.02%)</title><rect x="604.3" y="1253" width="0.2" height="15.0" fill="rgb(228,50,38)" rx="2" ry="2" />
<text  x="607.27" y="1263.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (1,602 samples, 0.42%)</title><rect x="1182.7" y="1333" width="5.0" height="15.0" fill="rgb(240,118,42)" rx="2" ry="2" />
<text  x="1185.72" y="1343.5" ></text>
</g>
<g >
<title>::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (62 samples, 0.02%)</title><rect x="692.7" y="1317" width="0.2" height="15.0" fill="rgb(254,226,16)" rx="2" ry="2" />
<text  x="695.75" y="1327.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (251 samples, 0.07%)</title><rect x="333.1" y="1173" width="0.7" height="15.0" fill="rgb(224,171,54)" rx="2" ry="2" />
<text  x="336.06" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,075 samples, 0.81%)</title><rect x="820.9" y="1333" width="9.5" height="15.0" fill="rgb(214,149,14)" rx="2" ry="2" />
<text  x="823.89" y="1343.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (145 samples, 0.04%)</title><rect x="944.5" y="1285" width="0.4" height="15.0" fill="rgb(239,216,12)" rx="2" ry="2" />
<text  x="947.47" y="1295.5" ></text>
</g>
<g >
<title>delete (228 samples, 0.06%)</title><rect x="820.0" y="1301" width="0.7" height="15.0" fill="rgb(246,84,47)" rx="2" ry="2" />
<text  x="822.95" y="1311.5" ></text>
</g>
<g >
<title>delete (44 samples, 0.01%)</title><rect x="500.5" y="965" width="0.2" height="15.0" fill="rgb(244,163,4)" rx="2" ry="2" />
<text  x="503.52" y="975.5" ></text>
</g>
<g >
<title>::GetReferenceableValue (178 samples, 0.05%)</title><rect x="574.4" y="1237" width="0.6" height="15.0" fill="rgb(209,215,54)" rx="2" ry="2" />
<text  x="577.42" y="1247.5" ></text>
</g>
<g >
<title>::__aligned_buffer&lt;void const*&gt;::_M_ptr (71 samples, 0.02%)</title><rect x="1144.8" y="1189" width="0.2" height="15.0" fill="rgb(217,75,26)" rx="2" ry="2" />
<text  x="1147.76" y="1199.5" ></text>
</g>
<g >
<title>::__deque_buf_size (54 samples, 0.01%)</title><rect x="515.6" y="1029" width="0.2" height="15.0" fill="rgb(233,52,51)" rx="2" ry="2" />
<text  x="518.61" y="1039.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,135 samples, 0.56%)</title><rect x="1029.5" y="1285" width="6.6" height="15.0" fill="rgb(209,200,48)" rx="2" ry="2" />
<text  x="1032.48" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::hazptr_obj_base_linked (513 samples, 0.14%)</title><rect x="682.3" y="1317" width="1.6" height="15.0" fill="rgb(249,61,24)" rx="2" ry="2" />
<text  x="685.27" y="1327.5" ></text>
</g>
<g >
<title>::unique_lock&lt;std::mutex&gt;::unique_lock (2,251 samples, 0.59%)</title><rect x="605.7" y="1285" width="7.0" height="15.0" fill="rgb(226,45,3)" rx="2" ry="2" />
<text  x="608.69" y="1295.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocator (47 samples, 0.01%)</title><rect x="542.6" y="1061" width="0.2" height="15.0" fill="rgb(219,162,18)" rx="2" ry="2" />
<text  x="545.65" y="1071.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_map (1,043 samples, 0.27%)</title><rect x="319.3" y="1173" width="3.2" height="15.0" fill="rgb(227,111,3)" rx="2" ry="2" />
<text  x="322.29" y="1183.5" ></text>
</g>
<g >
<title>::operator&amp; (121 samples, 0.03%)</title><rect x="290.3" y="1269" width="0.4" height="15.0" fill="rgb(210,48,45)" rx="2" ry="2" />
<text  x="293.31" y="1279.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deallocate (181 samples, 0.05%)</title><rect x="556.7" y="1045" width="0.5" height="15.0" fill="rgb(212,21,12)" rx="2" ry="2" />
<text  x="559.67" y="1055.5" ></text>
</g>
<g >
<title>::__detail::_Mod_range_hashing::operator (116 samples, 0.03%)</title><rect x="1143.7" y="1221" width="0.4" height="15.0" fill="rgb(224,173,43)" rx="2" ry="2" />
<text  x="1146.71" y="1231.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (99 samples, 0.03%)</title><rect x="765.9" y="1285" width="0.3" height="15.0" fill="rgb(222,185,47)" rx="2" ry="2" />
<text  x="768.90" y="1295.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (38 samples, 0.01%)</title><rect x="648.2" y="1205" width="0.2" height="15.0" fill="rgb(238,21,15)" rx="2" ry="2" />
<text  x="651.23" y="1215.5" ></text>
</g>
<g >
<title>::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::tuple&lt;true, true&gt; (654 samples, 0.17%)</title><rect x="626.7" y="1269" width="2.0" height="15.0" fill="rgb(220,204,40)" rx="2" ry="2" />
<text  x="629.66" y="1279.5" ></text>
</g>
<g >
<title>::mutex::unlock (881 samples, 0.23%)</title><rect x="613.4" y="1269" width="2.7" height="15.0" fill="rgb(233,67,1)" rx="2" ry="2" />
<text  x="616.39" y="1279.5" ></text>
</g>
<g >
<title>::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, false&gt;::_M_head (310 samples, 0.08%)</title><rect x="671.4" y="1205" width="1.0" height="15.0" fill="rgb(223,187,39)" rx="2" ry="2" />
<text  x="674.40" y="1215.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (40 samples, 0.01%)</title><rect x="470.2" y="693" width="0.1" height="15.0" fill="rgb(223,185,29)" rx="2" ry="2" />
<text  x="473.21" y="703.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~deque (3,511 samples, 0.93%)</title><rect x="330.4" y="1221" width="10.9" height="15.0" fill="rgb(225,38,20)" rx="2" ry="2" />
<text  x="333.38" y="1231.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::call_push_links (255 samples, 0.07%)</title><rect x="310.4" y="1237" width="0.7" height="15.0" fill="rgb(217,212,18)" rx="2" ry="2" />
<text  x="313.36" y="1247.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::exchange (110 samples, 0.03%)</title><rect x="429.4" y="1157" width="0.4" height="15.0" fill="rgb(205,203,4)" rx="2" ry="2" />
<text  x="432.42" y="1167.5" ></text>
</g>
<g >
<title>::__distance&lt;char*&gt; (224 samples, 0.06%)</title><rect x="662.9" y="1205" width="0.7" height="15.0" fill="rgb(250,55,21)" rx="2" ry="2" />
<text  x="665.86" y="1215.5" ></text>
</g>
<g >
<title>::GetReferenceableValue (107 samples, 0.03%)</title><rect x="675.5" y="1285" width="0.3" height="15.0" fill="rgb(241,70,53)" rx="2" ry="2" />
<text  x="678.45" y="1295.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (99 samples, 0.03%)</title><rect x="560.0" y="1125" width="0.3" height="15.0" fill="rgb(233,1,48)" rx="2" ry="2" />
<text  x="563.03" y="1135.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (38 samples, 0.01%)</title><rect x="831.5" y="1349" width="0.1" height="15.0" fill="rgb(209,162,35)" rx="2" ry="2" />
<text  x="834.46" y="1359.5" ></text>
</g>
<g >
<title>::GetReferenceableValue (35 samples, 0.01%)</title><rect x="309.2" y="1253" width="0.2" height="15.0" fill="rgb(234,166,11)" rx="2" ry="2" />
<text  x="312.24" y="1263.5" ></text>
</g>
<g >
<title>::_Hash_bytes (1,203 samples, 0.32%)</title><rect x="693.4" y="1333" width="3.8" height="15.0" fill="rgb(219,165,44)" rx="2" ry="2" />
<text  x="696.43" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (100 samples, 0.03%)</title><rect x="1009.9" y="1317" width="0.3" height="15.0" fill="rgb(217,14,38)" rx="2" ry="2" />
<text  x="1012.89" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4,274 samples, 1.13%)</title><rect x="487.4" y="997" width="13.3" height="15.0" fill="rgb(248,63,20)" rx="2" ry="2" />
<text  x="490.37" y="1007.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1173" width="0.1" height="15.0" fill="rgb(250,183,4)" rx="2" ry="2" />
<text  x="245.72" y="1183.5" ></text>
</g>
<g >
<title>::__atomic_base&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::__atomic_base (217 samples, 0.06%)</title><rect x="619.2" y="1301" width="0.7" height="15.0" fill="rgb(239,112,12)" rx="2" ry="2" />
<text  x="622.22" y="1311.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::top (279 samples, 0.07%)</title><rect x="551.1" y="1125" width="0.9" height="15.0" fill="rgb(207,50,8)" rx="2" ry="2" />
<text  x="554.10" y="1135.5" ></text>
</g>
<g >
<title>::__addressof&lt;char&gt; (161 samples, 0.04%)</title><rect x="667.2" y="1189" width="0.5" height="15.0" fill="rgb(222,98,28)" rx="2" ry="2" />
<text  x="670.20" y="1199.5" ></text>
</g>
<g >
<title>::atomic&lt;void const*&gt;::store (82 samples, 0.02%)</title><rect x="846.3" y="1349" width="0.3" height="15.0" fill="rgb(238,116,19)" rx="2" ry="2" />
<text  x="849.32" y="1359.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::cas_head (61 samples, 0.02%)</title><rect x="348.2" y="1189" width="0.2" height="15.0" fill="rgb(219,124,1)" rx="2" ry="2" />
<text  x="351.22" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::inc_count (2,529 samples, 0.67%)</title><rect x="447.1" y="1205" width="7.9" height="15.0" fill="rgb(227,3,48)" rx="2" ry="2" />
<text  x="450.10" y="1215.5" ></text>
</g>
<g >
<title>::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash (115 samples, 0.03%)</title><rect x="1146.3" y="1269" width="0.3" height="15.0" fill="rgb(208,19,51)" rx="2" ry="2" />
<text  x="1149.28" y="1279.5" ></text>
</g>
<g >
<title>::Check_LTImpl&lt;unsigned int, unsigned int&gt; (269 samples, 0.07%)</title><rect x="677.1" y="1269" width="0.8" height="15.0" fill="rgb(234,57,24)" rx="2" ry="2" />
<text  x="680.11" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (122 samples, 0.03%)</title><rect x="665.3" y="1237" width="0.4" height="15.0" fill="rgb(244,145,8)" rx="2" ry="2" />
<text  x="668.34" y="1247.5" ></text>
</g>
<g >
<title>::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (73 samples, 0.02%)</title><rect x="469.9" y="517" width="0.2" height="15.0" fill="rgb(226,4,48)" rx="2" ry="2" />
<text  x="472.88" y="527.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (143 samples, 0.04%)</title><rect x="777.2" y="1317" width="0.4" height="15.0" fill="rgb(243,224,7)" rx="2" ry="2" />
<text  x="780.18" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::safe_list_top (2,315 samples, 0.61%)</title><rect x="564.9" y="1205" width="7.2" height="15.0" fill="rgb(222,126,27)" rx="2" ry="2" />
<text  x="567.94" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (287 samples, 0.08%)</title><rect x="644.4" y="1205" width="0.9" height="15.0" fill="rgb(219,218,46)" rx="2" ry="2" />
<text  x="647.38" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (517 samples, 0.14%)</title><rect x="797.7" y="1301" width="1.6" height="15.0" fill="rgb(249,17,35)" rx="2" ry="2" />
<text  x="800.69" y="1311.5" ></text>
</g>
<g >
<title>::move&lt;folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;&amp;&gt; (35 samples, 0.01%)</title><rect x="674.6" y="1285" width="0.2" height="15.0" fill="rgb(205,27,41)" rx="2" ry="2" />
<text  x="677.65" y="1295.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (220 samples, 0.06%)</title><rect x="526.1" y="1077" width="0.7" height="15.0" fill="rgb(230,95,47)" rx="2" ry="2" />
<text  x="529.15" y="1087.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::copy (827 samples, 0.22%)</title><rect x="1033.5" y="1269" width="2.6" height="15.0" fill="rgb(239,159,24)" rx="2" ry="2" />
<text  x="1036.55" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_domain_push_retired&lt;std::atomic&gt; (83 samples, 0.02%)</title><rect x="460.1" y="1173" width="0.3" height="15.0" fill="rgb(215,126,11)" rx="2" ry="2" />
<text  x="463.14" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (172 samples, 0.05%)</title><rect x="588.2" y="1253" width="0.5" height="15.0" fill="rgb(206,135,10)" rx="2" ry="2" />
<text  x="591.18" y="1263.5" ></text>
</g>
<g >
<title>::OrderInstall (46 samples, 0.01%)</title><rect x="241.8" y="1477" width="0.1" height="15.0" fill="rgb(218,166,54)" rx="2" ry="2" />
<text  x="244.77" y="1487.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (192 samples, 0.05%)</title><rect x="239.9" y="1333" width="0.6" height="15.0" fill="rgb(247,171,45)" rx="2" ry="2" />
<text  x="242.94" y="1343.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (661 samples, 0.17%)</title><rect x="746.9" y="1301" width="2.0" height="15.0" fill="rgb(242,176,34)" rx="2" ry="2" />
<text  x="749.87" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (105 samples, 0.03%)</title><rect x="469.9" y="613" width="0.3" height="15.0" fill="rgb(222,174,6)" rx="2" ry="2" />
<text  x="472.87" y="623.5" ></text>
</g>
<g >
<title>::Step (54 samples, 0.01%)</title><rect x="242.7" y="1413" width="0.1" height="15.0" fill="rgb(224,202,32)" rx="2" ry="2" />
<text  x="245.66" y="1423.5" ></text>
</g>
<g >
<title>::__addressof&lt;char const&gt; (83 samples, 0.02%)</title><rect x="505.0" y="933" width="0.3" height="15.0" fill="rgb(237,123,31)" rx="2" ry="2" />
<text  x="508.03" y="943.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (169 samples, 0.04%)</title><rect x="572.2" y="1237" width="0.5" height="15.0" fill="rgb(209,17,31)" rx="2" ry="2" />
<text  x="575.18" y="1247.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (162 samples, 0.04%)</title><rect x="396.1" y="1173" width="0.5" height="15.0" fill="rgb(234,174,38)" rx="2" ry="2" />
<text  x="399.08" y="1183.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_set_node (533 samples, 0.14%)</title><rect x="548.4" y="1061" width="1.6" height="15.0" fill="rgb(219,30,36)" rx="2" ry="2" />
<text  x="551.39" y="1071.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1,085 samples, 0.29%)</title><rect x="855.0" y="1333" width="3.4" height="15.0" fill="rgb(217,4,38)" rx="2" ry="2" />
<text  x="857.99" y="1343.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;unsigned char&gt;::allocate (152 samples, 0.04%)</title><rect x="622.0" y="1301" width="0.5" height="15.0" fill="rgb(224,188,9)" rx="2" ry="2" />
<text  x="624.99" y="1311.5" ></text>
</g>
<g >
<title>::get&lt;1ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (354 samples, 0.09%)</title><rect x="711.1" y="1317" width="1.1" height="15.0" fill="rgb(236,92,4)" rx="2" ry="2" />
<text  x="714.07" y="1327.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::deallocate (147 samples, 0.04%)</title><rect x="814.0" y="1317" width="0.4" height="15.0" fill="rgb(232,90,37)" rx="2" ry="2" />
<text  x="816.99" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (105 samples, 0.03%)</title><rect x="1009.6" y="1317" width="0.3" height="15.0" fill="rgb(248,228,47)" rx="2" ry="2" />
<text  x="1012.56" y="1327.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (246 samples, 0.06%)</title><rect x="798.4" y="1269" width="0.8" height="15.0" fill="rgb(222,41,18)" rx="2" ry="2" />
<text  x="801.42" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (683 samples, 0.18%)</title><rect x="797.3" y="1317" width="2.1" height="15.0" fill="rgb(221,27,13)" rx="2" ry="2" />
<text  x="800.25" y="1327.5" ></text>
</g>
<g >
<title>::unique_lock&lt;std::mutex&gt;::lock (1,849 samples, 0.49%)</title><rect x="606.9" y="1269" width="5.8" height="15.0" fill="rgb(229,90,15)" rx="2" ry="2" />
<text  x="609.94" y="1279.5" ></text>
</g>
<g >
<title>::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (63 samples, 0.02%)</title><rect x="691.5" y="1285" width="0.2" height="15.0" fill="rgb(223,162,7)" rx="2" ry="2" />
<text  x="694.46" y="1295.5" ></text>
</g>
<g >
<title>::atomic&lt;void const*&gt;::store (96 samples, 0.03%)</title><rect x="261.3" y="1301" width="0.3" height="15.0" fill="rgb(244,161,41)" rx="2" ry="2" />
<text  x="264.29" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (114 samples, 0.03%)</title><rect x="887.1" y="1333" width="0.3" height="15.0" fill="rgb(248,119,51)" rx="2" ry="2" />
<text  x="890.08" y="1343.5" ></text>
</g>
<g >
<title>::unique_lock&lt;std::mutex&gt;::unlock (49 samples, 0.01%)</title><rect x="616.6" y="1269" width="0.1" height="15.0" fill="rgb(245,91,52)" rx="2" ry="2" />
<text  x="619.55" y="1279.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (99 samples, 0.03%)</title><rect x="551.6" y="1077" width="0.4" height="15.0" fill="rgb(228,136,13)" rx="2" ry="2" />
<text  x="554.65" y="1087.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (80 samples, 0.02%)</title><rect x="320.0" y="1141" width="0.3" height="15.0" fill="rgb(222,174,7)" rx="2" ry="2" />
<text  x="323.04" y="1151.5" ></text>
</g>
<g >
<title>::__deque_buf_size (192 samples, 0.05%)</title><rect x="327.5" y="1141" width="0.6" height="15.0" fill="rgb(217,7,14)" rx="2" ry="2" />
<text  x="330.46" y="1151.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (230 samples, 0.06%)</title><rect x="779.0" y="1333" width="0.7" height="15.0" fill="rgb(249,202,27)" rx="2" ry="2" />
<text  x="782.01" y="1343.5" ></text>
</g>
<g >
<title>::toAppend&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (41,318 samples, 10.89%)</title><rect x="1006.8" y="1333" width="128.4" height="15.0" fill="rgb(208,3,53)" rx="2" ry="2" />
<text  x="1009.80" y="1343.5" >::toAppend&lt;std::..</text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (613 samples, 0.16%)</title><rect x="1142.3" y="1253" width="1.9" height="15.0" fill="rgb(207,191,40)" rx="2" ry="2" />
<text  x="1145.26" y="1263.5" ></text>
</g>
<g >
<title>::detail::getLastElement&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,580 samples, 0.42%)</title><rect x="1001.5" y="1317" width="4.9" height="15.0" fill="rgb(220,36,16)" rx="2" ry="2" />
<text  x="1004.47" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,152 samples, 0.30%)</title><rect x="468.3" y="1157" width="3.6" height="15.0" fill="rgb(253,164,24)" rx="2" ry="2" />
<text  x="471.28" y="1167.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (234 samples, 0.06%)</title><rect x="319.8" y="1157" width="0.7" height="15.0" fill="rgb(230,199,11)" rx="2" ry="2" />
<text  x="322.78" y="1167.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_inc_safe (1,767 samples, 0.47%)</title><rect x="675.8" y="1285" width="5.5" height="15.0" fill="rgb(223,51,0)" rx="2" ry="2" />
<text  x="678.83" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count (193 samples, 0.05%)</title><rect x="560.3" y="1125" width="0.6" height="15.0" fill="rgb(218,9,44)" rx="2" ry="2" />
<text  x="563.34" y="1135.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (232 samples, 0.06%)</title><rect x="469.8" y="869" width="0.7" height="15.0" fill="rgb(210,95,40)" rx="2" ry="2" />
<text  x="472.77" y="879.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::compare (123 samples, 0.03%)</title><rect x="594.9" y="1253" width="0.4" height="15.0" fill="rgb(226,10,14)" rx="2" ry="2" />
<text  x="597.93" y="1263.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_node_tr&lt;void const*&gt; (36 samples, 0.01%)</title><rect x="1136.7" y="1301" width="0.1" height="15.0" fill="rgb(208,110,20)" rx="2" ry="2" />
<text  x="1139.67" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::downgrade_retire_immutable_descendants (50 samples, 0.01%)</title><rect x="468.3" y="1061" width="0.2" height="15.0" fill="rgb(229,2,29)" rx="2" ry="2" />
<text  x="471.32" y="1071.5" ></text>
</g>
<g >
<title>::Check_LTImpl&lt;unsigned int, unsigned int&gt; (84 samples, 0.02%)</title><rect x="604.0" y="1253" width="0.3" height="15.0" fill="rgb(253,123,18)" rx="2" ry="2" />
<text  x="607.01" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (73 samples, 0.02%)</title><rect x="469.9" y="581" width="0.2" height="15.0" fill="rgb(240,183,7)" rx="2" ry="2" />
<text  x="472.88" y="591.5" ></text>
</g>
<g >
<title>new (120 samples, 0.03%)</title><rect x="686.0" y="1333" width="0.4" height="15.0" fill="rgb(214,115,2)" rx="2" ry="2" />
<text  x="688.98" y="1343.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::load (62 samples, 0.02%)</title><rect x="468.9" y="965" width="0.2" height="15.0" fill="rgb(226,174,44)" rx="2" ry="2" />
<text  x="471.92" y="975.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (172 samples, 0.05%)</title><rect x="504.8" y="949" width="0.5" height="15.0" fill="rgb(235,64,36)" rx="2" ry="2" />
<text  x="507.76" y="959.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (1,054 samples, 0.28%)</title><rect x="826.8" y="1285" width="3.3" height="15.0" fill="rgb(241,68,1)" rx="2" ry="2" />
<text  x="829.78" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (29,716 samples, 7.83%)</title><rect x="472.2" y="1157" width="92.3" height="15.0" fill="rgb(213,34,27)" rx="2" ry="2" />
<text  x="475.16" y="1167.5" >::hazptr_ob..</text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (5,731 samples, 1.51%)</title><rect x="312.2" y="1237" width="17.8" height="15.0" fill="rgb(221,129,27)" rx="2" ry="2" />
<text  x="315.17" y="1247.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::allocator (87 samples, 0.02%)</title><rect x="259.1" y="1333" width="0.3" height="15.0" fill="rgb(230,50,20)" rx="2" ry="2" />
<text  x="262.09" y="1343.5" ></text>
</g>
<g >
<title>::unordered_set&lt;void const*, std::hash&lt;void const*&gt;, std::equal_to&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::insert (106 samples, 0.03%)</title><rect x="1136.6" y="1365" width="0.3" height="15.0" fill="rgb(227,57,20)" rx="2" ry="2" />
<text  x="1139.58" y="1375.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_bucket_index (268 samples, 0.07%)</title><rect x="1139.7" y="1285" width="0.9" height="15.0" fill="rgb(252,24,21)" rx="2" ry="2" />
<text  x="1142.74" y="1295.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (18,474 samples, 4.87%)</title><rect x="725.0" y="1365" width="57.4" height="15.0" fill="rgb(252,146,4)" rx="2" ry="2" />
<text  x="728.00" y="1375.5" >::__cx..</text>
</g>
<g >
<title>::forward&lt;bool&gt; (70 samples, 0.02%)</title><rect x="688.8" y="1301" width="0.2" height="15.0" fill="rgb(230,210,35)" rx="2" ry="2" />
<text  x="691.79" y="1311.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::allocate (310 samples, 0.08%)</title><rect x="545.8" y="1045" width="0.9" height="15.0" fill="rgb(224,47,15)" rx="2" ry="2" />
<text  x="548.77" y="1055.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (807 samples, 0.21%)</title><rect x="270.6" y="1285" width="2.5" height="15.0" fill="rgb(247,19,53)" rx="2" ry="2" />
<text  x="273.62" y="1295.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (125 samples, 0.03%)</title><rect x="240.1" y="1269" width="0.4" height="15.0" fill="rgb(231,187,46)" rx="2" ry="2" />
<text  x="243.15" y="1279.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (112 samples, 0.03%)</title><rect x="531.0" y="1013" width="0.4" height="15.0" fill="rgb(253,215,4)" rx="2" ry="2" />
<text  x="534.02" y="1023.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (772 samples, 0.20%)</title><rect x="744.1" y="1301" width="2.4" height="15.0" fill="rgb(237,16,1)" rx="2" ry="2" />
<text  x="747.13" y="1311.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (51 samples, 0.01%)</title><rect x="520.1" y="1093" width="0.2" height="15.0" fill="rgb(239,158,6)" rx="2" ry="2" />
<text  x="523.12" y="1103.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::release_link (1,812 samples, 0.48%)</title><rect x="573.1" y="1253" width="5.6" height="15.0" fill="rgb(215,28,26)" rx="2" ry="2" />
<text  x="576.07" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::safe_list_top (1,732 samples, 0.46%)</title><rect x="1182.3" y="1349" width="5.4" height="15.0" fill="rgb(221,145,29)" rx="2" ry="2" />
<text  x="1185.35" y="1359.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (859 samples, 0.23%)</title><rect x="773.0" y="1317" width="2.7" height="15.0" fill="rgb(228,84,15)" rx="2" ry="2" />
<text  x="776.03" y="1327.5" ></text>
</g>
<g >
<title>::__addressof&lt;char const&gt; (542 samples, 0.14%)</title><rect x="828.4" y="1269" width="1.7" height="15.0" fill="rgb(221,47,28)" rx="2" ry="2" />
<text  x="831.37" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (33 samples, 0.01%)</title><rect x="657.0" y="1221" width="0.1" height="15.0" fill="rgb(241,58,35)" rx="2" ry="2" />
<text  x="660.02" y="1231.5" ></text>
</g>
<g >
<title>::resumeCoroutineWithNewAsyncStackRoot (287,296 samples, 75.69%)</title><rect x="243.1" y="1381" width="893.2" height="15.0" fill="rgb(234,222,17)" rx="2" ry="2" />
<text  x="246.13" y="1391.5" >::resumeCoroutineWithNewAsyncStackRoot</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (47 samples, 0.01%)</title><rect x="630.8" y="1253" width="0.2" height="15.0" fill="rgb(246,22,43)" rx="2" ry="2" />
<text  x="633.81" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_list&lt;std::atomic&gt;::push (553 samples, 0.15%)</title><rect x="1162.1" y="1349" width="1.7" height="15.0" fill="rgb(242,20,6)" rx="2" ry="2" />
<text  x="1165.07" y="1359.5" ></text>
</g>
<g >
<title>::__deque_buf_size (73 samples, 0.02%)</title><rect x="336.4" y="1157" width="0.2" height="15.0" fill="rgb(220,103,32)" rx="2" ry="2" />
<text  x="339.37" y="1167.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deallocate (341 samples, 0.09%)</title><rect x="336.8" y="1157" width="1.1" height="15.0" fill="rgb(240,96,8)" rx="2" ry="2" />
<text  x="339.79" y="1167.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (42 samples, 0.01%)</title><rect x="515.8" y="1029" width="0.2" height="15.0" fill="rgb(214,184,2)" rx="2" ry="2" />
<text  x="518.83" y="1039.5" ></text>
</g>
<g >
<title>::detail::reserveInTarget&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (51 samples, 0.01%)</title><rect x="881.5" y="1349" width="0.1" height="15.0" fill="rgb(248,120,29)" rx="2" ry="2" />
<text  x="884.45" y="1359.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::deallocate (44 samples, 0.01%)</title><rect x="524.3" y="1029" width="0.1" height="15.0" fill="rgb(248,78,28)" rx="2" ry="2" />
<text  x="527.29" y="1039.5" ></text>
</g>
<g >
<title>::SplitMix64::operator (3,712 samples, 0.98%)</title><rect x="712.5" y="1365" width="11.6" height="15.0" fill="rgb(224,102,52)" rx="2" ry="2" />
<text  x="715.52" y="1375.5" ></text>
</g>
<g >
<title>::__detail::_Hash_node_value_base&lt;void const*&gt;::_M_valptr (109 samples, 0.03%)</title><rect x="1144.6" y="1205" width="0.4" height="15.0" fill="rgb(222,51,2)" rx="2" ry="2" />
<text  x="1147.65" y="1215.5" ></text>
</g>
<g >
<title>::__aligned_buffer&lt;void const*&gt;::_M_addr (44 samples, 0.01%)</title><rect x="1144.8" y="1173" width="0.2" height="15.0" fill="rgb(225,222,44)" rx="2" ry="2" />
<text  x="1147.85" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (565 samples, 0.15%)</title><rect x="795.5" y="1317" width="1.8" height="15.0" fill="rgb(237,202,30)" rx="2" ry="2" />
<text  x="798.50" y="1327.5" ></text>
</g>
<g >
<title>::construct_at&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (92 samples, 0.02%)</title><rect x="530.0" y="1029" width="0.3" height="15.0" fill="rgb(206,85,38)" rx="2" ry="2" />
<text  x="533.01" y="1039.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (646 samples, 0.17%)</title><rect x="793.5" y="1317" width="2.0" height="15.0" fill="rgb(236,69,7)" rx="2" ry="2" />
<text  x="796.49" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::push_list (625 samples, 0.16%)</title><rect x="429.8" y="1173" width="2.0" height="15.0" fill="rgb(230,187,15)" rx="2" ry="2" />
<text  x="432.85" y="1183.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (211 samples, 0.06%)</title><rect x="469.8" y="821" width="0.7" height="15.0" fill="rgb(220,141,19)" rx="2" ry="2" />
<text  x="472.83" y="831.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,085 samples, 0.29%)</title><rect x="1047.4" y="1285" width="3.3" height="15.0" fill="rgb(223,130,40)" rx="2" ry="2" />
<text  x="1050.36" y="1295.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (162 samples, 0.04%)</title><rect x="893.2" y="1317" width="0.5" height="15.0" fill="rgb(250,100,23)" rx="2" ry="2" />
<text  x="896.24" y="1327.5" ></text>
</g>
<g >
<title>::__iterator_category&lt;char*&gt; (100 samples, 0.03%)</title><rect x="662.0" y="1221" width="0.3" height="15.0" fill="rgb(240,146,7)" rx="2" ry="2" />
<text  x="664.98" y="1231.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (134 samples, 0.04%)</title><rect x="681.7" y="1317" width="0.5" height="15.0" fill="rgb(224,157,17)" rx="2" ry="2" />
<text  x="684.73" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,960 samples, 0.52%)</title><rect x="588.7" y="1253" width="6.1" height="15.0" fill="rgb(209,138,21)" rx="2" ry="2" />
<text  x="591.72" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,152 samples, 0.30%)</title><rect x="468.3" y="1173" width="3.6" height="15.0" fill="rgb(216,143,36)" rx="2" ry="2" />
<text  x="471.28" y="1183.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::push_links&lt;std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt; &gt; (134 samples, 0.04%)</title><rect x="310.7" y="1221" width="0.4" height="15.0" fill="rgb(233,200,25)" rx="2" ry="2" />
<text  x="313.73" y="1231.5" ></text>
</g>
<g >
<title>::detail::estimateSpaceToReserve&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (58 samples, 0.02%)</title><rect x="887.4" y="1333" width="0.2" height="15.0" fill="rgb(247,198,28)" rx="2" ry="2" />
<text  x="890.43" y="1343.5" ></text>
</g>
<g >
<title>::get&lt;0ul, bool&amp;&amp;&gt; (315 samples, 0.08%)</title><rect x="709.1" y="1317" width="1.0" height="15.0" fill="rgb(222,157,31)" rx="2" ry="2" />
<text  x="712.09" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count_set (37 samples, 0.01%)</title><rect x="681.3" y="1285" width="0.1" height="15.0" fill="rgb(227,219,32)" rx="2" ry="2" />
<text  x="684.33" y="1295.5" ></text>
</g>
<g >
<title>::__deque_buf_size (281 samples, 0.07%)</title><rect x="328.2" y="1173" width="0.9" height="15.0" fill="rgb(224,177,20)" rx="2" ry="2" />
<text  x="331.19" y="1183.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (301 samples, 0.08%)</title><rect x="470.5" y="965" width="1.0" height="15.0" fill="rgb(243,116,41)" rx="2" ry="2" />
<text  x="473.52" y="975.5" ></text>
</g>
<g >
<title>::__detail::_Hashtable_hash_traits&lt;std::hash&lt;void const*&gt; &gt;::__small_size_threshold (35 samples, 0.01%)</title><rect x="1146.7" y="1285" width="0.1" height="15.0" fill="rgb(205,40,27)" rx="2" ry="2" />
<text  x="1149.71" y="1295.5" ></text>
</g>
<g >
<title>::allocator&lt;char&gt;::allocator (109 samples, 0.03%)</title><rect x="880.8" y="1349" width="0.3" height="15.0" fill="rgb(216,108,49)" rx="2" ry="2" />
<text  x="883.75" y="1359.5" ></text>
</g>
<g >
<title>::hazptr_detail::linked_list&lt;folly::hazptr_obj&lt;std::atomic&gt; &gt;::push (351 samples, 0.09%)</title><rect x="1162.5" y="1333" width="1.1" height="15.0" fill="rgb(236,104,2)" rx="2" ry="2" />
<text  x="1165.53" y="1343.5" ></text>
</g>
<g >
<title>::tuple&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (924 samples, 0.24%)</title><rect x="690.3" y="1333" width="2.8" height="15.0" fill="rgb(234,76,12)" rx="2" ry="2" />
<text  x="693.28" y="1343.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (108 samples, 0.03%)</title><rect x="469.9" y="725" width="0.3" height="15.0" fill="rgb(229,92,46)" rx="2" ry="2" />
<text  x="472.86" y="735.5" ></text>
</g>
<g >
<title>::__deque_buf_size (158 samples, 0.04%)</title><rect x="550.1" y="1061" width="0.5" height="15.0" fill="rgb(232,96,52)" rx="2" ry="2" />
<text  x="553.07" y="1071.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::~NodeT (193 samples, 0.05%)</title><rect x="239.9" y="1349" width="0.6" height="15.0" fill="rgb(249,25,13)" rx="2" ry="2" />
<text  x="242.94" y="1359.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (126 samples, 0.03%)</title><rect x="893.7" y="1317" width="0.4" height="15.0" fill="rgb(225,180,12)" rx="2" ry="2" />
<text  x="896.75" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::tail (4,689 samples, 1.24%)</title><rect x="395.9" y="1189" width="14.6" height="15.0" fill="rgb(240,104,12)" rx="2" ry="2" />
<text  x="398.93" y="1199.5" ></text>
</g>
<g >
<title>::forward&lt;unsigned long&amp;&gt; (49 samples, 0.01%)</title><rect x="692.5" y="1301" width="0.1" height="15.0" fill="rgb(240,212,41)" rx="2" ry="2" />
<text  x="695.49" y="1311.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::allocate (229 samples, 0.06%)</title><rect x="547.6" y="1029" width="0.7" height="15.0" fill="rgb(234,100,23)" rx="2" ry="2" />
<text  x="550.56" y="1039.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (170 samples, 0.04%)</title><rect x="521.6" y="1061" width="0.5" height="15.0" fill="rgb(238,211,22)" rx="2" ry="2" />
<text  x="524.55" y="1071.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::store (44 samples, 0.01%)</title><rect x="261.2" y="1301" width="0.1" height="15.0" fill="rgb(211,128,40)" rx="2" ry="2" />
<text  x="264.16" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (105 samples, 0.03%)</title><rect x="724.6" y="1365" width="0.3" height="15.0" fill="rgb(238,114,8)" rx="2" ry="2" />
<text  x="727.59" y="1375.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::match_tagged (2,943 samples, 0.78%)</title><rect x="1138.2" y="1349" width="9.2" height="15.0" fill="rgb(222,47,44)" rx="2" ry="2" />
<text  x="1141.21" y="1359.5" ></text>
</g>
<g >
<title>.part.0 (353 samples, 0.09%)</title><rect x="238.1" y="1477" width="1.1" height="15.0" fill="rgb(205,0,25)" rx="2" ry="2" />
<text  x="241.10" y="1487.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (208 samples, 0.05%)</title><rect x="525.3" y="1077" width="0.7" height="15.0" fill="rgb(212,105,8)" rx="2" ry="2" />
<text  x="528.33" y="1087.5" ></text>
</g>
<g >
<title>.constprop.0 (62 samples, 0.02%)</title><rect x="612.4" y="1237" width="0.2" height="15.0" fill="rgb(221,49,8)" rx="2" ry="2" />
<text  x="615.42" y="1247.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (405 samples, 0.11%)</title><rect x="728.7" y="1349" width="1.3" height="15.0" fill="rgb(229,88,3)" rx="2" ry="2" />
<text  x="731.71" y="1359.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;unsigned char&gt;::deallocate (65 samples, 0.02%)</title><rect x="478.8" y="1061" width="0.2" height="15.0" fill="rgb(240,133,47)" rx="2" ry="2" />
<text  x="481.80" y="1071.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,139 samples, 0.83%)</title><rect x="932.4" y="1285" width="9.7" height="15.0" fill="rgb(252,42,29)" rx="2" ry="2" />
<text  x="935.38" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_only_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push (219 samples, 0.06%)</title><rect x="430.0" y="1157" width="0.6" height="15.0" fill="rgb(224,82,48)" rx="2" ry="2" />
<text  x="432.95" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (49 samples, 0.01%)</title><rect x="782.4" y="1365" width="0.2" height="15.0" fill="rgb(234,171,37)" rx="2" ry="2" />
<text  x="785.43" y="1375.5" ></text>
</g>
<g >
<title>::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (170 samples, 0.04%)</title><rect x="1142.6" y="1221" width="0.5" height="15.0" fill="rgb(215,61,17)" rx="2" ry="2" />
<text  x="1145.59" y="1231.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (170 samples, 0.04%)</title><rect x="812.9" y="1317" width="0.6" height="15.0" fill="rgb(244,224,8)" rx="2" ry="2" />
<text  x="815.95" y="1327.5" ></text>
</g>
<g >
<title>::__deque_buf_size (114 samples, 0.03%)</title><rect x="549.6" y="1029" width="0.3" height="15.0" fill="rgb(218,3,50)" rx="2" ry="2" />
<text  x="552.58" y="1039.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (157 samples, 0.04%)</title><rect x="1018.3" y="1285" width="0.4" height="15.0" fill="rgb(233,58,10)" rx="2" ry="2" />
<text  x="1021.26" y="1295.5" ></text>
</g>
<g >
<title>::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (532 samples, 0.14%)</title><rect x="1142.4" y="1237" width="1.7" height="15.0" fill="rgb(251,170,48)" rx="2" ry="2" />
<text  x="1145.42" y="1247.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_map (586 samples, 0.15%)</title><rect x="553.8" y="1077" width="1.8" height="15.0" fill="rgb(208,162,25)" rx="2" ry="2" />
<text  x="556.78" y="1087.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (35 samples, 0.01%)</title><rect x="800.1" y="1333" width="0.1" height="15.0" fill="rgb(248,1,43)" rx="2" ry="2" />
<text  x="803.08" y="1343.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::allocator (44 samples, 0.01%)</title><rect x="253.9" y="1349" width="0.1" height="15.0" fill="rgb(210,190,41)" rx="2" ry="2" />
<text  x="256.87" y="1359.5" ></text>
</g>
<g >
<title>::operator&amp; (77 samples, 0.02%)</title><rect x="287.4" y="1269" width="0.3" height="15.0" fill="rgb(214,114,52)" rx="2" ry="2" />
<text  x="290.43" y="1279.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::push_back (629 samples, 0.17%)</title><rect x="529.5" y="1077" width="2.0" height="15.0" fill="rgb(212,207,23)" rx="2" ry="2" />
<text  x="532.55" y="1087.5" ></text>
</g>
<g >
<title>::operator&amp; (64 samples, 0.02%)</title><rect x="426.4" y="1173" width="0.2" height="15.0" fill="rgb(208,119,53)" rx="2" ry="2" />
<text  x="429.38" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (12,711 samples, 3.35%)</title><rect x="1011.8" y="1301" width="39.5" height="15.0" fill="rgb(213,81,47)" rx="2" ry="2" />
<text  x="1014.78" y="1311.5" >::_..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (754 samples, 0.20%)</title><rect x="758.4" y="1285" width="2.4" height="15.0" fill="rgb(239,141,48)" rx="2" ry="2" />
<text  x="761.43" y="1295.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (107 samples, 0.03%)</title><rect x="752.7" y="1301" width="0.3" height="15.0" fill="rgb(232,70,3)" rx="2" ry="2" />
<text  x="755.67" y="1311.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;0ul, bool&amp;&amp;&gt;::_Tuple_impl&lt;bool&gt; (345 samples, 0.09%)</title><rect x="687.9" y="1317" width="1.1" height="15.0" fill="rgb(232,171,29)" rx="2" ry="2" />
<text  x="690.93" y="1327.5" ></text>
</g>
<g >
<title>::forward&lt;void const* const&amp;&gt; (39 samples, 0.01%)</title><rect x="1145.3" y="1205" width="0.1" height="15.0" fill="rgb(241,208,28)" rx="2" ry="2" />
<text  x="1148.27" y="1215.5" ></text>
</g>
<g >
<title>::GetReferenceableValue&lt;folly::hazptr_domain&lt;std::atomic&gt;*&gt; (100 samples, 0.03%)</title><rect x="345.5" y="1221" width="0.3" height="15.0" fill="rgb(219,214,35)" rx="2" ry="2" />
<text  x="348.51" y="1231.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::deallocate (58 samples, 0.02%)</title><rect x="337.5" y="1141" width="0.2" height="15.0" fill="rgb(210,188,23)" rx="2" ry="2" />
<text  x="340.53" y="1151.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (58 samples, 0.02%)</title><rect x="469.9" y="261" width="0.2" height="15.0" fill="rgb(226,37,18)" rx="2" ry="2" />
<text  x="472.89" y="271.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (210 samples, 0.06%)</title><rect x="469.8" y="805" width="0.7" height="15.0" fill="rgb(217,70,38)" rx="2" ry="2" />
<text  x="472.83" y="815.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (92 samples, 0.02%)</title><rect x="516.3" y="1013" width="0.3" height="15.0" fill="rgb(225,108,33)" rx="2" ry="2" />
<text  x="519.30" y="1023.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_destroy_nodes (838 samples, 0.22%)</title><rect x="335.3" y="1189" width="2.6" height="15.0" fill="rgb(218,224,38)" rx="2" ry="2" />
<text  x="338.34" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (244 samples, 0.06%)</title><rect x="469.8" y="965" width="0.7" height="15.0" fill="rgb(239,189,30)" rx="2" ry="2" />
<text  x="472.76" y="975.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (57 samples, 0.02%)</title><rect x="777.9" y="1333" width="0.2" height="15.0" fill="rgb(254,0,42)" rx="2" ry="2" />
<text  x="780.94" y="1343.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (96 samples, 0.03%)</title><rect x="784.5" y="1333" width="0.3" height="15.0" fill="rgb(205,7,23)" rx="2" ry="2" />
<text  x="787.47" y="1343.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_create_nodes (568 samples, 0.15%)</title><rect x="515.0" y="1061" width="1.7" height="15.0" fill="rgb(246,14,31)" rx="2" ry="2" />
<text  x="517.96" y="1071.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (37 samples, 0.01%)</title><rect x="471.2" y="901" width="0.1" height="15.0" fill="rgb(245,23,15)" rx="2" ry="2" />
<text  x="474.19" y="911.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (184 samples, 0.05%)</title><rect x="886.5" y="1333" width="0.6" height="15.0" fill="rgb(214,229,17)" rx="2" ry="2" />
<text  x="889.51" y="1343.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count (286 samples, 0.08%)</title><rect x="575.6" y="1237" width="0.9" height="15.0" fill="rgb(248,154,49)" rx="2" ry="2" />
<text  x="578.61" y="1247.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (986 samples, 0.26%)</title><rect x="762.7" y="1253" width="3.1" height="15.0" fill="rgb(246,192,21)" rx="2" ry="2" />
<text  x="765.73" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (87,006 samples, 22.92%)</title><rect x="308.6" y="1269" width="270.5" height="15.0" fill="rgb(221,151,7)" rx="2" ry="2" />
<text  x="311.60" y="1279.5" >::hazptr_obj_base_linked&lt;folly::deta..</text>
</g>
<g >
<title>::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::_M_head (483 samples, 0.13%)</title><rect x="670.9" y="1221" width="1.5" height="15.0" fill="rgb(223,2,2)" rx="2" ry="2" />
<text  x="673.86" y="1231.5" ></text>
</g>
<g >
<title>::to_ascii_with&lt;10ul, folly::to_ascii_alphabet&lt;false&gt;, 20ul&gt; (42 samples, 0.01%)</title><rect x="1135.0" y="1301" width="0.1" height="15.0" fill="rgb(242,29,8)" rx="2" ry="2" />
<text  x="1137.96" y="1311.5" ></text>
</g>
<g >
<title>::IndexFileName[abi:cxx11] (153 samples, 0.04%)</title><rect x="240.8" y="1477" width="0.5" height="15.0" fill="rgb(247,96,30)" rx="2" ry="2" />
<text  x="243.83" y="1487.5" ></text>
</g>
<g >
<title>::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (836 samples, 0.22%)</title><rect x="250.9" y="1349" width="2.6" height="15.0" fill="rgb(240,92,33)" rx="2" ry="2" />
<text  x="253.92" y="1359.5" ></text>
</g>
<g >
<title>::asymmetric_thread_fence_heavy_fn::impl_ (34 samples, 0.01%)</title><rect x="1136.3" y="1381" width="0.1" height="15.0" fill="rgb(247,27,2)" rx="2" ry="2" />
<text  x="1139.29" y="1391.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (35 samples, 0.01%)</title><rect x="795.0" y="1301" width="0.1" height="15.0" fill="rgb(222,66,13)" rx="2" ry="2" />
<text  x="798.03" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (101 samples, 0.03%)</title><rect x="956.7" y="1285" width="0.4" height="15.0" fill="rgb(228,103,3)" rx="2" ry="2" />
<text  x="959.75" y="1295.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,411 samples, 0.37%)</title><rect x="761.4" y="1269" width="4.4" height="15.0" fill="rgb(238,40,4)" rx="2" ry="2" />
<text  x="764.41" y="1279.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (113 samples, 0.03%)</title><rect x="470.5" y="885" width="0.4" height="15.0" fill="rgb(237,178,32)" rx="2" ry="2" />
<text  x="473.54" y="895.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (980 samples, 0.26%)</title><rect x="468.5" y="1061" width="3.0" height="15.0" fill="rgb(239,35,39)" rx="2" ry="2" />
<text  x="471.47" y="1071.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (143 samples, 0.04%)</title><rect x="624.6" y="1285" width="0.4" height="15.0" fill="rgb(247,67,20)" rx="2" ry="2" />
<text  x="627.59" y="1295.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (43 samples, 0.01%)</title><rect x="338.4" y="1205" width="0.1" height="15.0" fill="rgb(229,66,12)" rx="2" ry="2" />
<text  x="341.37" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (100 samples, 0.03%)</title><rect x="644.1" y="1205" width="0.3" height="15.0" fill="rgb(213,22,34)" rx="2" ry="2" />
<text  x="647.07" y="1215.5" ></text>
</g>
<g >
<title>::__detail::_Hashtable_base&lt;void const*, void const*, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_eq (46 samples, 0.01%)</title><rect x="1145.0" y="1221" width="0.2" height="15.0" fill="rgb(223,85,0)" rx="2" ry="2" />
<text  x="1148.02" y="1231.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (63 samples, 0.02%)</title><rect x="564.0" y="1141" width="0.2" height="15.0" fill="rgb(251,50,49)" rx="2" ry="2" />
<text  x="567.02" y="1151.5" ></text>
</g>
<g >
<title>::operator== (149 samples, 0.04%)</title><rect x="538.7" y="1093" width="0.5" height="15.0" fill="rgb(222,37,38)" rx="2" ry="2" />
<text  x="541.72" y="1103.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (208 samples, 0.05%)</title><rect x="891.2" y="1317" width="0.7" height="15.0" fill="rgb(222,160,26)" rx="2" ry="2" />
<text  x="894.21" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1,493 samples, 0.39%)</title><rect x="657.1" y="1221" width="4.7" height="15.0" fill="rgb(211,157,25)" rx="2" ry="2" />
<text  x="660.12" y="1231.5" ></text>
</g>
<g >
<title>.part.0 (369 samples, 0.10%)</title><rect x="236.7" y="1461" width="1.1" height="15.0" fill="rgb(212,133,38)" rx="2" ry="2" />
<text  x="239.66" y="1471.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (97 samples, 0.03%)</title><rect x="891.9" y="1317" width="0.3" height="15.0" fill="rgb(236,174,49)" rx="2" ry="2" />
<text  x="894.86" y="1327.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (868 samples, 0.23%)</title><rect x="645.5" y="1205" width="2.7" height="15.0" fill="rgb(247,143,22)" rx="2" ry="2" />
<text  x="648.54" y="1215.5" ></text>
</g>
<g >
<title>::hash&lt;void const*&gt;::operator (36 samples, 0.01%)</title><rect x="1143.0" y="1205" width="0.1" height="15.0" fill="rgb(244,171,6)" rx="2" ry="2" />
<text  x="1146.01" y="1215.5" ></text>
</g>
<g >
<title>::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (2,568 samples, 0.68%)</title><rect x="700.1" y="1317" width="8.0" height="15.0" fill="rgb(210,148,2)" rx="2" ry="2" />
<text  x="703.12" y="1327.5" ></text>
</g>
<g >
<title>::__deque_buf_size (35 samples, 0.01%)</title><rect x="328.1" y="1157" width="0.1" height="15.0" fill="rgb(206,226,9)" rx="2" ry="2" />
<text  x="331.06" y="1167.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (40 samples, 0.01%)</title><rect x="469.9" y="69" width="0.1" height="15.0" fill="rgb(205,125,29)" rx="2" ry="2" />
<text  x="472.90" y="79.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (39 samples, 0.01%)</title><rect x="956.3" y="1253" width="0.1" height="15.0" fill="rgb(251,61,47)" rx="2" ry="2" />
<text  x="959.32" y="1263.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (60 samples, 0.02%)</title><rect x="469.9" y="341" width="0.2" height="15.0" fill="rgb(219,113,20)" rx="2" ry="2" />
<text  x="472.89" y="351.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator* (40 samples, 0.01%)</title><rect x="530.6" y="1029" width="0.1" height="15.0" fill="rgb(228,141,16)" rx="2" ry="2" />
<text  x="533.55" y="1039.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (571 samples, 0.15%)</title><rect x="469.7" y="997" width="1.8" height="15.0" fill="rgb(245,77,0)" rx="2" ry="2" />
<text  x="472.68" y="1007.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,693 samples, 0.45%)</title><rect x="936.6" y="1269" width="5.2" height="15.0" fill="rgb(240,28,43)" rx="2" ry="2" />
<text  x="939.57" y="1279.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::back (251 samples, 0.07%)</title><rect x="551.2" y="1109" width="0.8" height="15.0" fill="rgb(228,224,44)" rx="2" ry="2" />
<text  x="554.17" y="1119.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (264 samples, 0.07%)</title><rect x="339.2" y="1189" width="0.8" height="15.0" fill="rgb(211,121,6)" rx="2" ry="2" />
<text  x="342.22" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::push_in_non_empty_list (192 samples, 0.05%)</title><rect x="468.5" y="997" width="0.6" height="15.0" fill="rgb(208,18,9)" rx="2" ry="2" />
<text  x="471.53" y="1007.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (412 samples, 0.11%)</title><rect x="239.4" y="1445" width="1.2" height="15.0" fill="rgb(227,146,35)" rx="2" ry="2" />
<text  x="242.36" y="1455.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;*&gt;::atomic (301 samples, 0.08%)</title><rect x="619.0" y="1317" width="0.9" height="15.0" fill="rgb(212,128,23)" rx="2" ry="2" />
<text  x="621.96" y="1327.5" ></text>
</g>
<g >
<title>::resumeCoroutineWithNewAsyncStackRoot&lt;folly::coro::detail::TaskPromise&lt;void&gt; &gt; (287,296 samples, 75.69%)</title><rect x="243.1" y="1397" width="893.2" height="15.0" fill="rgb(245,215,14)" rx="2" ry="2" />
<text  x="246.13" y="1407.5" >::resumeCoroutineWithNewAsyncStackRoot&lt;folly::coro::detail::TaskPromise&lt;void&gt; &gt;</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,446 samples, 0.38%)</title><rect x="951.9" y="1269" width="4.5" height="15.0" fill="rgb(240,101,26)" rx="2" ry="2" />
<text  x="954.94" y="1279.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,428 samples, 0.38%)</title><rect x="937.3" y="1253" width="4.4" height="15.0" fill="rgb(249,199,4)" rx="2" ry="2" />
<text  x="940.29" y="1263.5" ></text>
</g>
<g >
<title>.constprop.0 (62 samples, 0.02%)</title><rect x="226.1" y="1461" width="0.2" height="15.0" fill="rgb(212,198,25)" rx="2" ry="2" />
<text  x="229.14" y="1471.5" ></text>
</g>
<g >
<title>::CreateListParser (36 samples, 0.01%)</title><rect x="240.7" y="1477" width="0.1" height="15.0" fill="rgb(224,183,53)" rx="2" ry="2" />
<text  x="243.65" y="1487.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (39 samples, 0.01%)</title><rect x="578.7" y="1253" width="0.1" height="15.0" fill="rgb(249,214,40)" rx="2" ry="2" />
<text  x="581.70" y="1263.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,675 samples, 0.44%)</title><rect x="825.0" y="1317" width="5.2" height="15.0" fill="rgb(227,173,43)" rx="2" ry="2" />
<text  x="827.97" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (244 samples, 0.06%)</title><rect x="469.8" y="901" width="0.7" height="15.0" fill="rgb(209,85,31)" rx="2" ry="2" />
<text  x="472.76" y="911.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_S_buffer_size (117 samples, 0.03%)</title><rect x="517.9" y="1045" width="0.4" height="15.0" fill="rgb(227,24,32)" rx="2" ry="2" />
<text  x="520.91" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (108 samples, 0.03%)</title><rect x="469.9" y="757" width="0.3" height="15.0" fill="rgb(220,58,33)" rx="2" ry="2" />
<text  x="472.86" y="767.5" ></text>
</g>
<g >
<title>::__detail::_Insert&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt;, true&gt;::insert (104 samples, 0.03%)</title><rect x="1136.6" y="1349" width="0.3" height="15.0" fill="rgb(205,40,50)" rx="2" ry="2" />
<text  x="1139.58" y="1359.5" ></text>
</g>
<g >
<title>::allocator&lt;char&gt;::~allocator (117 samples, 0.03%)</title><rect x="881.1" y="1349" width="0.4" height="15.0" fill="rgb(211,221,23)" rx="2" ry="2" />
<text  x="884.09" y="1359.5" ></text>
</g>
<g >
<title>::_Head_base&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (139 samples, 0.04%)</title><rect x="710.6" y="1269" width="0.5" height="15.0" fill="rgb(209,100,47)" rx="2" ry="2" />
<text  x="713.64" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (153 samples, 0.04%)</title><rect x="737.9" y="1317" width="0.5" height="15.0" fill="rgb(205,39,35)" rx="2" ry="2" />
<text  x="740.95" y="1327.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::exchange (1,171 samples, 0.31%)</title><rect x="455.1" y="1189" width="3.7" height="15.0" fill="rgb(209,213,39)" rx="2" ry="2" />
<text  x="458.12" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::release_link (108 samples, 0.03%)</title><rect x="471.5" y="1061" width="0.4" height="15.0" fill="rgb(232,12,16)" rx="2" ry="2" />
<text  x="474.52" y="1071.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (162 samples, 0.04%)</title><rect x="959.9" y="1301" width="0.5" height="15.0" fill="rgb(205,122,36)" rx="2" ry="2" />
<text  x="962.85" y="1311.5" ></text>
</g>
<g >
<title>::detail::estimateSpaceToReserve&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (12,874 samples, 3.39%)</title><rect x="961.4" y="1317" width="40.1" height="15.0" fill="rgb(233,6,34)" rx="2" ry="2" />
<text  x="964.45" y="1327.5" >::d..</text>
</g>
<g >
<title>::__is_constant_evaluated (46 samples, 0.01%)</title><rect x="645.3" y="1205" width="0.1" height="15.0" fill="rgb(250,208,20)" rx="2" ry="2" />
<text  x="648.28" y="1215.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (39 samples, 0.01%)</title><rect x="320.6" y="1157" width="0.1" height="15.0" fill="rgb(233,185,11)" rx="2" ry="2" />
<text  x="323.61" y="1167.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrTableDeleter::operator (60 samples, 0.02%)</title><rect x="469.9" y="357" width="0.2" height="15.0" fill="rgb(238,13,6)" rx="2" ry="2" />
<text  x="472.89" y="367.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (71 samples, 0.02%)</title><rect x="475.3" y="1077" width="0.2" height="15.0" fill="rgb(230,135,14)" rx="2" ry="2" />
<text  x="478.29" y="1087.5" ></text>
</g>
<g >
<title>::max&lt;unsigned long&gt; (63 samples, 0.02%)</title><rect x="550.7" y="1061" width="0.2" height="15.0" fill="rgb(250,91,3)" rx="2" ry="2" />
<text  x="553.68" y="1071.5" ></text>
</g>
<g >
<title>::addressof&lt;char&gt; (1,620 samples, 0.43%)</title><rect x="863.7" y="1301" width="5.0" height="15.0" fill="rgb(232,75,4)" rx="2" ry="2" />
<text  x="866.70" y="1311.5" ></text>
</g>
<g >
<title>::__detail::_Node_iterator_base&lt;void const*, false&gt;::_Node_iterator_base (70 samples, 0.02%)</title><rect x="1146.9" y="1269" width="0.2" height="15.0" fill="rgb(211,128,16)" rx="2" ry="2" />
<text  x="1149.91" y="1279.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::construct&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (143 samples, 0.04%)</title><rect x="530.0" y="1045" width="0.4" height="15.0" fill="rgb(234,98,37)" rx="2" ry="2" />
<text  x="532.96" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (244 samples, 0.06%)</title><rect x="469.8" y="949" width="0.7" height="15.0" fill="rgb(227,65,10)" rx="2" ry="2" />
<text  x="472.76" y="959.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (206 samples, 0.05%)</title><rect x="558.0" y="1077" width="0.7" height="15.0" fill="rgb(211,5,8)" rx="2" ry="2" />
<text  x="561.03" y="1087.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (48 samples, 0.01%)</title><rect x="510.5" y="1061" width="0.1" height="15.0" fill="rgb(214,99,1)" rx="2" ry="2" />
<text  x="513.49" y="1071.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrTableDeleter::operator (73 samples, 0.02%)</title><rect x="469.9" y="549" width="0.2" height="15.0" fill="rgb(235,192,5)" rx="2" ry="2" />
<text  x="472.88" y="559.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (1,150 samples, 0.30%)</title><rect x="468.3" y="1109" width="3.6" height="15.0" fill="rgb(248,150,30)" rx="2" ry="2" />
<text  x="471.28" y="1119.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (49 samples, 0.01%)</title><rect x="545.4" y="1029" width="0.2" height="15.0" fill="rgb(240,168,34)" rx="2" ry="2" />
<text  x="548.42" y="1039.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (36 samples, 0.01%)</title><rect x="948.3" y="1285" width="0.1" height="15.0" fill="rgb(253,61,2)" rx="2" ry="2" />
<text  x="951.26" y="1295.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocator (92 samples, 0.02%)</title><rect x="315.9" y="1173" width="0.3" height="15.0" fill="rgb(217,60,19)" rx="2" ry="2" />
<text  x="318.92" y="1183.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::set_next (167 samples, 0.04%)</title><rect x="1163.1" y="1317" width="0.5" height="15.0" fill="rgb(241,173,37)" rx="2" ry="2" />
<text  x="1166.11" y="1327.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (717 samples, 0.19%)</title><rect x="313.5" y="1173" width="2.2" height="15.0" fill="rgb(222,1,25)" rx="2" ry="2" />
<text  x="316.47" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (571 samples, 0.15%)</title><rect x="803.7" y="1349" width="1.8" height="15.0" fill="rgb(215,45,0)" rx="2" ry="2" />
<text  x="806.68" y="1359.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (117 samples, 0.03%)</title><rect x="470.5" y="917" width="0.4" height="15.0" fill="rgb(210,214,6)" rx="2" ry="2" />
<text  x="473.53" y="927.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (37 samples, 0.01%)</title><rect x="475.9" y="1077" width="0.1" height="15.0" fill="rgb(250,146,9)" rx="2" ry="2" />
<text  x="478.86" y="1087.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::load_hazptr_vals (144 samples, 0.04%)</title><rect x="1136.5" y="1381" width="0.4" height="15.0" fill="rgb(242,17,41)" rx="2" ry="2" />
<text  x="1139.46" y="1391.5" ></text>
</g>
<g >
<title>::Check_NEImpl&lt;folly::hazptr_obj&lt;std::atomic&gt;*, folly::hazptr_obj&lt;std::atomic&gt;*&gt; (61 samples, 0.02%)</title><rect x="1137.9" y="1349" width="0.2" height="15.0" fill="rgb(233,86,35)" rx="2" ry="2" />
<text  x="1140.93" y="1359.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;unsigned char&gt;::__new_allocator (35 samples, 0.01%)</title><rect x="474.9" y="1077" width="0.1" height="15.0" fill="rgb(251,55,9)" rx="2" ry="2" />
<text  x="477.91" y="1087.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::acquire_link_safe (2,001 samples, 0.53%)</title><rect x="675.2" y="1301" width="6.2" height="15.0" fill="rgb(207,49,3)" rx="2" ry="2" />
<text  x="678.22" y="1311.5" ></text>
</g>
<g >
<title>::__deque_buf_size (39 samples, 0.01%)</title><rect x="329.6" y="1189" width="0.2" height="15.0" fill="rgb(216,12,42)" rx="2" ry="2" />
<text  x="332.64" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (68 samples, 0.02%)</title><rect x="728.3" y="1349" width="0.2" height="15.0" fill="rgb(253,75,45)" rx="2" ry="2" />
<text  x="731.31" y="1359.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::allocate (216 samples, 0.06%)</title><rect x="516.0" y="1029" width="0.6" height="15.0" fill="rgb(221,190,39)" rx="2" ry="2" />
<text  x="518.97" y="1039.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (114 samples, 0.03%)</title><rect x="876.3" y="1317" width="0.4" height="15.0" fill="rgb(239,129,12)" rx="2" ry="2" />
<text  x="879.31" y="1327.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (36 samples, 0.01%)</title><rect x="554.6" y="1045" width="0.1" height="15.0" fill="rgb(206,26,51)" rx="2" ry="2" />
<text  x="557.56" y="1055.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (39 samples, 0.01%)</title><rect x="618.6" y="1317" width="0.1" height="15.0" fill="rgb(250,201,23)" rx="2" ry="2" />
<text  x="621.58" y="1327.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::releaseLink (1,711 samples, 0.45%)</title><rect x="479.2" y="1061" width="5.3" height="15.0" fill="rgb(235,106,52)" rx="2" ry="2" />
<text  x="482.21" y="1071.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::~stack (59 samples, 0.02%)</title><rect x="564.4" y="1141" width="0.1" height="15.0" fill="rgb(240,80,33)" rx="2" ry="2" />
<text  x="567.36" y="1151.5" ></text>
</g>
<g >
<title>::Check_GEImpl&lt;unsigned int, int&gt; (87 samples, 0.02%)</title><rect x="483.9" y="1045" width="0.3" height="15.0" fill="rgb(227,145,52)" rx="2" ry="2" />
<text  x="486.90" y="1055.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;unsigned char&gt;::allocate (174 samples, 0.05%)</title><rect x="258.5" y="1333" width="0.6" height="15.0" fill="rgb(223,61,0)" rx="2" ry="2" />
<text  x="261.54" y="1343.5" ></text>
</g>
<g >
<title>::__detail::_Hashtable_base&lt;void const*, void const*, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_equals (446 samples, 0.12%)</title><rect x="1144.3" y="1253" width="1.4" height="15.0" fill="rgb(228,221,39)" rx="2" ry="2" />
<text  x="1147.28" y="1263.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (5,465 samples, 1.44%)</title><rect x="312.9" y="1205" width="17.0" height="15.0" fill="rgb(212,132,4)" rx="2" ry="2" />
<text  x="315.87" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (158 samples, 0.04%)</title><rect x="485.2" y="1045" width="0.5" height="15.0" fill="rgb(209,135,43)" rx="2" ry="2" />
<text  x="488.19" y="1055.5" ></text>
</g>
<g >
<title>::to_ascii_size&lt;10ul&gt; (9,963 samples, 2.62%)</title><rect x="970.0" y="1269" width="31.0" height="15.0" fill="rgb(240,169,35)" rx="2" ry="2" />
<text  x="972.98" y="1279.5" >::..</text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (59 samples, 0.02%)</title><rect x="521.8" y="1045" width="0.1" height="15.0" fill="rgb(206,149,18)" rx="2" ry="2" />
<text  x="524.76" y="1055.5" ></text>
</g>
<g >
<title>.lto_priv.0 (87 samples, 0.02%)</title><rect x="237.8" y="1477" width="0.3" height="15.0" fill="rgb(234,114,30)" rx="2" ry="2" />
<text  x="240.80" y="1487.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::allocate (334 samples, 0.09%)</title><rect x="513.9" y="1045" width="1.0" height="15.0" fill="rgb(222,183,42)" rx="2" ry="2" />
<text  x="516.87" y="1055.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::_Tuple_impl (56 samples, 0.01%)</title><rect x="625.9" y="1269" width="0.2" height="15.0" fill="rgb(242,79,39)" rx="2" ry="2" />
<text  x="628.92" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (368 samples, 0.10%)</title><rect x="504.5" y="981" width="1.1" height="15.0" fill="rgb(219,183,38)" rx="2" ry="2" />
<text  x="507.46" y="991.5" ></text>
</g>
<g >
<title>::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (6,532 samples, 1.72%)</title><rect x="485.7" y="1045" width="20.3" height="15.0" fill="rgb(241,200,8)" rx="2" ry="2" />
<text  x="488.68" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::set_next (159 samples, 0.04%)</title><rect x="395.4" y="1173" width="0.5" height="15.0" fill="rgb(205,0,43)" rx="2" ry="2" />
<text  x="398.44" y="1183.5" ></text>
</g>
<g >
<title>all (379,564 samples, 100%)</title><rect x="10.0" y="1509" width="1180.0" height="15.0" fill="rgb(232,132,53)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" ></text>
</g>
<g >
<title>::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (1,683 samples, 0.44%)</title><rect x="693.1" y="1349" width="5.3" height="15.0" fill="rgb(208,202,30)" rx="2" ry="2" />
<text  x="696.15" y="1359.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::copy (676 samples, 0.18%)</title><rect x="753.0" y="1301" width="2.1" height="15.0" fill="rgb(227,165,14)" rx="2" ry="2" />
<text  x="756.00" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_obj (118 samples, 0.03%)</title><rect x="470.5" y="933" width="0.4" height="15.0" fill="rgb(210,155,5)" rx="2" ry="2" />
<text  x="473.53" y="943.5" ></text>
</g>
<g >
<title>::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (37 samples, 0.01%)</title><rect x="431.4" y="1125" width="0.1" height="15.0" fill="rgb(210,30,18)" rx="2" ry="2" />
<text  x="434.43" y="1135.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (48 samples, 0.01%)</title><rect x="505.8" y="997" width="0.1" height="15.0" fill="rgb(238,160,16)" rx="2" ry="2" />
<text  x="508.77" y="1007.5" ></text>
</g>
<g >
<title>::operator&amp; (58 samples, 0.02%)</title><rect x="680.0" y="1253" width="0.2" height="15.0" fill="rgb(217,210,38)" rx="2" ry="2" />
<text  x="683.03" y="1263.5" ></text>
</g>
<g >
<title>::CPUThreadPoolExecutor::threadRun (304,120 samples, 80.12%)</title><rect x="243.1" y="1461" width="945.5" height="15.0" fill="rgb(222,21,30)" rx="2" ry="2" />
<text  x="246.12" y="1471.5" >::CPUThreadPoolExecutor::threadRun</text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::cohort (127 samples, 0.03%)</title><rect x="1163.9" y="1365" width="0.4" height="15.0" fill="rgb(220,33,15)" rx="2" ry="2" />
<text  x="1166.92" y="1375.5" ></text>
</g>
<g >
<title>.constprop.0.isra.0 (227 samples, 0.06%)</title><rect x="225.6" y="1477" width="0.7" height="15.0" fill="rgb(216,186,2)" rx="2" ry="2" />
<text  x="228.63" y="1487.5" ></text>
</g>
<g >
<title>::Check_GTImpl&lt;unsigned int, unsigned int&gt; (137 samples, 0.04%)</title><rect x="574.0" y="1237" width="0.4" height="15.0" fill="rgb(224,31,33)" rx="2" ry="2" />
<text  x="577.00" y="1247.5" ></text>
</g>
<g >
<title>::allocator&lt;unsigned char&gt;::allocator (63 samples, 0.02%)</title><rect x="479.0" y="1061" width="0.2" height="15.0" fill="rgb(240,224,4)" rx="2" ry="2" />
<text  x="482.00" y="1071.5" ></text>
</g>
<g >
<title>::Step (37 samples, 0.01%)</title><rect x="242.7" y="1333" width="0.1" height="15.0" fill="rgb(207,28,29)" rx="2" ry="2" />
<text  x="245.71" y="1343.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~_Deque_base (1,451 samples, 0.38%)</title><rect x="520.3" y="1093" width="4.5" height="15.0" fill="rgb(244,68,8)" rx="2" ry="2" />
<text  x="523.27" y="1103.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::allocate (325 samples, 0.09%)</title><rect x="647.0" y="1189" width="1.0" height="15.0" fill="rgb(236,144,20)" rx="2" ry="2" />
<text  x="650.01" y="1199.5" ></text>
</g>
<g >
<title>::detail::function::FunctionTraits&lt;void  (304,122 samples, 80.12%)</title><rect x="243.1" y="1477" width="945.5" height="15.0" fill="rgb(218,176,38)" rx="2" ry="2" />
<text  x="246.12" y="1487.5" >::detail::function::FunctionTraits&lt;void </text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::set_next (53 samples, 0.01%)</title><rect x="1163.6" y="1333" width="0.2" height="15.0" fill="rgb(250,56,17)" rx="2" ry="2" />
<text  x="1166.62" y="1343.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (41 samples, 0.01%)</title><rect x="260.9" y="1301" width="0.1" height="15.0" fill="rgb(236,47,33)" rx="2" ry="2" />
<text  x="263.88" y="1311.5" ></text>
</g>
<g >
<title>::Type::ParseStanza (188 samples, 0.05%)</title><rect x="242.2" y="1461" width="0.6" height="15.0" fill="rgb(247,88,36)" rx="2" ry="2" />
<text  x="245.24" y="1471.5" ></text>
</g>
<g >
<title>::__get_helper&lt;1ul, unsigned long&amp;&gt; (289 samples, 0.08%)</title><rect x="711.3" y="1301" width="0.9" height="15.0" fill="rgb(221,155,44)" rx="2" ry="2" />
<text  x="714.27" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (39 samples, 0.01%)</title><rect x="663.6" y="1237" width="0.1" height="15.0" fill="rgb(253,94,43)" rx="2" ry="2" />
<text  x="666.63" y="1247.5" ></text>
</g>
<g >
<title>::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (648 samples, 0.17%)</title><rect x="670.3" y="1237" width="2.1" height="15.0" fill="rgb(239,205,18)" rx="2" ry="2" />
<text  x="673.35" y="1247.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,379 samples, 0.89%)</title><rect x="738.4" y="1317" width="10.5" height="15.0" fill="rgb(242,24,46)" rx="2" ry="2" />
<text  x="741.42" y="1327.5" ></text>
</g>
<g >
<title>new (39 samples, 0.01%)</title><rect x="325.4" y="1125" width="0.1" height="15.0" fill="rgb(236,16,10)" rx="2" ry="2" />
<text  x="328.36" y="1135.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (53 samples, 0.01%)</title><rect x="315.7" y="1173" width="0.2" height="15.0" fill="rgb(222,150,12)" rx="2" ry="2" />
<text  x="318.70" y="1183.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (63 samples, 0.02%)</title><rect x="728.5" y="1349" width="0.2" height="15.0" fill="rgb(251,131,43)" rx="2" ry="2" />
<text  x="731.52" y="1359.5" ></text>
</g>
<g >
<title>::detail::function::FunctionTraits&lt;void  (303,885 samples, 80.06%)</title><rect x="243.1" y="1429" width="944.8" height="15.0" fill="rgb(241,64,36)" rx="2" ry="2" />
<text  x="246.13" y="1439.5" >::detail::function::FunctionTraits&lt;void </text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::count (1,215 samples, 0.32%)</title><rect x="443.2" y="1189" width="3.8" height="15.0" fill="rgb(206,112,10)" rx="2" ry="2" />
<text  x="446.22" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (651 samples, 0.17%)</title><rect x="665.7" y="1237" width="2.0" height="15.0" fill="rgb(224,224,37)" rx="2" ry="2" />
<text  x="668.71" y="1247.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1,999 samples, 0.53%)</title><rect x="814.4" y="1317" width="6.3" height="15.0" fill="rgb(222,46,29)" rx="2" ry="2" />
<text  x="817.45" y="1327.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (694 samples, 0.18%)</title><rect x="1027.3" y="1269" width="2.2" height="15.0" fill="rgb(246,31,54)" rx="2" ry="2" />
<text  x="1030.32" y="1279.5" ></text>
</g>
<g >
<title>::__detail::_Identity::operator (71 samples, 0.02%)</title><rect x="1145.2" y="1221" width="0.2" height="15.0" fill="rgb(230,41,45)" rx="2" ry="2" />
<text  x="1148.17" y="1231.5" ></text>
</g>
<g >
<title>::toAppendFit&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (206 samples, 0.05%)</title><rect x="1135.6" y="1365" width="0.7" height="15.0" fill="rgb(245,192,49)" rx="2" ry="2" />
<text  x="1138.64" y="1375.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,447 samples, 0.38%)</title><rect x="825.6" y="1301" width="4.5" height="15.0" fill="rgb(241,140,50)" rx="2" ry="2" />
<text  x="828.56" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,648 samples, 0.43%)</title><rect x="760.8" y="1285" width="5.1" height="15.0" fill="rgb(217,59,9)" rx="2" ry="2" />
<text  x="763.77" y="1295.5" ></text>
</g>
<g >
<title>::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (36 samples, 0.01%)</title><rect x="668.5" y="1237" width="0.1" height="15.0" fill="rgb(236,103,25)" rx="2" ry="2" />
<text  x="671.49" y="1247.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8,340 samples, 2.20%)</title><rect x="805.5" y="1349" width="26.0" height="15.0" fill="rgb(247,150,38)" rx="2" ry="2" />
<text  x="808.53" y="1359.5" >:..</text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::size (115 samples, 0.03%)</title><rect x="1145.8" y="1285" width="0.3" height="15.0" fill="rgb(247,2,12)" rx="2" ry="2" />
<text  x="1148.75" y="1295.5" ></text>
</g>
<g >
<title>::equal_to&lt;void const*&gt;::operator (80 samples, 0.02%)</title><rect x="1145.4" y="1221" width="0.2" height="15.0" fill="rgb(213,113,28)" rx="2" ry="2" />
<text  x="1148.39" y="1231.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (29,815 samples, 7.86%)</title><rect x="471.9" y="1173" width="92.7" height="15.0" fill="rgb(213,136,4)" rx="2" ry="2" />
<text  x="474.86" y="1183.5" >::hazptr_ob..</text>
</g>
<g >
<title>::__is_constant_evaluated (97 samples, 0.03%)</title><rect x="428.2" y="1189" width="0.3" height="15.0" fill="rgb(234,65,5)" rx="2" ry="2" />
<text  x="431.21" y="1199.5" ></text>
</g>
<g >
<title>::Type::ParseStanza (275 samples, 0.07%)</title><rect x="242.0" y="1477" width="0.8" height="15.0" fill="rgb(253,14,26)" rx="2" ry="2" />
<text  x="244.97" y="1487.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::release_link (35 samples, 0.01%)</title><rect x="579.1" y="1269" width="0.1" height="15.0" fill="rgb(216,214,43)" rx="2" ry="2" />
<text  x="582.09" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::tail (74 samples, 0.02%)</title><rect x="469.1" y="997" width="0.3" height="15.0" fill="rgb(230,184,4)" rx="2" ry="2" />
<text  x="472.12" y="1007.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (204 samples, 0.05%)</title><rect x="575.0" y="1237" width="0.6" height="15.0" fill="rgb(229,215,54)" rx="2" ry="2" />
<text  x="577.98" y="1247.5" ></text>
</g>
<g >
<title>::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (14,035 samples, 3.70%)</title><rect x="628.7" y="1285" width="43.7" height="15.0" fill="rgb(225,14,29)" rx="2" ry="2" />
<text  x="631.73" y="1295.5" >::pa..</text>
</g>
<g >
<title>::unique_lock&lt;std::mutex&gt;::unlock (34 samples, 0.01%)</title><rect x="617.2" y="1301" width="0.1" height="15.0" fill="rgb(221,44,32)" rx="2" ry="2" />
<text  x="620.20" y="1311.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocator (61 samples, 0.02%)</title><rect x="510.7" y="1061" width="0.2" height="15.0" fill="rgb(205,128,13)" rx="2" ry="2" />
<text  x="513.67" y="1071.5" ></text>
</g>
<g >
<title>::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (855 samples, 0.23%)</title><rect x="669.7" y="1253" width="2.7" height="15.0" fill="rgb(227,125,50)" rx="2" ry="2" />
<text  x="672.71" y="1263.5" ></text>
</g>
<g >
<title>::__detail::_Hash_node&lt;void const*, false&gt;::_M_next (33 samples, 0.01%)</title><rect x="1144.2" y="1253" width="0.1" height="15.0" fill="rgb(252,71,25)" rx="2" ry="2" />
<text  x="1147.18" y="1263.5" ></text>
</g>
<g >
<title>::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, 0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, 0ul&gt; (13,819 samples, 3.64%)</title><rect x="629.4" y="1269" width="43.0" height="15.0" fill="rgb(243,86,15)" rx="2" ry="2" />
<text  x="632.40" y="1279.5" >::pa..</text>
</g>
<g >
<title>::__deque_buf_size (115 samples, 0.03%)</title><rect x="517.9" y="1029" width="0.4" height="15.0" fill="rgb(218,108,27)" rx="2" ry="2" />
<text  x="520.92" y="1039.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (99 samples, 0.03%)</title><rect x="505.3" y="965" width="0.3" height="15.0" fill="rgb(218,115,37)" rx="2" ry="2" />
<text  x="508.29" y="975.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;unsigned char&gt;::allocate (38 samples, 0.01%)</title><rect x="253.8" y="1349" width="0.1" height="15.0" fill="rgb(232,158,17)" rx="2" ry="2" />
<text  x="256.75" y="1359.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (310 samples, 0.08%)</title><rect x="340.3" y="1189" width="1.0" height="15.0" fill="rgb(210,46,47)" rx="2" ry="2" />
<text  x="343.33" y="1199.5" ></text>
</g>
<g >
<title>::_Hash_impl::hash (104 samples, 0.03%)</title><rect x="697.2" y="1333" width="0.3" height="15.0" fill="rgb(213,85,50)" rx="2" ry="2" />
<text  x="700.17" y="1343.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1253" width="0.1" height="15.0" fill="rgb(249,114,48)" rx="2" ry="2" />
<text  x="245.72" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::call_push_links (156 samples, 0.04%)</title><rect x="506.8" y="1125" width="0.5" height="15.0" fill="rgb(241,4,42)" rx="2" ry="2" />
<text  x="509.83" y="1135.5" ></text>
</g>
<g >
<title>::GetReferenceableValue&lt;folly::hazptr_domain&lt;std::atomic&gt;*&gt; (37 samples, 0.01%)</title><rect x="342.0" y="1237" width="0.1" height="15.0" fill="rgb(210,67,40)" rx="2" ry="2" />
<text  x="344.96" y="1247.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (551 samples, 0.15%)</title><rect x="1055.3" y="1269" width="1.7" height="15.0" fill="rgb(218,186,28)" rx="2" ry="2" />
<text  x="1058.28" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (60 samples, 0.02%)</title><rect x="469.9" y="405" width="0.2" height="15.0" fill="rgb(212,118,49)" rx="2" ry="2" />
<text  x="472.89" y="415.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::begin (389 samples, 0.10%)</title><rect x="338.8" y="1205" width="1.2" height="15.0" fill="rgb(228,67,6)" rx="2" ry="2" />
<text  x="341.83" y="1215.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (33 samples, 0.01%)</title><rect x="941.7" y="1253" width="0.1" height="15.0" fill="rgb(243,50,0)" rx="2" ry="2" />
<text  x="944.73" y="1263.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (512 samples, 0.13%)</title><rect x="648.4" y="1221" width="1.5" height="15.0" fill="rgb(216,108,11)" rx="2" ry="2" />
<text  x="651.35" y="1231.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (114 samples, 0.03%)</title><rect x="794.2" y="1301" width="0.4" height="15.0" fill="rgb(217,175,51)" rx="2" ry="2" />
<text  x="797.22" y="1311.5" ></text>
</g>
<g >
<title>::to_ascii_decimal&lt;20ul&gt; (127 samples, 0.03%)</title><rect x="1135.2" y="1333" width="0.4" height="15.0" fill="rgb(218,176,43)" rx="2" ry="2" />
<text  x="1138.25" y="1343.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::push_obj (232 samples, 0.06%)</title><rect x="469.8" y="853" width="0.7" height="15.0" fill="rgb(210,222,17)" rx="2" ry="2" />
<text  x="472.77" y="863.5" ></text>
</g>
<g >
<title>::__detail::_Hashtable_base&lt;void const*, void const*, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_key_equals (392 samples, 0.10%)</title><rect x="1144.4" y="1237" width="1.2" height="15.0" fill="rgb(228,187,9)" rx="2" ry="2" />
<text  x="1147.43" y="1247.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_base (3,469 samples, 0.91%)</title><rect x="540.2" y="1093" width="10.8" height="15.0" fill="rgb(211,186,9)" rx="2" ry="2" />
<text  x="543.22" y="1103.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (41 samples, 0.01%)</title><rect x="831.8" y="1365" width="0.1" height="15.0" fill="rgb(228,33,16)" rx="2" ry="2" />
<text  x="834.80" y="1375.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_deallocate_node (307 samples, 0.08%)</title><rect x="556.3" y="1061" width="0.9" height="15.0" fill="rgb(252,226,51)" rx="2" ry="2" />
<text  x="559.27" y="1071.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (43 samples, 0.01%)</title><rect x="470.2" y="725" width="0.1" height="15.0" fill="rgb(245,90,46)" rx="2" ry="2" />
<text  x="473.20" y="735.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_list (33,983 samples, 8.95%)</title><rect x="459.3" y="1189" width="105.6" height="15.0" fill="rgb(226,154,0)" rx="2" ry="2" />
<text  x="462.27" y="1199.5" >::hazptr_obj..</text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::delete_self (118 samples, 0.03%)</title><rect x="470.5" y="949" width="0.4" height="15.0" fill="rgb(218,106,20)" rx="2" ry="2" />
<text  x="473.53" y="959.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (80 samples, 0.02%)</title><rect x="486.4" y="1013" width="0.2" height="15.0" fill="rgb(218,74,37)" rx="2" ry="2" />
<text  x="489.38" y="1023.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (34 samples, 0.01%)</title><rect x="799.9" y="1333" width="0.1" height="15.0" fill="rgb(238,163,43)" rx="2" ry="2" />
<text  x="802.94" y="1343.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (108 samples, 0.03%)</title><rect x="469.9" y="693" width="0.3" height="15.0" fill="rgb(218,57,54)" rx="2" ry="2" />
<text  x="472.86" y="703.5" ></text>
</g>
<g >
<title>::__deque_buf_size (99 samples, 0.03%)</title><rect x="323.4" y="1141" width="0.3" height="15.0" fill="rgb(242,49,19)" rx="2" ry="2" />
<text  x="326.36" y="1151.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique&lt;void const*, void const*, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;void const*, false&gt; &gt; &gt; &gt; (89 samples, 0.02%)</title><rect x="1136.6" y="1317" width="0.3" height="15.0" fill="rgb(253,95,3)" rx="2" ry="2" />
<text  x="1139.59" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_root&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic&gt;::~hazptr_root (41 samples, 0.01%)</title><rect x="469.9" y="133" width="0.1" height="15.0" fill="rgb(240,60,39)" rx="2" ry="2" />
<text  x="472.90" y="143.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (302 samples, 0.08%)</title><rect x="470.5" y="981" width="1.0" height="15.0" fill="rgb(231,221,40)" rx="2" ry="2" />
<text  x="473.51" y="991.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;0ul, folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (602 samples, 0.16%)</title><rect x="690.8" y="1317" width="1.8" height="15.0" fill="rgb(226,214,34)" rx="2" ry="2" />
<text  x="693.77" y="1327.5" ></text>
</g>
<g >
<title>::Step (33 samples, 0.01%)</title><rect x="242.7" y="1221" width="0.1" height="15.0" fill="rgb(217,176,44)" rx="2" ry="2" />
<text  x="245.72" y="1231.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (189 samples, 0.05%)</title><rect x="830.9" y="1333" width="0.6" height="15.0" fill="rgb(223,219,51)" rx="2" ry="2" />
<text  x="833.87" y="1343.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (161 samples, 0.04%)</title><rect x="530.9" y="1029" width="0.5" height="15.0" fill="rgb(253,217,36)" rx="2" ry="2" />
<text  x="533.86" y="1039.5" ></text>
</g>
<g >
<title>::detail::ConcurrentHashMapSegment&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (115,123 samples, 30.33%)</title><rect x="259.5" y="1333" width="357.9" height="15.0" fill="rgb(206,52,36)" rx="2" ry="2" />
<text  x="262.51" y="1343.5" >::detail::ConcurrentHashMapSegment&lt;std::__cxx11:..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (798 samples, 0.21%)</title><rect x="1015.6" y="1285" width="2.5" height="15.0" fill="rgb(240,90,7)" rx="2" ry="2" />
<text  x="1018.62" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (108 samples, 0.03%)</title><rect x="469.9" y="677" width="0.3" height="15.0" fill="rgb(217,12,18)" rx="2" ry="2" />
<text  x="472.86" y="687.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3,456 samples, 0.91%)</title><rect x="789.5" y="1349" width="10.7" height="15.0" fill="rgb(205,219,5)" rx="2" ry="2" />
<text  x="792.50" y="1359.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (495 samples, 0.13%)</title><rect x="314.2" y="1157" width="1.5" height="15.0" fill="rgb(234,212,32)" rx="2" ry="2" />
<text  x="317.16" y="1167.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (137 samples, 0.04%)</title><rect x="830.4" y="1333" width="0.5" height="15.0" fill="rgb(248,127,34)" rx="2" ry="2" />
<text  x="833.45" y="1343.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (186 samples, 0.05%)</title><rect x="1058.8" y="1285" width="0.6" height="15.0" fill="rgb(239,171,38)" rx="2" ry="2" />
<text  x="1061.78" y="1295.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~deque (2,309 samples, 0.61%)</title><rect x="519.7" y="1109" width="7.1" height="15.0" fill="rgb(216,83,8)" rx="2" ry="2" />
<text  x="522.66" y="1119.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (73 samples, 0.02%)</title><rect x="469.9" y="501" width="0.2" height="15.0" fill="rgb(219,81,21)" rx="2" ry="2" />
<text  x="472.88" y="511.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (111 samples, 0.03%)</title><rect x="798.0" y="1285" width="0.3" height="15.0" fill="rgb(236,136,42)" rx="2" ry="2" />
<text  x="800.96" y="1295.5" ></text>
</g>
<g >
<title>::atomic&lt;bool&gt;::load (38 samples, 0.01%)</title><rect x="469.4" y="997" width="0.1" height="15.0" fill="rgb(222,23,0)" rx="2" ry="2" />
<text  x="472.36" y="1007.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (52 samples, 0.01%)</title><rect x="942.5" y="1301" width="0.2" height="15.0" fill="rgb(218,205,32)" rx="2" ry="2" />
<text  x="945.51" y="1311.5" ></text>
</g>
<g >
<title>::__detail::_Mod_range_hashing::operator (157 samples, 0.04%)</title><rect x="1140.0" y="1253" width="0.5" height="15.0" fill="rgb(231,51,53)" rx="2" ry="2" />
<text  x="1143.04" y="1263.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (104 samples, 0.03%)</title><rect x="697.7" y="1317" width="0.3" height="15.0" fill="rgb(213,137,44)" rx="2" ry="2" />
<text  x="700.66" y="1327.5" ></text>
</g>
<g >
<title>.constprop.0 (73 samples, 0.02%)</title><rect x="1189.6" y="1461" width="0.2" height="15.0" fill="rgb(252,159,7)" rx="2" ry="2" />
<text  x="1192.60" y="1471.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (138 samples, 0.04%)</title><rect x="766.2" y="1301" width="0.4" height="15.0" fill="rgb(233,174,15)" rx="2" ry="2" />
<text  x="769.20" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,453 samples, 0.91%)</title><rect x="1018.7" y="1285" width="10.8" height="15.0" fill="rgb(225,26,29)" rx="2" ry="2" />
<text  x="1021.74" y="1295.5" ></text>
</g>
<g >
<title>::operator&amp; (79 samples, 0.02%)</title><rect x="298.4" y="1269" width="0.3" height="15.0" fill="rgb(241,211,10)" rx="2" ry="2" />
<text  x="301.44" y="1279.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::~allocator (39 samples, 0.01%)</title><rect x="518.9" y="1061" width="0.1" height="15.0" fill="rgb(214,11,26)" rx="2" ry="2" />
<text  x="521.86" y="1071.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink_and_reclaim_unchecked (228 samples, 0.06%)</title><rect x="239.9" y="1413" width="0.7" height="15.0" fill="rgb(254,229,37)" rx="2" ry="2" />
<text  x="242.89" y="1423.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (43 samples, 0.01%)</title><rect x="858.4" y="1333" width="0.1" height="15.0" fill="rgb(253,87,4)" rx="2" ry="2" />
<text  x="861.37" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (60 samples, 0.02%)</title><rect x="737.8" y="1317" width="0.1" height="15.0" fill="rgb(237,57,39)" rx="2" ry="2" />
<text  x="740.76" y="1327.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (166 samples, 0.04%)</title><rect x="850.0" y="1349" width="0.5" height="15.0" fill="rgb(213,190,41)" rx="2" ry="2" />
<text  x="853.03" y="1359.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::release_delete_immutable_descendants (6,572 samples, 1.73%)</title><rect x="506.4" y="1141" width="20.4" height="15.0" fill="rgb(210,51,46)" rx="2" ry="2" />
<text  x="509.40" y="1151.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_only_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::head (167 samples, 0.04%)</title><rect x="430.1" y="1141" width="0.5" height="15.0" fill="rgb(208,133,24)" rx="2" ry="2" />
<text  x="433.10" y="1151.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_initialize_map (4,250 samples, 1.12%)</title><rect x="316.4" y="1189" width="13.2" height="15.0" fill="rgb(226,81,19)" rx="2" ry="2" />
<text  x="319.36" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,606 samples, 0.42%)</title><rect x="1041.7" y="1253" width="5.0" height="15.0" fill="rgb(223,84,7)" rx="2" ry="2" />
<text  x="1044.67" y="1263.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::copy (61 samples, 0.02%)</title><rect x="1051.1" y="1285" width="0.2" height="15.0" fill="rgb(230,179,6)" rx="2" ry="2" />
<text  x="1054.11" y="1295.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::empty (217 samples, 0.06%)</title><rect x="538.5" y="1109" width="0.7" height="15.0" fill="rgb(252,11,2)" rx="2" ry="2" />
<text  x="541.51" y="1119.5" ></text>
</g>
<g >
<title>::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (48 samples, 0.01%)</title><rect x="630.1" y="1253" width="0.2" height="15.0" fill="rgb(207,121,21)" rx="2" ry="2" />
<text  x="633.14" y="1263.5" ></text>
</g>
<g >
<title>perf (379,564 samples, 100.00%)</title><rect x="10.0" y="1493" width="1180.0" height="15.0" fill="rgb(252,15,5)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >perf</text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::getItem (141 samples, 0.04%)</title><rect x="297.1" y="1253" width="0.5" height="15.0" fill="rgb(208,214,0)" rx="2" ry="2" />
<text  x="300.14" y="1263.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::push (694 samples, 0.18%)</title><rect x="529.4" y="1093" width="2.2" height="15.0" fill="rgb(247,184,8)" rx="2" ry="2" />
<text  x="532.42" y="1103.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (244 samples, 0.06%)</title><rect x="469.8" y="981" width="0.7" height="15.0" fill="rgb(230,223,35)" rx="2" ry="2" />
<text  x="472.76" y="991.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (342 samples, 0.09%)</title><rect x="509.4" y="1045" width="1.1" height="15.0" fill="rgb(223,126,43)" rx="2" ry="2" />
<text  x="512.43" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (60 samples, 0.02%)</title><rect x="469.9" y="373" width="0.2" height="15.0" fill="rgb(234,79,1)" rx="2" ry="2" />
<text  x="472.89" y="383.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (260 samples, 0.07%)</title><rect x="558.7" y="1093" width="0.8" height="15.0" fill="rgb(248,105,23)" rx="2" ry="2" />
<text  x="561.67" y="1103.5" ></text>
</g>
<g >
<title>::allocator&lt;char&gt;::~allocator (33 samples, 0.01%)</title><rect x="669.1" y="1253" width="0.1" height="15.0" fill="rgb(244,114,36)" rx="2" ry="2" />
<text  x="672.05" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::acquire_link (42 samples, 0.01%)</title><rect x="298.3" y="1269" width="0.1" height="15.0" fill="rgb(238,86,13)" rx="2" ry="2" />
<text  x="301.30" y="1279.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::getItem (3,025 samples, 0.80%)</title><rect x="298.7" y="1285" width="9.4" height="15.0" fill="rgb(238,84,9)" rx="2" ry="2" />
<text  x="301.69" y="1295.5" ></text>
</g>
<g >
<title>::operator&amp; (44 samples, 0.01%)</title><rect x="571.9" y="1173" width="0.2" height="15.0" fill="rgb(248,202,41)" rx="2" ry="2" />
<text  x="574.95" y="1183.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::copy (224 samples, 0.06%)</title><rect x="661.0" y="1189" width="0.7" height="15.0" fill="rgb(225,150,9)" rx="2" ry="2" />
<text  x="663.99" y="1199.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (567 samples, 0.15%)</title><rect x="540.7" y="1061" width="1.8" height="15.0" fill="rgb(206,123,39)" rx="2" ry="2" />
<text  x="543.72" y="1071.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (37 samples, 0.01%)</title><rect x="564.2" y="1141" width="0.1" height="15.0" fill="rgb(224,105,26)" rx="2" ry="2" />
<text  x="567.22" y="1151.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (212 samples, 0.06%)</title><rect x="892.2" y="1317" width="0.6" height="15.0" fill="rgb(228,37,21)" rx="2" ry="2" />
<text  x="895.16" y="1327.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (9,968 samples, 2.63%)</title><rect x="352.7" y="1157" width="31.0" height="15.0" fill="rgb(254,59,47)" rx="2" ry="2" />
<text  x="355.70" y="1167.5" >::..</text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::begin (288 samples, 0.08%)</title><rect x="525.1" y="1093" width="0.9" height="15.0" fill="rgb(225,3,52)" rx="2" ry="2" />
<text  x="528.08" y="1103.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (155 samples, 0.04%)</title><rect x="697.5" y="1333" width="0.5" height="15.0" fill="rgb(209,171,44)" rx="2" ry="2" />
<text  x="700.50" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3,873 samples, 1.02%)</title><rect x="930.5" y="1301" width="12.0" height="15.0" fill="rgb(248,222,46)" rx="2" ry="2" />
<text  x="933.47" y="1311.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::unlink (60 samples, 0.02%)</title><rect x="469.9" y="309" width="0.2" height="15.0" fill="rgb(253,193,33)" rx="2" ry="2" />
<text  x="472.89" y="319.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::exchange (77 samples, 0.02%)</title><rect x="429.2" y="1157" width="0.2" height="15.0" fill="rgb(211,86,54)" rx="2" ry="2" />
<text  x="432.18" y="1167.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (104 samples, 0.03%)</title><rect x="672.5" y="1301" width="0.3" height="15.0" fill="rgb(237,140,6)" rx="2" ry="2" />
<text  x="675.52" y="1311.5" ></text>
</g>
<g >
<title>::estimateSpaceNeeded&lt;unsigned long&gt; (11,062 samples, 2.91%)</title><rect x="966.6" y="1301" width="34.4" height="15.0" fill="rgb(254,159,19)" rx="2" ry="2" />
<text  x="969.57" y="1311.5" >::..</text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::empty (241 samples, 0.06%)</title><rect x="507.3" y="1125" width="0.8" height="15.0" fill="rgb(250,186,31)" rx="2" ry="2" />
<text  x="510.32" y="1135.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::reclaim_safe_list (56 samples, 0.01%)</title><rect x="469.9" y="245" width="0.2" height="15.0" fill="rgb(220,217,24)" rx="2" ry="2" />
<text  x="472.90" y="255.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (49 samples, 0.01%)</title><rect x="542.5" y="1061" width="0.1" height="15.0" fill="rgb(211,59,48)" rx="2" ry="2" />
<text  x="545.48" y="1071.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (108 samples, 0.03%)</title><rect x="469.9" y="645" width="0.3" height="15.0" fill="rgb(241,203,49)" rx="2" ry="2" />
<text  x="472.86" y="655.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::empty (192 samples, 0.05%)</title><rect x="507.5" y="1109" width="0.5" height="15.0" fill="rgb(230,3,5)" rx="2" ry="2" />
<text  x="510.45" y="1119.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::copy (47 samples, 0.01%)</title><rect x="770.4" y="1317" width="0.1" height="15.0" fill="rgb(242,205,16)" rx="2" ry="2" />
<text  x="773.39" y="1327.5" ></text>
</g>
<g >
<title>::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::tuple&lt;true, true&gt; (49 samples, 0.01%)</title><rect x="672.4" y="1285" width="0.1" height="15.0" fill="rgb(206,134,24)" rx="2" ry="2" />
<text  x="675.36" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::set_cohort_tag (149 samples, 0.04%)</title><rect x="674.8" y="1301" width="0.4" height="15.0" fill="rgb(237,20,30)" rx="2" ry="2" />
<text  x="677.76" y="1311.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_map_allocator (168 samples, 0.04%)</title><rect x="554.1" y="1061" width="0.6" height="15.0" fill="rgb(208,111,33)" rx="2" ry="2" />
<text  x="557.14" y="1071.5" ></text>
</g>
<g >
<title>::__aligned_buffer&lt;void const*&gt;::_M_ptr (62 samples, 0.02%)</title><rect x="1143.3" y="1189" width="0.2" height="15.0" fill="rgb(237,27,23)" rx="2" ry="2" />
<text  x="1146.31" y="1199.5" ></text>
</g>
<g >
<title>::hazptr_obj&lt;std::atomic&gt;::pre_retire_check (425 samples, 0.11%)</title><rect x="342.1" y="1237" width="1.4" height="15.0" fill="rgb(230,90,17)" rx="2" ry="2" />
<text  x="345.13" y="1247.5" ></text>
</g>
<g >
<title>::_Head_base&lt;1ul, unsigned long&amp;, false&gt;::_Head_base (92 samples, 0.02%)</title><rect x="692.0" y="1285" width="0.3" height="15.0" fill="rgb(237,176,9)" rx="2" ry="2" />
<text  x="694.99" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::downgrade_retire_immutable_descendants (55 samples, 0.01%)</title><rect x="308.4" y="1269" width="0.1" height="15.0" fill="rgb(242,14,0)" rx="2" ry="2" />
<text  x="311.36" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (12,568 samples, 3.31%)</title><rect x="731.5" y="1333" width="39.0" height="15.0" fill="rgb(240,40,5)" rx="2" ry="2" />
<text  x="734.46" y="1343.5" >::_..</text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::exchange_head (78 samples, 0.02%)</title><rect x="429.2" y="1173" width="0.2" height="15.0" fill="rgb(248,131,24)" rx="2" ry="2" />
<text  x="432.17" y="1183.5" ></text>
</g>
<g >
<title>::unique_lock&lt;std::mutex&gt;::~unique_lock (186 samples, 0.05%)</title><rect x="616.1" y="1285" width="0.6" height="15.0" fill="rgb(220,205,18)" rx="2" ry="2" />
<text  x="619.13" y="1295.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (780 samples, 0.21%)</title><rect x="822.5" y="1317" width="2.5" height="15.0" fill="rgb(254,60,22)" rx="2" ry="2" />
<text  x="825.54" y="1327.5" ></text>
</g>
<g >
<title>::hazptr_domain_push_retired&lt;std::atomic&gt; (659 samples, 0.17%)</title><rect x="429.8" y="1189" width="2.0" height="15.0" fill="rgb(245,85,30)" rx="2" ry="2" />
<text  x="432.76" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (70 samples, 0.02%)</title><rect x="470.7" y="837" width="0.2" height="15.0" fill="rgb(213,21,17)" rx="2" ry="2" />
<text  x="473.68" y="847.5" ></text>
</g>
<g >
<title>::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; (43 samples, 0.01%)</title><rect x="320.4" y="1141" width="0.1" height="15.0" fill="rgb(216,120,2)" rx="2" ry="2" />
<text  x="323.38" y="1151.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (2,165 samples, 0.57%)</title><rect x="1175.6" y="1333" width="6.7" height="15.0" fill="rgb(232,210,12)" rx="2" ry="2" />
<text  x="1178.62" y="1343.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::allocate (119 samples, 0.03%)</title><rect x="546.3" y="1029" width="0.3" height="15.0" fill="rgb(211,171,52)" rx="2" ry="2" />
<text  x="549.27" y="1039.5" ></text>
</g>
<g >
<title>::__atomic_base&lt;unsigned int&gt;::__atomic_base (145 samples, 0.04%)</title><rect x="624.1" y="1269" width="0.5" height="15.0" fill="rgb(224,83,40)" rx="2" ry="2" />
<text  x="627.14" y="1279.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (140 samples, 0.04%)</title><rect x="458.8" y="1189" width="0.5" height="15.0" fill="rgb(222,103,47)" rx="2" ry="2" />
<text  x="461.83" y="1199.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_node (344 samples, 0.09%)</title><rect x="515.6" y="1045" width="1.0" height="15.0" fill="rgb(209,70,40)" rx="2" ry="2" />
<text  x="518.57" y="1055.5" ></text>
</g>
<g >
<title>::hazptr_obj_base&lt;folly::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (60 samples, 0.02%)</title><rect x="469.9" y="389" width="0.2" height="15.0" fill="rgb(238,173,38)" rx="2" ry="2" />
<text  x="472.89" y="399.5" ></text>
</g>
<g >
<title>::hazptr_domain&lt;std::atomic&gt;::push_list (81 samples, 0.02%)</title><rect x="460.1" y="1157" width="0.3" height="15.0" fill="rgb(251,104,52)" rx="2" ry="2" />
<text  x="463.14" y="1167.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::deque (39 samples, 0.01%)</title><rect x="471.2" y="917" width="0.1" height="15.0" fill="rgb(238,156,40)" rx="2" ry="2" />
<text  x="474.18" y="927.5" ></text>
</g>
<g >
<title>::_Tuple_impl&lt;1ul, unsigned long&amp;&gt;::_Tuple_impl (179 samples, 0.05%)</title><rect x="691.7" y="1301" width="0.6" height="15.0" fill="rgb(222,170,35)" rx="2" ry="2" />
<text  x="694.72" y="1311.5" ></text>
</g>
<g >
<title>::atomic&lt;folly::hazptr_obj&lt;std::atomic&gt;*&gt;::compare_exchange_weak (123 samples, 0.03%)</title><rect x="468.5" y="965" width="0.4" height="15.0" fill="rgb(212,202,50)" rx="2" ry="2" />
<text  x="471.54" y="975.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,602 samples, 0.42%)</title><rect x="500.7" y="997" width="5.0" height="15.0" fill="rgb(231,215,53)" rx="2" ry="2" />
<text  x="503.73" y="1007.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2,592 samples, 0.68%)</title><rect x="1051.3" y="1301" width="8.1" height="15.0" fill="rgb(219,189,53)" rx="2" ry="2" />
<text  x="1054.30" y="1311.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (237 samples, 0.06%)</title><rect x="522.2" y="1061" width="0.8" height="15.0" fill="rgb(243,71,50)" rx="2" ry="2" />
<text  x="525.22" y="1071.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (35 samples, 0.01%)</title><rect x="319.7" y="1157" width="0.1" height="15.0" fill="rgb(223,145,12)" rx="2" ry="2" />
<text  x="322.67" y="1167.5" ></text>
</g>
<g >
<title>::move&lt;std::allocator&lt;char&gt;&amp;&gt; (461 samples, 0.12%)</title><rect x="856.9" y="1317" width="1.5" height="15.0" fill="rgb(231,70,7)" rx="2" ry="2" />
<text  x="859.93" y="1327.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::back (303 samples, 0.08%)</title><rect x="530.4" y="1045" width="1.0" height="15.0" fill="rgb(249,72,37)" rx="2" ry="2" />
<text  x="533.42" y="1055.5" ></text>
</g>
<g >
<title>::_Hashtable&lt;void const*, void const*, std::allocator&lt;void const*&gt;, std::__detail::_Identity, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (1,550 samples, 0.41%)</title><rect x="1140.9" y="1269" width="4.8" height="15.0" fill="rgb(210,17,38)" rx="2" ry="2" />
<text  x="1143.90" y="1279.5" ></text>
</g>
<g >
<title>::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (149,250 samples, 39.32%)</title><rect x="248.5" y="1365" width="464.0" height="15.0" fill="rgb(250,222,15)" rx="2" ry="2" />
<text  x="251.52" y="1375.5" >::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_..</text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count (95 samples, 0.03%)</title><rect x="471.5" y="1045" width="0.3" height="15.0" fill="rgb(205,99,37)" rx="2" ry="2" />
<text  x="474.54" y="1055.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::_M_max_size (47 samples, 0.01%)</title><rect x="324.7" y="1125" width="0.2" height="15.0" fill="rgb(242,213,0)" rx="2" ry="2" />
<text  x="327.73" y="1135.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (69 samples, 0.02%)</title><rect x="724.1" y="1365" width="0.2" height="15.0" fill="rgb(239,24,34)" rx="2" ry="2" />
<text  x="727.06" y="1375.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (52 samples, 0.01%)</title><rect x="1182.6" y="1333" width="0.1" height="15.0" fill="rgb(215,90,7)" rx="2" ry="2" />
<text  x="1185.56" y="1343.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (764 samples, 0.20%)</title><rect x="934.2" y="1269" width="2.4" height="15.0" fill="rgb(206,27,36)" rx="2" ry="2" />
<text  x="937.19" y="1279.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (197 samples, 0.05%)</title><rect x="239.9" y="1365" width="0.6" height="15.0" fill="rgb(221,122,38)" rx="2" ry="2" />
<text  x="242.93" y="1375.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::check_threshold_push (38 samples, 0.01%)</title><rect x="469.5" y="1013" width="0.1" height="15.0" fill="rgb(221,186,44)" rx="2" ry="2" />
<text  x="472.48" y="1023.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_M_set_node (512 samples, 0.13%)</title><rect x="516.8" y="1061" width="1.6" height="15.0" fill="rgb(248,198,39)" rx="2" ry="2" />
<text  x="519.77" y="1071.5" ></text>
</g>
<g >
<title>::allocator_traits&lt;std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt; &gt;::deallocate (241 samples, 0.06%)</title><rect x="554.9" y="1061" width="0.7" height="15.0" fill="rgb(241,84,25)" rx="2" ry="2" />
<text  x="557.85" y="1071.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (3,651 samples, 0.96%)</title><rect x="508.1" y="1125" width="11.3" height="15.0" fill="rgb(235,181,37)" rx="2" ry="2" />
<text  x="511.07" y="1135.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,987 samples, 0.52%)</title><rect x="748.9" y="1317" width="6.2" height="15.0" fill="rgb(213,184,9)" rx="2" ry="2" />
<text  x="751.93" y="1327.5" ></text>
</g>
<g >
<title>::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, false&gt;::_Head_base (225 samples, 0.06%)</title><rect x="628.0" y="1237" width="0.7" height="15.0" fill="rgb(230,129,51)" rx="2" ry="2" />
<text  x="630.99" y="1247.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (974 samples, 0.26%)</title><rect x="468.5" y="1029" width="3.0" height="15.0" fill="rgb(212,128,6)" rx="2" ry="2" />
<text  x="471.49" y="1039.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::pop_back (137 samples, 0.04%)</title><rect x="539.3" y="1109" width="0.4" height="15.0" fill="rgb(241,48,13)" rx="2" ry="2" />
<text  x="542.27" y="1119.5" ></text>
</g>
<g >
<title>::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt;::stack&lt;std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;, void&gt; (3,667 samples, 0.97%)</title><rect x="539.7" y="1125" width="11.4" height="15.0" fill="rgb(208,161,16)" rx="2" ry="2" />
<text  x="542.70" y="1135.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (628 samples, 0.17%)</title><rect x="950.0" y="1269" width="1.9" height="15.0" fill="rgb(213,0,45)" rx="2" ry="2" />
<text  x="952.99" y="1279.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (541 samples, 0.14%)</title><rect x="1022.8" y="1269" width="1.7" height="15.0" fill="rgb(219,203,46)" rx="2" ry="2" />
<text  x="1025.82" y="1279.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (84 samples, 0.02%)</title><rect x="411.1" y="1189" width="0.3" height="15.0" fill="rgb(206,35,49)" rx="2" ry="2" />
<text  x="414.12" y="1199.5" ></text>
</g>
<g >
<title>::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, false&gt;::_Head_base (89 samples, 0.02%)</title><rect x="627.2" y="1253" width="0.3" height="15.0" fill="rgb(221,78,9)" rx="2" ry="2" />
<text  x="630.20" y="1263.5" ></text>
</g>
<g >
<title>::operator&amp; (45 samples, 0.01%)</title><rect x="560.8" y="1109" width="0.1" height="15.0" fill="rgb(216,222,12)" rx="2" ry="2" />
<text  x="563.80" y="1119.5" ></text>
</g>
<g >
<title>::hazptr_detail::shared_head_tail_list&lt;folly::hazptr_obj&lt;std::atomic&gt;, std::atomic&gt;::pop_all (218 samples, 0.06%)</title><rect x="429.1" y="1189" width="0.7" height="15.0" fill="rgb(205,58,20)" rx="2" ry="2" />
<text  x="432.08" y="1199.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12,177 samples, 3.21%)</title><rect x="631.0" y="1253" width="37.8" height="15.0" fill="rgb(218,33,53)" rx="2" ry="2" />
<text  x="633.96" y="1263.5" >::_..</text>
</g>
<g >
<title>::__detail::_Hash_code_base&lt;void const*, void const*, std::__detail::_Identity, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (184 samples, 0.05%)</title><rect x="1140.0" y="1269" width="0.5" height="15.0" fill="rgb(242,75,17)" rx="2" ry="2" />
<text  x="1142.96" y="1279.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_initialize_map (2,567 samples, 0.68%)</title><rect x="542.9" y="1077" width="8.0" height="15.0" fill="rgb(209,147,42)" rx="2" ry="2" />
<text  x="545.90" y="1087.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (233 samples, 0.06%)</title><rect x="850.5" y="1349" width="0.8" height="15.0" fill="rgb(205,220,12)" rx="2" ry="2" />
<text  x="853.55" y="1359.5" ></text>
</g>
<g >
<title>.isra.0 (3,443 samples, 0.91%)</title><rect x="227.1" y="1477" width="10.7" height="15.0" fill="rgb(249,202,17)" rx="2" ry="2" />
<text  x="230.10" y="1487.5" ></text>
</g>
<g >
<title>::forward&lt;bool&gt; (59 samples, 0.02%)</title><rect x="688.6" y="1285" width="0.2" height="15.0" fill="rgb(206,185,24)" rx="2" ry="2" />
<text  x="691.60" y="1295.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::~ValueHolder (9,697 samples, 2.55%)</title><rect x="476.0" y="1077" width="30.1" height="15.0" fill="rgb(245,36,23)" rx="2" ry="2" />
<text  x="478.97" y="1087.5" >::..</text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~_Deque_base (2,234 samples, 0.59%)</title><rect x="331.4" y="1205" width="7.0" height="15.0" fill="rgb(205,97,34)" rx="2" ry="2" />
<text  x="334.42" y="1215.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::getItem (416 samples, 0.11%)</title><rect x="684.0" y="1333" width="1.3" height="15.0" fill="rgb(225,14,33)" rx="2" ry="2" />
<text  x="686.97" y="1343.5" ></text>
</g>
<g >
<title>::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* const&amp;&gt; (43 samples, 0.01%)</title><rect x="1006.2" y="1301" width="0.2" height="15.0" fill="rgb(242,205,54)" rx="2" ry="2" />
<text  x="1009.25" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (724 samples, 0.19%)</title><rect x="914.8" y="1269" width="2.2" height="15.0" fill="rgb(211,167,22)" rx="2" ry="2" />
<text  x="917.78" y="1279.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::BucketTable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (114,228 samples, 30.09%)</title><rect x="261.6" y="1301" width="355.1" height="15.0" fill="rgb(242,108,19)" rx="2" ry="2" />
<text  x="264.59" y="1311.5" >::detail::concurrenthashmap::bucket::BucketTable..</text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (9,462 samples, 2.49%)</title><rect x="851.3" y="1349" width="29.5" height="15.0" fill="rgb(212,186,42)" rx="2" ry="2" />
<text  x="854.34" y="1359.5" >::..</text>
</g>
<g >
<title>::allocator&lt;char&gt;::~allocator (47 samples, 0.01%)</title><rect x="831.6" y="1349" width="0.1" height="15.0" fill="rgb(234,38,32)" rx="2" ry="2" />
<text  x="834.58" y="1359.5" ></text>
</g>
<g >
<title>::operator&amp; (74 samples, 0.02%)</title><rect x="253.3" y="1317" width="0.2" height="15.0" fill="rgb(205,109,6)" rx="2" ry="2" />
<text  x="256.26" y="1327.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (113 samples, 0.03%)</title><rect x="880.2" y="1333" width="0.3" height="15.0" fill="rgb(222,113,16)" rx="2" ry="2" />
<text  x="883.17" y="1343.5" ></text>
</g>
<g >
<title>::Step (45 samples, 0.01%)</title><rect x="242.7" y="1365" width="0.1" height="15.0" fill="rgb(232,96,49)" rx="2" ry="2" />
<text  x="245.68" y="1375.5" ></text>
</g>
<g >
<title>::forward&lt;folly::ConcurrentHashMap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;unsigned char&gt;,  (80 samples, 0.02%)</title><rect x="689.7" y="1333" width="0.3" height="15.0" fill="rgb(240,31,3)" rx="2" ry="2" />
<text  x="692.75" y="1343.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::end (276 samples, 0.07%)</title><rect x="526.0" y="1093" width="0.8" height="15.0" fill="rgb(208,9,54)" rx="2" ry="2" />
<text  x="528.98" y="1103.5" ></text>
</g>
<g >
<title>::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::~deque (2,346 samples, 0.62%)</title><rect x="552.2" y="1109" width="7.3" height="15.0" fill="rgb(243,89,48)" rx="2" ry="2" />
<text  x="555.18" y="1119.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (280 samples, 0.07%)</title><rect x="652.1" y="1205" width="0.9" height="15.0" fill="rgb(240,208,30)" rx="2" ry="2" />
<text  x="655.10" y="1215.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (50 samples, 0.01%)</title><rect x="629.1" y="1269" width="0.2" height="15.0" fill="rgb(235,62,30)" rx="2" ry="2" />
<text  x="632.10" y="1279.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (40 samples, 0.01%)</title><rect x="253.6" y="1349" width="0.2" height="15.0" fill="rgb(247,28,5)" rx="2" ry="2" />
<text  x="256.63" y="1359.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_M_allocate_node (703 samples, 0.19%)</title><rect x="323.3" y="1157" width="2.2" height="15.0" fill="rgb(249,228,15)" rx="2" ry="2" />
<text  x="326.30" y="1167.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt;::operator (10,501 samples, 2.77%)</title><rect x="473.7" y="1109" width="32.7" height="15.0" fill="rgb(237,226,7)" rx="2" ry="2" />
<text  x="476.72" y="1119.5" >::..</text>
</g>
<g >
<title>.constprop.0 (2,179 samples, 0.57%)</title><rect x="218.9" y="1477" width="6.7" height="15.0" fill="rgb(250,181,21)" rx="2" ry="2" />
<text  x="221.86" y="1487.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt;::allocate (79 samples, 0.02%)</title><rect x="547.9" y="1013" width="0.3" height="15.0" fill="rgb(220,172,4)" rx="2" ry="2" />
<text  x="550.93" y="1023.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (200 samples, 0.05%)</title><rect x="1060.8" y="1301" width="0.6" height="15.0" fill="rgb(217,134,16)" rx="2" ry="2" />
<text  x="1063.81" y="1311.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1,406 samples, 0.37%)</title><rect x="912.7" y="1285" width="4.4" height="15.0" fill="rgb(245,163,25)" rx="2" ry="2" />
<text  x="915.72" y="1295.5" ></text>
</g>
<g >
<title>::hazptr_deleter&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_deleter (114 samples, 0.03%)</title><rect x="674.4" y="1301" width="0.4" height="15.0" fill="rgb(234,211,36)" rx="2" ry="2" />
<text  x="677.40" y="1311.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;::push_links&lt;std::stack&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::deque&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt; &gt; &gt; (82 samples, 0.02%)</title><rect x="507.1" y="1109" width="0.2" height="15.0" fill="rgb(247,68,45)" rx="2" ry="2" />
<text  x="510.06" y="1119.5" ></text>
</g>
<g >
<title>::_Deque_base&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, std::allocator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&gt; &gt;::_Deque_impl::_Deque_impl (978 samples, 0.26%)</title><rect x="313.2" y="1189" width="3.0" height="15.0" fill="rgb(209,185,19)" rx="2" ry="2" />
<text  x="316.16" y="1199.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::ValueHolder&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic, void&gt;::CountedItem::~CountedItem (133 samples, 0.04%)</title><rect x="240.1" y="1317" width="0.4" height="15.0" fill="rgb(243,162,30)" rx="2" ry="2" />
<text  x="243.12" y="1327.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (172 samples, 0.05%)</title><rect x="798.7" y="1253" width="0.5" height="15.0" fill="rgb(233,152,32)" rx="2" ry="2" />
<text  x="801.65" y="1263.5" ></text>
</g>
<g >
<title>::hazptr_obj_linked&lt;std::atomic&gt;::count (1,864 samples, 0.49%)</title><rect x="532.2" y="1109" width="5.8" height="15.0" fill="rgb(238,24,34)" rx="2" ry="2" />
<text  x="535.21" y="1119.5" ></text>
</g>
<g >
<title>::__new_allocator&lt;char&gt;::_M_max_size (69 samples, 0.02%)</title><rect x="925.4" y="1253" width="0.3" height="15.0" fill="rgb(239,63,24)" rx="2" ry="2" />
<text  x="928.44" y="1263.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::_Deque_iterator (212 samples, 0.06%)</title><rect x="558.8" y="1077" width="0.7" height="15.0" fill="rgb(223,62,43)" rx="2" ry="2" />
<text  x="561.82" y="1087.5" ></text>
</g>
<g >
<title>::char_traits&lt;char&gt;::assign (620 samples, 0.16%)</title><rect x="655.1" y="1205" width="1.9" height="15.0" fill="rgb(217,157,40)" rx="2" ry="2" />
<text  x="658.09" y="1215.5" ></text>
</g>
<g >
<title>::addressof&lt;char const&gt; (1,047 samples, 0.28%)</title><rect x="938.5" y="1237" width="3.2" height="15.0" fill="rgb(236,189,52)" rx="2" ry="2" />
<text  x="941.47" y="1247.5" ></text>
</g>
<g >
<title>::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (716 samples, 0.19%)</title><rect x="782.6" y="1365" width="2.2" height="15.0" fill="rgb(227,26,53)" rx="2" ry="2" />
<text  x="785.62" y="1375.5" ></text>
</g>
<g >
<title>::__is_constant_evaluated (42 samples, 0.01%)</title><rect x="336.6" y="1157" width="0.1" height="15.0" fill="rgb(252,77,8)" rx="2" ry="2" />
<text  x="339.60" y="1167.5" ></text>
</g>
<g >
<title>::detail::concurrenthashmap::HazptrTableDeleter::operator (244 samples, 0.06%)</title><rect x="469.8" y="933" width="0.7" height="15.0" fill="rgb(254,40,2)" rx="2" ry="2" />
<text  x="472.76" y="943.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::retire (58 samples, 0.02%)</title><rect x="469.9" y="293" width="0.2" height="15.0" fill="rgb(206,7,40)" rx="2" ry="2" />
<text  x="472.89" y="303.5" ></text>
</g>
<g >
<title>::_Deque_iterator&lt;folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;*&amp;, folly::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;**&gt;::operator-- (59 samples, 0.02%)</title><rect x="530.7" y="1029" width="0.2" height="15.0" fill="rgb(213,111,50)" rx="2" ry="2" />
<text  x="533.68" y="1039.5" ></text>
</g>
<g >
<title>::hazptr_obj_base_linked&lt;folly::detail::concurrenthashmap::bucket::NodeT&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;unsigned char&gt;, std::atomic&gt;, std::atomic, folly::detail::concurrenthashmap::HazptrDeleter&lt;std::allocator&lt;unsigned char&gt; &gt; &gt;::set_reclaim (91 samples, 0.02%)</title><rect x="470.2" y="789" width="0.3" height="15.0" fill="rgb(238,149,22)" rx="2" ry="2" />
<text  x="473.20" y="799.5" ></text>
</g>
<g >
<title>::hazptr_obj_cohort&lt;std::atomic&gt;::push_obj (232 samples, 0.06%)</title><rect x="469.8" y="837" width="0.7" height="15.0" fill="rgb(235,188,49)" rx="2" ry="2" />
<text  x="472.77" y="847.5" ></text>
</g>
</g>
</svg>
